#include <stdio.h>
#include <stdlib.h>

#define MAX 1
#define MIN -1

#define INFINITY 99999;

typedef struct GameState {
  int move;
  int val;
} GameState;

GameState negaMax(int state, int color){
  printf("Turn: %d; state: %d\n", color, state);
  int move;
  GameState best;
  if (state == 1) {
    /* There is only 1 match remaining; terminal state */
    best.val = -1 * color;
    best.move = 1;
  } else {
    best.val = -INFINITY;
    for (move = 1; move <= 3; move++) {
      // For each possible action (taking 1-3 matches)
      if (state - move > 0) {
	// If the move is legal
	int m = -1 * negaMax(state - move, -1 * color).val;
	//best.val = max(best.val, -1 * negaMax(state - move, -1 * color).val);
	if (m > best.val){
	  best.val = m;
	  best.move = move;
	}
      }
    }
  }

  return best;
}

void playNim(int state) {
  int turn = 1;
  while (state != 1) {
    int action = negaMax(state, turn).move;
    printf("%d: %s takes %d\n", state, 
	   (turn==MAX ? "Max" : "Min"), action);
    state = state - action;
    turn = -turn;
  }
}

int main(int argc, char *argv[]) {
  if ((argc != 2) || (atoi(argv[1]) < 3)) {
    fprintf(stderr, "Usage: %s <number of sticks>, where ", argv[0]);
    fprintf(stderr, "<number of sticks> must be at least 3!\n");
    return -1;
  }

  playNim(atoi(argv[1]));

  return 0;
}
