#include <stdio.h>
#include <stdlib.h>

#define MAX 1
#define MIN -1

#define INFINITY 9999999

int* negaMax(int state, int color){
  int move, bestmove, val = -INFINITY;
  if (state == 1) {
    val = -1 * color;
    bestmove = 1;
  } else {
    for (move = 1; move <= 3; move++) {
      if (state - move > 0) { /* legal move */
	int m = negaMax(state - move, -1 * color)[0];
	if (m > val){
	  val = m;
	  bestmove = move;
	}
      }
    }
  }

  int* out = malloc(2*sizeof(int));
  out[0] = val;
  out[1] = bestmove;

  return out;
}

void playNim(int state) {
  int turn = 1;
  while (state != 1) {
    int action = negaMax(state, turn)[1];
    printf("%d: %s takes %d\n", state, 
	   (turn==MAX ? "Max" : "Min"), action);
    state = state - action;
    turn = -turn;
  }
  printf("1: %s looses\n", (turn==MAX ? "Max" : "Min"));
}

int main(int argc, char *argv[]) {
  if ((argc != 2) || (atoi(argv[1]) < 3)) {
    fprintf(stderr, "Usage: %s <number of sticks>, where ", argv[0]);
    fprintf(stderr, "<number of sticks> must be at least 3!\n");
    return -1;
  }

  playNim(atoi(argv[1]));

  return 0;
}
