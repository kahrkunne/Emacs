#!/usr/bin/python
import sys
import os
import secrets

import tornado.ioloop
import tornado.web
from tornado.web import url
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

import app.pages as pages
from app.conf import load_conf, save_conf

from constants import (API_MIME_TYPE_PUBLIC, API_MIME_TYPE_ADMIN)

def make_app(session, conf):
    app_config = {'db': session, 'conf':conf,
                  'API_MIME_TYPE_PUBLIC':API_MIME_TYPE_PUBLIC, 'API_MIME_TYPE_ADMIN':API_MIME_TYPE_ADMIN}
    return tornado.web.Application(
        [
            url(r"/logout/?", pages.Logout, app_config, name="logout"),
            url(r"/?", pages.Home, app_config, name="home"),
            url(r"/anime/(\d+)/?(.*)", pages.AnimePage, app_config, name="anime"),
            url(r"/manga/(\d+)/?(.*)", pages.MangaPage, app_config, name="manga"),
            url(r"/person/(\d+)/?(.*)", pages.PersonPage, app_config, name="person"),
            url(r"/character/(\d+)/?(.*)", pages.CharacterPage, app_config, name="character"),
            url(r"/search/?", pages.Search, app_config, name="search"),
            url(r"/login/?", pages.Login, app_config, name="login"),
            url(r"/register/?", pages.Register, app_config, name="register"),
            url(r"/animelist/([\w-]+)/?(\d+)?/?", pages.AnimeList, app_config, name="animelist"),
            url(r"/user/([\w-]+)/settings/?([\w-]+)?/?", pages.Settings, app_config, name="settings"),
            url(r"/user/([\w-]+)/dashboard/?", pages.Dashboard, app_config, name="dashboard"),
            url(r"/user/([\w-]+)/import/?", pages.AnimelistImport, app_config, name="import"),
        ],
        static_path=os.path.join(os.path.dirname(__file__), "res"),
        debug=conf['debug'],
        cookie_secret=conf["secret"],
        login_url="/login")

if __name__ == "__main__":
    conf = load_conf(sys.argv[1])
    if not conf.get("secret"):
        conf["secret"] = secrets.token_hex(128)
        save_conf(sys.argv[1], conf)

    engine = create_engine('postgresql://%s:%s@%s:%s/%s' %
                           (conf['db']['user'], conf['db']['pw'], conf['db']['address'],
                            conf['db']['port'], conf['db']['database']), echo=False)

    Session = sessionmaker(bind=engine)
    session = Session()

    app = make_app(session, conf)
    app.listen(8888)
    tornado.ioloop.IOLoop.current().start()
