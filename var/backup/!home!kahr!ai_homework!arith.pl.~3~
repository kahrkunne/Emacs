% isnumber(X) is true if X is a isnumber

even(0).
even(s(s(X))) :- even(X).

odd(1).
odd(s(s(X))) :- odd(X).

div2(N,D) :- plus(N,N,D).

divi2(N,D) :- times(N,s(s(0)),D).

log(X,B,N) :- pow(B,N,X).

isnumber(0).
isnumber(s(X)) :- isnumber(X).

% plus(X,Y,Z) is true if X + Y = Z

plus(0,X,X) :- isnumber(X).
plus(s(X),Y,s(Z)) :- plus(X,Y,Z).

% minus(X,Y,Z) is true if X - Y =Z

minus(X,0,X) :- isnumber(X).
minus(s(X),s(Y),Z) :- minus(X,Y,Z).

% times(X,Y,Z) is true if X * Y = Z

times(X,0,0) :- isnumber(X).
times(X,s(Y),Z) :- times(X,Y,Z1), plus(X,Z1,Z).

% pow(X,Y,Z) is true if X^Y = Z

pow(X,0,s(0)) :- isnumber(X).
pow(X,s(Y),Z) :- pow(X,Y,Z1), times(X,Z1,Z).

% Example queries:
% Isnumbers are represented as successors of 0. For example, 2 is s(s(0)).
% 2+2=4 is plus(s(s(0)), s(s(0)), s(s(s(s(0)))))
% 3*2=? is times(s(s(s(0))), s(s(0)), X)

fib(0,0).
fib(s(0),s(0)).
fib(A,B) :- A=s(s(X)), fib(X,Y), fib(s(X),Z), plus(Y,Z,B).

power(X,0,s(0)) :- isnumber(X).
power(X,N,Y) :- even(N), times(X,X,A), div2(N,B), power(A, B, Y).
power(X,N,Y) :- odd(N), minus(N, s(0), A), times(X, B, Y), power(X, A, B).

eq(0,0).
eq(X, Y) :- s(A) = X, s(B) = Y, eq(A,B).
bt(0, s(0)).
bt(X,Y) :- s(A) = X, s(B) = Y, bt(X, Y).

