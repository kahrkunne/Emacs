import tornado
from sqlalchemy import or_
from passlib.hash import scrypt
from tornado.web import HTTPError

from . import Page
from ..models import User

from .templates.login import login

class Login(Page):
    template = login
    @tornado.web.addslash
    def get(self):
        self.write(self.render())

    @tornado.web.addslash
    def post(self):
        email = self.get_argument('email', "")
        pw = self.get_argument('password', "")
        response = None

        try:
            user = self.db.query(User).filter(or_(User.name == email, User.email == email)).one()
            if not scrypt.verify(pw, user.password):
                raise ValueError()

            response = {"user_id": str(user.uid),
                        "username": user.name,
                        "dname": user.display_name}

            self.set_secure_cookie("user_id", str(user.uid))
            self.set_secure_cookie("username", user.name)
            self.set_secure_cookie("dname", user.display_name)
            self.write(response)

        except Exception as e:
            raise HTTPError(401)
