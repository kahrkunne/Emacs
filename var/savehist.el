;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(counsel-M-x-history counsel-describe-symbol-history erc-nick-history-list erc-server-history-list ido-file-history venv-history counsel-locate-history command-history exwm-workspace--switch-history shell-command-history query-replace-history query-replace-from-to-history magit-revision-history counsel-git-grep-history swiper-history ivy-history org-read-date-history lispy-tag-history file-name-history calc-alg-entry-history calc-extended-command-history face-name-history extended-command-history buffer-name-history regexp-history woman-topic-history minibuffer-history helm-M-x-input-history evil-ex-history read-expression-history))
(setq counsel-M-x-history '(#("describe-face" 0 13 (ivy-index 0)) #("what-fa" 0 7 (ivy-index 0)) #("list-colors" 0 11 (ivy-index 0)) #("treemac" 0 7 (ivy-index 0)) #("treemacs-follow" 0 15 (ivy-index 0)) #("lispy-mode" 0 10 (ivy-index 0)) #("package-install" 0 15 (ivy-index 0)) #("treemacs" 0 8 (ivy-index 1))))
(setq counsel-describe-symbol-history '(#("mingus mode line" 0 16 (ivy-index 9)) #("eshell-history-file" 0 19 (ivy-index 0)) #("comint-prompt-" 0 14 (ivy-index 0)) "isearch-message-function" "dired-listing-switches" #("dired-dwim-" 0 11 (ivy-index 0)) #("completion-at-poin" 0 18 (ivy-index 0)) #("ivy display function" 0 20 (ivy-index 0)) "image-dired-cmd-create-thumbnail-program" #("create-image" 0 12 (ivy-index 0)) #("pcomplete-cycle-com" 0 19 (ivy-index 0)) #("ivy-initial" 0 11 (ivy-index 0)) #("^completion at point" 0 20 (ivy-index 1))))
(setq erc-nick-history-list '("sumisu_" "sumisu" "smith"))
(setq erc-server-history-list '("irc.rizon.net"))
(setq venv-history '("toshokan-IfDczbVY"))
(setq command-history '((describe-face '(treemacs-root-face)) (what-face (point)) (ansi-term "/usr/bin/fish") (kill-buffer "mpv-shot0001.jpg") (evil-change 25886 25890 'exclusive nil nil) (evil-change 25886 25897 'exclusive nil nil) (evil-change 25896 25936 'exclusive nil nil) (evil-change 25886 25893 'exclusive nil nil) (evil-change 25886 25892 'exclusive nil nil) (evil-change 25893 25933 'exclusive nil nil) (list-colors-display) (treemacs-follow-mode 'toggle) (evil-delete 25851 25852 'line nil nil) (evil-delete 1 40 'line nil nil) (evil-replace 37 38 'exclusive 54) (evil-replace 168 169 'exclusive 51) (evil-replace 168 169 'exclusive 53) (lispyville-delete 140 172 'line nil nil) (eval-expression '(global-unset-key (kbd "C-c t")) nil nil 127) (lispyville-delete 33 77 'line nil nil) (evil-replace 565 566 'exclusive 99) (evil-replace 522 523 'exclusive 99) (evil-replace 480 481 'exclusive 99) (evil-replace 447 448 'exclusive 99) (evil-replace 393 394 'exclusive 99) (evil-replace 565 566 'exclusive 116) (evil-replace 522 523 'exclusive 116) (evil-replace 480 481 'exclusive 116) (evil-replace 447 448 'exclusive 116) (evil-replace 393 394 'exclusive 116) (lispyville-delete 595 599 'line nil nil) (lispy-mode 'toggle) (package-install 'ggtags nil) (evil-indent 1 144) (treemacs) (find-file "/etc/default/grub" t) (find-file "~/.emacs.d/org-init.org" t) (execute-extended-command nil "lispy-mode" "lispy-mode") (evil-mode 'toggle) (execute-extended-command nil "evil-mode" "evil-mode") (flycheck-error-list-goto-error) (execute-extended-command nil "flycheck-error-list-goto-error" "flycheck-go") (flycheck-mode 'toggle) (execute-extended-command nil "flycheck-mode" "flycheck-mo") (find-file "~/.emacs.d/org-init.el" t) (evil-delete 1160 1161 'line nil nil) (evil-delete 1123 1124 'line nil nil) (evil-find-char nil 102) (evil-replace 959 960 'exclusive 110) (evil-replace 153 154 'exclusive 83) (evil-replace 825 826 'exclusive 95) (evil-replace 825 826 'exclusive 48) (evil-replace 825 826 'exclusive 41) (evil-delete 273 274 'line nil nil) (evil-delete 904 934 'line nil nil) (evil-delete 750 751 'line nil nil) (evil-change 316 320 'exclusive nil nil) (evil-delete 885 886 'line nil nil) (evil-delete 151 161 'inclusive nil nil) (evil-delete 894 898 'inclusive nil nil) (evil-change 257 267 'exclusive nil nil) (evil-replace 668 669 'exclusive 114) (evil-change 484 489 'exclusive nil nil) (ansi-term "/bin/fish") (rename-buffer "htop" nil) (rename-buffer "rtorren" nil) (proced nil) (kill-buffer "*ansi-term*<9>") (kill-buffer "Bless") (kill-buffer "*ansi-term*<9>") (evil-record-macro 113) (kill-buffer "*top*") (kill-buffer "Python2.7") (evil-execute-macro 109 [105 42 42 32 106 106 backspace backspace 106 106 backspace backspace escape 106 48]) (evil-execute-macro 1 [105 42 42 32 106 106 backspace backspace 106 106 backspace backspace escape 106 48]) (evil-record-macro 97) (evil-delete 33 34 'line nil nil) (evil-find-char nil 9) (evil-delete 2629 2637 'inclusive nil nil) (evil-delete 2617 2625 'inclusive nil nil) (evil-delete 2586 2594 'inclusive nil nil) (evil-delete 2572 2584 'inclusive nil nil) (evil-delete 2545 2553 'inclusive nil nil) (evil-delete 2533 2541 'inclusive nil nil) (evil-delete 2519 2527 'inclusive nil nil) (evil-delete 2494 2502 'inclusive nil nil) (evil-delete 2435 2443 'inclusive nil nil) (evil-delete 2413 2420 'inclusive nil nil) (evil-delete 2395 2403 'inclusive nil nil) (evil-delete 2346 2354 'inclusive nil nil) (evil-delete 2320 2328 'inclusive nil nil) (evil-delete 2293 2303 'inclusive nil nil) (evil-delete 2270 2278 'inclusive nil nil) (evil-delete 2242 2251 'inclusive nil nil) (evil-delete 2209 2217 'inclusive nil nil) (evil-delete 2174 2182 'inclusive nil nil) (evil-delete 2146 2156 'inclusive nil nil) (evil-delete 2115 2123 'inclusive nil nil) (evil-delete 2094 2102 'inclusive nil nil) (evil-delete 2081 2089 'inclusive nil nil) (evil-delete 2065 2073 'inclusive nil nil) (evil-delete 2054 2062 'inclusive nil nil) (evil-delete 2030 2042 'inclusive nil nil) (evil-delete 1998 2006 'inclusive nil nil) (evil-delete 1975 1983 'inclusive nil nil) (evil-delete 1916 1924 'inclusive nil nil) (evil-delete 1891 1899 'inclusive nil nil) (evil-delete 1867 1875 'inclusive nil nil) (evil-delete 1841 1849 'inclusive nil nil) (evil-delete 1820 1828 'inclusive nil nil) (evil-delete 1794 1802 'inclusive nil nil) (evil-delete 1780 1788 'inclusive nil nil) (evil-delete 1762 1770 'inclusive nil nil) (evil-delete 1756 1766 'inclusive nil nil) (evil-delete 1736 1744 'inclusive nil nil) (evil-delete 1728 1736 'inclusive nil nil) (evil-delete 1715 1723 'inclusive nil nil) (evil-delete 1705 1713 'inclusive nil nil) (evil-delete 1671 1683 'inclusive nil nil) (evil-delete 1638 1646 'inclusive nil nil) (evil-delete 1621 1629 'inclusive nil nil) (evil-delete 1575 1583 'inclusive nil nil) (evil-delete 1530 1538 'inclusive nil nil) (evil-delete 1504 1512 'inclusive nil nil) (evil-delete 1481 1491 'inclusive nil nil) (evil-delete 1451 1459 'inclusive nil nil) (evil-delete 1435 1443 'inclusive nil nil) (evil-delete 1425 1433 'inclusive nil nil) (evil-delete 1408 1416 'inclusive nil nil) (evil-delete 1383 1390 'inclusive nil nil) (evil-delete 1361 1369 'inclusive nil nil) (evil-delete 1341 1349 'inclusive nil nil) (evil-delete 1331 1339 'inclusive nil nil) (evil-delete 1322 1330 'inclusive nil nil) (evil-delete 1288 1298 'inclusive nil nil) (evil-delete 1276 1286 'inclusive nil nil) (evil-delete 1216 1224 'inclusive nil nil) (evil-delete 1188 1196 'inclusive nil nil) (evil-delete 1159 1167 'inclusive nil nil) (evil-delete 1150 1158 'inclusive nil nil) (evil-delete 1138 1146 'inclusive nil nil) (evil-delete 1125 1135 'inclusive nil nil) (evil-delete 1079 1089 'inclusive nil nil) (evil-delete 1056 1066 'inclusive nil nil) (evil-delete 1022 1030 'inclusive nil nil) (evil-delete 982 990 'inclusive nil nil) (evil-delete 968 978 'inclusive nil nil) (evil-delete 942 950 'inclusive nil nil) (evil-delete 928 938 'inclusive nil nil) (evil-delete 884 894 'inclusive nil nil) (evil-delete 851 861 'inclusive nil nil) (evil-delete 824 832 'inclusive nil nil) (evil-delete 816 826 'inclusive nil nil) (evil-delete 803 811 'inclusive nil nil) (evil-delete 796 805 'inclusive nil nil) (evil-delete 783 791 'inclusive nil nil) (evil-delete 775 787 'inclusive nil nil) (evil-delete 743 751 'inclusive nil nil) (evil-delete 720 732 'inclusive nil nil) (evil-delete 694 702 'inclusive nil nil) (evil-delete 677 685 'inclusive nil nil) (evil-delete 645 652 'inclusive nil nil) (evil-delete 629 637 'inclusive nil nil) (evil-delete 588 596 'inclusive nil nil) (evil-delete 551 559 'inclusive nil nil) (evil-delete 528 536 'inclusive nil nil) (evil-delete 520 528 'inclusive nil nil) (evil-delete 491 499 'inclusive nil nil) (evil-delete 475 483 'inclusive nil nil) (evil-delete 460 468 'inclusive nil nil) (evil-delete 454 462 'inclusive nil nil) (evil-delete 432 440 'inclusive nil nil) (evil-delete 421 429 'inclusive nil nil) (evil-delete 383 391 'inclusive nil nil) (evil-delete 340 348 'inclusive nil nil) (evil-delete 308 318 'inclusive nil nil) (evil-delete 286 294 'inclusive nil nil) (evil-delete 274 282 'inclusive nil nil) (evil-delete 265 273 'inclusive nil nil) (evil-delete 251 259 'inclusive nil nil) (evil-delete 230 238 'inclusive nil nil) (evil-delete 195 203 'inclusive nil nil) (evil-delete 163 171 'inclusive nil nil) (evil-delete 155 163 'inclusive nil nil) (evil-delete 124 132 'inclusive nil nil) (evil-delete 96 105 'inclusive nil nil) (evil-execute-macro 111 [120 120 120 120 120 120 120 120 120 120 120 120 120 120 102 tab 100 36 106 48]) (evil-delete 1553 1563 'inclusive nil nil) (evil-execute-macro 1 [120 120 120 120 120 120 120 120 120 120 120 120 120 120 102 tab 100 36 106 48]) (evil-delete 78 88 'inclusive nil nil) (evil-delete 56 64 'inclusive nil nil) (evil-delete 41 49 'inclusive nil nil) (evil-delete 1091 1099 'inclusive nil nil) (evil-find-char nil 45) (evil-delete 1064 1078 'inclusive nil nil) (evil-find-char nil 101) (evil-delete 1063 1071 'inclusive nil nil) (evil-delete 1056 1070 'inclusive nil nil) (evil-delete 1055 1063 'inclusive nil nil) (evil-delete 1045 1059 'inclusive nil nil) (evil-delete 1044 1052 'inclusive nil nil) (evil-delete 1033 1047 'inclusive nil nil) (evil-delete 1032 1042 'inclusive nil nil) (evil-delete 988 1002 'inclusive nil nil) (evil-delete 987 997 'inclusive nil nil) (evil-delete 966 980 'inclusive nil nil) (evil-delete 965 975 'inclusive nil nil) (evil-delete 933 947 'inclusive nil nil) (evil-delete 932 940 'inclusive nil nil) (evil-delete 894 908 'inclusive nil nil) (evil-delete 893 901 'inclusive nil nil) (evil-delete 881 895 'inclusive nil nil) (evil-delete 880 890 'inclusive nil nil) (evil-delete 856 870 'inclusive nil nil) (evil-delete 855 863 'inclusive nil nil) (evil-delete 843 857 'inclusive nil nil) (evil-delete 842 852 'inclusive nil nil) (evil-delete 800 814 'inclusive nil nil) (evil-delete 799 809 'inclusive nil nil) (evil-delete 768 782 'inclusive nil nil) (evil-delete 767 797 'inclusive nil nil) (evil-delete 762 776 'inclusive nil nil) (evil-delete 761 775 'inclusive nil nil) (evil-delete 760 781 'inclusive nil nil) (evil-delete 760 774 'inclusive nil nil) (evil-delete 759 772 'inclusive nil nil) (evil-delete 759 773 'inclusive nil nil) (evil-delete 758 767 'inclusive nil nil) (evil-delete 747 761 'inclusive nil nil) (evil-delete 746 754 'inclusive nil nil) (evil-delete 740 754 'inclusive nil nil) (evil-delete 739 751 'inclusive nil nil) (evil-delete 709 723 'inclusive nil nil) (evil-delete 708 716 'inclusive nil nil) (evil-delete 687 701 'inclusive nil nil) (evil-delete 686 698 'inclusive nil nil) (evil-delete 662 676 'inclusive nil nil) (evil-delete 661 669 'inclusive nil nil) (evil-delete 646 660 'inclusive nil nil) (evil-delete 645 653 'inclusive nil nil) (evil-delete 615 629 'inclusive nil nil) (evil-delete 614 621 'inclusive nil nil) (evil-delete 600 614 'inclusive nil nil) (evil-delete 599 607 'inclusive nil nil) (evil-delete 560 574 'inclusive nil nil) (evil-delete 559 572 'inclusive nil nil) (evil-delete 529 543 'inclusive nil nil) (evil-delete 507 521 'inclusive nil nil) (evil-delete 506 514 'inclusive nil nil) (evil-delete 500 514 'inclusive nil nil) (evil-delete 499 507 'inclusive nil nil) (evil-delete 472 486 'inclusive nil nil) (evil-delete 471 479 'inclusive nil nil) (evil-delete 457 471 'inclusive nil nil) (evil-delete 456 464 'inclusive nil nil) (evil-delete 443 457 'inclusive nil nil) (evil-delete 442 450 'inclusive nil nil) (evil-delete 438 452 'inclusive nil nil) (evil-delete 437 445 'inclusive nil nil) (evil-delete 417 431 'inclusive nil nil) (evil-delete 416 424 'inclusive nil nil) (evil-delete 407 421 'inclusive nil nil) (evil-delete 406 414 'inclusive nil nil) (evil-delete 370 384 'inclusive nil nil) (evil-delete 369 377 'inclusive nil nil) (evil-delete 328 342 'inclusive nil nil) (evil-delete 327 335 'inclusive nil nil) (evil-delete 297 311 'inclusive nil nil) (evil-delete 296 306 'inclusive nil nil) (evil-delete 276 290 'inclusive nil nil) (evil-delete 275 283 'inclusive nil nil) (evil-delete 265 279 'inclusive nil nil) (evil-delete 264 279 'inclusive nil nil) (evil-delete 264 278 'inclusive nil nil) (evil-delete 263 271 'inclusive nil nil) (evil-delete 251 265 'inclusive nil nil) (evil-delete 250 258 'inclusive nil nil) (evil-delete 231 245 'inclusive nil nil) (evil-delete 196 209 'inclusive nil nil) (evil-delete 164 177 'inclusive nil nil) (evil-delete 156 169 'inclusive nil nil) (evil-delete 125 138 'inclusive nil nil) (evil-delete 97 110 'inclusive nil nil) (evil-delete 79 92 'inclusive nil nil) (evil-delete 57 70 'inclusive nil nil) (evil-execute-macro 50 "dfexf-hd$j0") (evil-delete 42 55 'inclusive nil nil) (evil-execute-macro 1 "dfexf-hd$j0") (evil-delete 34 47 'inclusive nil nil) (evil-delete 34 68 'line nil nil) (evil-delete 34 44 'line nil nil) (evil-delete 34 35 'line nil nil) (evil-delete 34 2522 'line nil nil) (evil-delete 2434 2434 'inclusive nil nil) (evil-delete 2433 2441 'inclusive nil nil) (evil-delete 2424 2439 'inclusive nil nil) (evil-delete 2423 2431 'inclusive nil nil) (evil-delete 2395 2410 'inclusive nil nil) (evil-delete 2394 2402 'inclusive nil nil) (evil-delete 2383 2398 'inclusive nil nil) (evil-delete 2382 2394 'inclusive nil nil) (evil-delete 2358 2373 'inclusive nil nil) (evil-delete 2357 2365 'inclusive nil nil) (evil-delete 2348 2363 'inclusive nil nil) (evil-delete 2347 2355 'inclusive nil nil) (evil-delete 2336 2351 'inclusive nil nil) (evil-delete 2335 2343 'inclusive nil nil) (evil-delete 2313 2328 'inclusive nil nil) (evil-delete 2312 2320 'inclusive nil nil) (evil-delete 2256 2271 'inclusive nil nil) (evil-delete 2255 2263 'inclusive nil nil) (evil-delete 2236 2251 'inclusive nil nil) (evil-delete 2235 2242 'inclusive nil nil) (evil-delete 2220 2235 'inclusive nil nil) (evil-delete 2219 2227 'inclusive nil nil) (evil-delete 2173 2188 'inclusive nil nil) (evil-delete 2172 2180 'inclusive nil nil) (evil-delete 2149 2164 'inclusive nil nil) (evil-delete 2148 2156 'inclusive nil nil) (evil-delete 2123 2137 'inclusive nil nil) (evil-delete 2122 2132 'inclusive nil nil) (evil-delete 2101 2115 'inclusive nil nil) (evil-delete 2100 2108 'inclusive nil nil) (evil-delete 2074 2088 'inclusive nil nil) (evil-delete 2073 2099 'inclusive nil nil) (evil-delete 2059 2073 'inclusive nil nil) (evil-delete 2058 2066 'inclusive nil nil) (evil-delete 2025 2039 'inclusive nil nil) (evil-delete 2024 2032 'inclusive nil nil) (evil-delete 1998 2012 'inclusive nil nil) (evil-delete 1997 2007 'inclusive nil nil) (evil-delete 1968 1982 'inclusive nil nil) (evil-delete 1967 1975 'inclusive nil nil) (evil-delete 1948 1962 'inclusive nil nil) (evil-delete 1947 1955 'inclusive nil nil) (evil-delete 1936 1950 'inclusive nil nil) (evil-delete 1935 1943 'inclusive nil nil) (evil-delete 1921 1935 'inclusive nil nil) (evil-delete 1920 1928 'inclusive nil nil) (evil-delete 1911 1925 'inclusive nil nil) (evil-delete 1910 1918 'inclusive nil nil) (evil-delete 1888 1902 'inclusive nil nil) (evil-delete 1887 1899 'inclusive nil nil) (evil-delete 1857 1871 'inclusive nil nil) (evil-delete 1856 1864 'inclusive nil nil) (evil-delete 1835 1849 'inclusive nil nil) (evil-delete 1834 1842 'inclusive nil nil) (evil-delete 1777 1791 'inclusive nil nil) (evil-delete 1776 1784 'inclusive nil nil) (evil-delete 1753 1767 'inclusive nil nil) (evil-delete 1752 1760 'inclusive nil nil) (evil-delete 1730 1744 'inclusive nil nil) (evil-delete 1729 1737 'inclusive nil nil) (evil-delete 1705 1719 'inclusive nil nil) (evil-delete 1704 1712 'inclusive nil nil) (evil-delete 1685 1699 'inclusive nil nil) (evil-delete 1684 1692 'inclusive nil nil) (evil-delete 1660 1674 'inclusive nil nil) (evil-delete 1659 1667 'inclusive nil nil) (evil-delete 1647 1661 'inclusive nil nil) (evil-delete 1646 1659 'inclusive nil nil) (evil-delete 1635 1649 'inclusive nil nil) (evil-delete 1634 1642 'inclusive nil nil) (evil-delete 1630 1644 'inclusive nil nil) (evil-delete 1629 1639 'inclusive nil nil) (evil-delete 1611 1625 'inclusive nil nil) (evil-delete 1610 1618 'inclusive nil nil) (evil-delete 1604 1618 'inclusive nil nil) (evil-delete 1603 1617 'inclusive nil nil) (evil-delete 1598 1612 'inclusive nil nil) (evil-delete 1597 1605 'inclusive nil nil) (evil-delete 1589 1603 'inclusive nil nil) (evil-delete 1588 1596 'inclusive nil nil) (evil-delete 1556 1570 'inclusive nil nil) (evil-delete 1555 1567 'inclusive nil nil) (evil-delete 1524 1538 'inclusive nil nil) (evil-delete 1523 1531 'inclusive nil nil) (evil-delete 1508 1522 'inclusive nil nil) (evil-delete 1507 1515 'inclusive nil nil) (evil-delete 1463 1477 'inclusive nil nil) (evil-delete 1462 1470 'inclusive nil nil) (evil-delete 1419 1433 'inclusive nil nil) (evil-delete 1418 1426 'inclusive nil nil) (evil-delete 1394 1408 'inclusive nil nil) (evil-delete 1393 1401 'inclusive nil nil) (evil-delete 1372 1386 'inclusive nil nil) (evil-delete 1371 1381 'inclusive nil nil) (evil-delete 1343 1357 'inclusive nil nil) (evil-delete 1342 1350 'inclusive nil nil) (evil-delete 1328 1342 'inclusive nil nil) (evil-delete 1327 1335 'inclusive nil nil) (evil-delete 1319 1333 'inclusive nil nil) (evil-delete 1318 1326 'inclusive nil nil) (evil-delete 1303 1317 'inclusive nil nil) (evil-delete 1302 1310 'inclusive nil nil) (evil-delete 1279 1293 'inclusive nil nil) (evil-delete 1278 1285 'inclusive nil nil) (evil-delete 1258 1272 'inclusive nil nil) (evil-delete 1257 1265 'inclusive nil nil) (evil-delete 1239 1253 'inclusive nil nil) (evil-delete 1238 1246 'inclusive nil nil) (evil-delete 1230 1244 'inclusive nil nil) (evil-delete 1229 1237 'inclusive nil nil) (evil-delete 1222 1236 'inclusive nil nil) (evil-delete 1221 1229 'inclusive nil nil) (evil-delete 1189 1203 'inclusive nil nil) (evil-delete 1188 1198 'inclusive nil nil) (evil-delete 1178 1192 'inclusive nil nil) (evil-delete 1177 1187 'inclusive nil nil) (evil-delete 1119 1133 'inclusive nil nil) (evil-delete 1118 1126 'inclusive nil nil) (evil-delete 1092 1106 'inclusive nil nil) (evil-execute-macro 111 "dfexf-hd$j0") (evil-record-macro 106) (evil-find-char nil 120) (evil-delete 66 74 'inclusive nil nil) (evil-delete 47 55 'inclusive nil nil) (evil-execute-macro 1 "df-xf-hd$j0") (evil-delete 46 54 'inclusive nil nil) (evil-delete 34 42 'inclusive nil nil) (evil-delete 34 44 'inclusive nil nil) (evil-find-char nil 77) (evil-delete 34 1320 'line nil nil) (kill-buffer "t") (evil-delete 1204 1244 'inclusive nil nil) (evil-delete 1163 1201 'inclusive nil nil) (evil-delete 1121 1157 'inclusive nil nil) (evil-delete 1111 1147 'inclusive nil nil) (evil-delete 1096 1135 'inclusive nil nil) (evil-delete 1039 1086 'inclusive nil nil) (evil-delete 1021 1059 'inclusive nil nil) (evil-delete 991 1027 'inclusive nil nil) (evil-delete 981 1023 'inclusive nil nil) (evil-delete 935 980 'inclusive nil nil) (evil-delete 929 974 'inclusive nil nil) (evil-delete 911 948 'inclusive nil nil) (evil-delete 894 932 'inclusive nil nil) (evil-delete 840 878 'inclusive nil nil) (evil-delete 805 852 'inclusive nil nil) (evil-delete 779 819 'inclusive nil nil) (evil-delete 770 807 'inclusive nil nil) (evil-delete 711 750 'inclusive nil nil) (evil-delete 701 741 'inclusive nil nil) (evil-delete 648 682 'inclusive nil nil) (evil-delete 614 655 'inclusive nil nil) (evil-delete 569 616 'inclusive nil nil) (evil-delete 553 597 'inclusive nil nil) (evil-delete 542 592 'inclusive nil nil) (evil-delete 533 575 'inclusive nil nil) (evil-delete 503 541 'inclusive nil nil) (evil-delete 489 528 'inclusive nil nil) (evil-delete 474 519 'inclusive nil nil) (evil-delete 420 464 'inclusive nil nil) (evil-delete 406 444 'inclusive nil nil) (evil-delete 398 434 'inclusive nil nil) (evil-delete 349 385 'inclusive nil nil) (evil-delete 335 371 'inclusive nil nil) (evil-delete 310 360 'inclusive nil nil) (evil-delete 273 310 'inclusive nil nil) (evil-delete 256 302 'inclusive nil nil) (evil-delete 232 275 'inclusive nil nil) (evil-delete 224 260 'inclusive nil nil) (evil-delete 192 236 'inclusive nil nil) (evil-delete 182 224 'inclusive nil nil) (evil-delete 166 205 'inclusive nil nil) (evil-delete 146 190 'inclusive nil nil) (evil-delete 111 154 'inclusive nil nil) (evil-delete 82 130 'inclusive nil nil) (evil-delete 74 122 'inclusive nil nil) (evil-delete 62 109 'inclusive nil nil) (evil-delete 48 88 'inclusive nil nil) (evil-execute-macro 100 [102 tab 100 36 106 48]) (evil-delete 29 78 'inclusive nil nil) (evil-execute-macro 1 [102 tab 100 36 106 48]) (evil-delete 17 59 'inclusive nil nil) (evil-delete 1 62 'line nil nil) (kill-buffer "t") (eval-expression '(length '(1 2 3 4)) nil) (eval-expression '(nth 5 '(1 2 3 4 5 6 7)) nil) (eval-expression '(random 100) nil) (eval-expression '(random 5) nil) (count-words nil nil) (ace-jump-buffer) (package-install 'ace-jump-buffer nil) (clone-indirect-buffer-other-window nil t) (kill-buffer #("art.org<2>" 0 10 (face org-level-4))) (visual-line-mode 'toggle) (evil-find-char nil 44) (evil-replace 8925 8926 'exclusive 105) (evil-delete 8921 8925 'exclusive nil nil) (evil-find-char-backward nil 83) (evil-change 8004 8059 'inclusive nil nil) (evil-delete 7812 7868 'line nil nil) (kill-buffer "URxvt") (evil-delete 7812 7814 'line nil nil) (evil-delete 7815 7816 'line nil nil) (evil-change 7760 7764 'exclusive nil nil) (evil-delete 7793 7797 'inclusive nil nil) (kill-buffer "*ansi-term*<4>") (evil-delete 7673 7731 'line nil nil) (evil-change 6008 6025 'exclusive nil nil) (evil-change 5927 5931 'exclusive nil nil) (evil-delete 5768 5850 'inclusive nil nil) (evil-change 5222 5241 'inclusive nil nil) (mingus nil) (mingus nil) (evil-replace 7018 7019 'exclusive 44) (evil-find-char nil 59) (evil-replace 6460 6461 'exclusive 116) (evil-change 5788 5800 'exclusive nil nil) (evil-delete 5569 5637 'inclusive nil nil) (evil-delete 4119 4125 'exclusive nil nil) (evil-change 4596 4600 'exclusive nil nil) (evil-change 5118 5130 'exclusive nil nil) (evil-delete 4796 4797 'line nil nil) (evil-delete 4796 4909 'line nil nil) (evil-delete 4795 4796 'line nil nil) (evil-delete 6892 6893 'line nil nil) (evil-delete 6893 6894 'line nil nil) (evil-delete 6893 7185 'line nil nil) (evil-delete 6893 7156 'line nil nil) (evil-delete 6681 6682 'line nil nil) (evil-delete 6681 7210 'line nil nil) (evil-delete 7210 7211 'line nil nil) (evil-delete 6387 6406 'exclusive nil nil) (evil-delete 6187 6301 'line nil nil) (evil-delete 6187 6188 'line nil nil) (evil-delete 6133 6247 'line nil nil) (evil-delete 6133 6134 'line nil nil) (evil-delete 6142 6421 'line nil nil) (evil-change 4018 4022 'exclusive nil nil) (evil-delete 5788 5789 'line nil nil) (evil-delete 5480 5955 'line nil nil) (evil-change 5121 5123 'exclusive nil nil) (evil-change 5089 5098 'exclusive nil nil) (evil-delete 5060 5289 'line nil nil) (evil-delete 5060 5061 'line nil nil) (evil-delete 4816 4985 'inclusive nil nil) (evil-delete 4757 4758 'line nil nil) (evil-delete 4756 4979 'line nil nil) (evil-delete 4756 4757 'line nil nil) (evil-delete 4801 4802 'line nil nil) (evil-delete 4802 5067 'line nil nil) (evil-delete 4507 4730 'line nil nil) (evil-delete 4507 4508 'line nil nil) (evil-delete 4576 4577 'line nil nil) (evil-delete 4232 4238 'exclusive nil nil) (evil-change 1 1 'exclusive nil nil) (evil-set-marker 112) (evil-delete 7709 7713 'line nil nil) (evil-delete 7712 7745 'inclusive nil nil) (clone-indirect-buffer nil t) (evil-delete 7403 7413 'exclusive nil nil) (evil-change 7263 7269 'exclusive nil nil) (evil-delete 7684 7685 'line nil nil) (find-function 'completion--do-completion) (find-function 'completion--in-region-1) (find-function 'completion--in-region) (find-variable 'completion-in-region-function) (find-function 'funcall) (find-function 'completion-in-region) (find-function 'pcomplete-std-complete) (pcomplete 1) (eval-expression '(pcomplete/rm) nil) (eval-expression '(while (pcomplete-here (pcomplete-all-entires) nil 'expand-file-name)) nil) (eval-expression '(pcomplete (pcomplete-all-entries) nil 'expand-file-name) nil) (find-function 'pcomplete/cd) (smex) (package-install 'smex nil) (kill-buffer " *EMMS Playlist*") (emms-stop) (emms) (mingus-browse) (mingus-add-album) (powerline-default-theme) (mingus nil) (mingus-clear nil) (mingus nil) (kill-buffer "*Mingus*") (mingus nil) (kill-buffer "*Mingus*") (mingus nil) (powerline-revert) (powerline-reset) (kill-buffer "*Help*") (kill-buffer "*Mingus*") (mingus-mode-line-kill) (kill-buffer "*Memory-Profiler-Report 2017-05-19 22:57:01*") (kill-buffer "*CPU-Profiler-Report 2017-05-19 22:57:01*") (next-line 1 1) (profiler-report) (profiler-start 'cpu+mem) (writegood-mode 'toggle) (package-install 'writegood-mode nil) (evil-delete 7036 7072 'line nil nil) (buffer-menu nil) (eshell-insert-buffer-name "Google-chrome") (eshell-insert-buffer-name "Google-chrome") (eval-region (region-beginning) (region-end)) (lispyville-change 1868 1882 'exclusive nil nil) (lispyville-change 1867 1867 'exclusive 99 nil) (evil-use-register 99) (lispyville-change 1845 1883 'inclusive nil nil) (lispyville-delete 1848 1849 'exclusive nil nil) (hydra-eshell/body) (lispyville-delete 1587 1595 'inclusive nil nil) (eshell-isearch-forward) (eshell-bol) (lispyville-delete 1604 1653 'line nil nil) (eshell-insert-buffer-name "*scratch*") (evil-delete 155 158 'inclusive nil nil) (evil-delete 116 120 'inclusive nil nil) (evil-delete 112 120 'inclusive nil nil) (evil-delete 33 38 'inclusive nil nil) (evil-delete 29 38 'line nil nil) (kill-buffer "*eshell*") (evil-delete 39536 39542 'line nil nil) (find-variable 'comint-prompt-read-only) (find-function 'shell) (winner-undo) (evil-delete 157 169 'line nil nil) (evil-delete 111 118 'line nil nil) (shell nil) (evil-delete 39470 39478 'inclusive nil nil) (evil-delete 39466 39478 'line nil nil) (evil-delete 39185 39196 'inclusive nil nil) (evil-change-whole-line 39181 39196 'line nil) (evil-delete 39185 39193 'inclusive nil nil) (evil-delete 39181 39193 'line nil nil) (evil-change 39181 39193 'line nil nil) (kill-buffer "Browsing by: album") (kill-buffer #("Music" 0 5 (face ivy-subdir))) (kill-buffer #("DaniA_l_Lohues" 0 14 (face ivy-subdir))) (kill-buffer "04_Achter_t_Huus.mp3") (dired "/home/kahr/Music/" nil) (emms-browse-by-album) (emms-browse-by-performer) (emms-browser-view-in-dired) (emms-smart-browse) (kill-buffer " *EMMS Playlist*") (kill-buffer "Browsing by: artist") (kill-buffer "Browsing by: artist") (emms-add-directory-tree "/home/kahr/Music/") (eval-expression '(emms-standard) nil) (evil-delete 32381 32415 'line nil nil) (kill-buffer " *EMMS Playlist*") (emms-player-mpd-start) (eval-expression '(emms-default-players) nil) (emms-playlist-new) (eval-expression '(emms-playlist-mode-go) nil) (eval-expression '(emms) nil) (kill-buffer "org-init.org") (emms-playlist-mode) (emms-show nil) (emms-player-mpd-show nil) (mingus nil) (kill-buffer "*Mingus*") (mingus nil) (kill-buffer "*Mingus*") (mingus nil) (kill-buffer "*Mingus*") (evil-record-macro 7) (mingus nil) (kill-buffer "*Mingus*") (evil-record-macro 24) (mingus nil) (package-install 'mingus nil) (dired-async-mode 'toggle) (lispyville-delete 161 161 'line nil nil) (evil-delete 4365 4366 'line nil nil) (evil-delete 19349 19350 'line nil nil) (evil-delete 386 565 'line nil nil) (shackle-mode 'toggle) (evil-change 349 407 'inclusive nil nil) (kill-buffer "minibuffer.el") (kill-buffer "Wine") (eshell-list-history) (kill-buffer "Python2.7") (kill-buffer #("smith" 0 5 (face ivy-remote))) (kill-buffer #("home" 0 4 (face ivy-remote))) (kill-buffer #("test.js" 0 7 (face ivy-remote))) (evil-goto-mark-line 13) (helm-esh-pcomplete) (lispyville-change 1 755 'line nil nil) (kill-buffer "helm-eshell.el") (find-variable 'helm-esh-source) (find-variable 'helm-eshell-fuzzy-match) (helm-lisp-completion-or-file-name-at-point) (evil-replace 744 745 'exclusive 105) (lispyville-delete 736 744 'exclusive nil nil) (lispyville-delete 735 739 'exclusive nil nil) (lispyville-delete 145 157 'line nil nil) (lispyville-delete 145 146 'line nil nil) (lispyville-delete 145 170 'line nil nil) (lispyville-delete 145 179 'line nil nil) (eval-expression '(eshell-parse-arguments (point-marker) (save-excursion (eshell-bol) (point))) nil) (find-function 'pcomplete-completions-at-point) (describe-variable 'completion-at-point-functions) (find-function 'tags-completion-at-point-function) (find-variable 'completion-at-point-functions) (find-function 'completion-at-point) (eval-expression '(completion-at-point :matcher #'counsel--find-file-matcher) nil) (find-function 'counsel-find-file) (completion-at-point) (evil-yank 297 357 'inclusive nil nil) (eval-expression 'image-dired-cmd-create-thumbnail-program nil) (find-variable 'image-dired-cmd-create-thumbnail-program) (counsel-describe-variable) (find-variable 'image-dired-cmd-create-standard-thumbnail-command) (find-function 'image-dired-create-thumb) (find-function 'image-dired-display-thumbs) (Info-goto-emacs-command-node 'image-dired-display-thumbs) (describe-key "	" 1 nil) (kill-buffer #("feet" 0 4 (face ivy-subdir))) (image-dired "/home/kahr/Pictures/ayy/feet/") (dired "/home/kahr/Pictures/ayy/feet/" nil) (kill-buffer "feet") (image-dired-thumbnail-mode) (evil-change 3238 3244 'exclusive nil nil) (evil-change 3118 3123 'exclusive nil nil) (evil-change 3237 3242 'exclusive nil nil) (evil-change 3118 3124 'exclusive nil nil) (evil-delete 32143 32179 'inclusive nil nil) (evil-find-char nil 108) (evil-delete 32121 32179 'line nil nil) (evil-find-char nil 106) (kill-buffer "*eshell*") (eshell/clear) (eval-expression '(remove) nil) (eval-expression 'ayy nil) (eval-expression '(shell-command "touch /home/kahr/abcdefg.txt") nil) (sudo-edit nil) (evil-change 1372540 1372543 'exclusive nil nil) (counsel-irony) (shell-dynamic-complete-filename) (helm-complete-file-name-at-point) (eval-expression '(counsel-M-x "") nil) (counsel-M-x) (apropos-command '("indent-for-tab-command") nil) (lispyville-delete 1512 1596 'line nil nil) (lispyville-delete 1512 1517 'line nil nil) (lispyville-delete 1512 1547 'line nil nil) (counsel-describe-function) (lispyville-delete 1906 1907 'line nil nil) (evil-replace 1730 1731 'exclusive 102) (lispyville-change 1552 1556 'exclusive nil nil) (lispyville-delete 235 243 'inclusive nil nil) (lispyville-change 1538 1546 'exclusive nil nil) (apropos '("value") nil) (electric-apropos) (apropos '("fagg") nil) (nlinum-mode 'toggle) (kill-buffer "*Completions*") (describe-variable 'ivy-use-virtual-buffers) (evil-delete 3401 3402 'line nil nil) (evil-delete 3401 3451 'line nil nil) (evil-delete 3401 3430 'line nil nil) (evil-delete 3401 3460 'line nil nil) (evil-delete 3401 3434 'line nil nil) (kill-buffer "*eshell*") (evil-change 3701 3723 'inclusive nil nil) (kill-buffer "*eshell*") (kill-buffer "*eshell*") (lispyville-delete 1403 1403 'line nil nil) (lispyville-delete 1403 1404 'line nil nil) (lispyville-delete 1361 1438 'line nil nil) (lispyville-delete 1361 1417 'line nil nil) (lispyville-delete 1361 1447 'line nil nil) (lispyville-delete 1361 1414 'line nil nil) (lispyville-delete 1361 1426 'line nil nil) (lispyville-delete 1361 1389 'line nil nil) (kill-buffer "*eshell*") (eval-expression '(define-key eshell-mode-map (kbd "<tab>") nil) nil) (evil-delete 195 223 'line nil nil) (lispyville-delete 1166 1167 'line nil nil) (eval-expression '(define-key ivy-mode-map (kbd "<tab>") nil) nil) (ivy-mode 'toggle) (kill-buffer "*eshell*") (switch-to-buffer "org-init.org" nil 'force-same-window) (describe-key [tab] 1 nil) (kill-buffer "*eshell*") (evil-delete 28133 28152 'inclusive nil nil) (evil-delete 28111 28152 'line nil nil) (ivy-next-line 1) (describe-key "" 1 nil) (ivy-next-line 1) (ivy-next-line-or-history 1) (ivy-forward-char 1) (eval-expression '(keymap-symbol (current-local-map)) nil) (evil-delete 27129 27133 'inclusive nil nil) (evil-find-char nil 99) (eval-expression '(current-active-maps) nil) (evil-delete 18694 18695 'line nil nil) (kill-buffer "*Packages*") (kill-buffer "1493791654056.jpg") (package-list-packages nil) (pcomplete 1) (evil-delete 3076 3156 'line nil nil) (kill-buffer "*eshell*") (evil-change 3334 3361 'inclusive nil nil) (kill-buffer "*eshell*") (evil-delete 53143 53164 'inclusive nil nil) (read-only-mode 'toggle) (evil-delete 3071 3095 'line nil nil) (evil-delete 3071 3099 'line nil nil) (evil-change 3383 3392 'exclusive nil nil) (kill-buffer "*eshell*") (undo nil) (kill-buffer "*eshell*") (kill-buffer "*eshell*") (lispyville-delete 215 228 'inclusive nil nil) (lispyville-delete 145 180 'line nil nil) (evil-indent 144 180) (kill-buffer "*eshell*") (kill-buffer "*eshell*") (evil-delete 3289 3290 'line nil nil) (lispyville-delete 948 956 'line nil nil) (lispyville-delete 948 1041 'line nil nil) (lispyville-delete 948 984 'line nil nil) (evil-indent 852 945) (eval-expression '(equal "image" "image") nil) (eval-expression '(eq "image" "image") nil) (evil-replace 3152 3153 'exclusive 53) (lispyville-change 173 176 'exclusive nil nil) (eval-expression '(mailcap-mime-types) nil) (eval-expression '(mailcap-extension-to-mime "/home/kahr/wew.png") nil) (apropos '("mime" "type") nil) (calc nil nil 1) (execute-extended-command nil "calc" #("calc
calc
calendar-chinese-print-date
kmacro-end-or-call-macro
calendar-forward-year
calc-grab-rectangle
split-window-vertically
calendar-exit
counsel-irony-callback
doc-view-scale-reset" 4 5 (read-only nil) 5 8 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 8 9 (face ((:foreground "black") ivy-current-match) read-only nil) 9 10 (read-only nil) 10 13 (face ivy-minibuffer-match-face-2 read-only nil) 13 52 (read-only nil) 52 55 (face ivy-minibuffer-match-face-2 read-only nil) 55 63 (read-only nil) 63 66 (face ivy-minibuffer-match-face-2 read-only nil) 66 85 (read-only nil) 85 88 (face ivy-minibuffer-match-face-2 read-only nil) 88 123 (read-only nil) 123 126 (face ivy-minibuffer-match-face-2 read-only nil) 126 129 (read-only nil) 129 132 (face ivy-minibuffer-match-face-2 read-only nil) 132 157 (read-only nil) 157 160 (face ivy-minibuffer-match-face-2 read-only nil) 160 176 (read-only nil) 176 179 (face ivy-minibuffer-match-face-2 read-only nil) 179 186 (read-only nil))) (evil-snipe-mode 'toggle) (describe-face '(evil-snipe-matches-face)) (rainbow-mode 'toggle) (evil-mc-mode 'toggle) (evil-delete 21601 21602 'exclusive nil nil) (evil-snipe-s nil '(102 48)) (package-install 'evil-snipe nil) (evil-delete 21839 21840 'line nil nil) (eval-expression '(kbd "\"") nil) (evil-change 21733 21738 'exclusive nil nil) (kill-buffer "*Help*") (kill-buffer "*Apropos*") (apropos '("eshell") nil) (apropos '("shell") nil) (evil-change 21731 21732 'exclusive nil nil) (kill-buffer "*Apropos*") (apropos-follow) (apropos '("var") nil) (buffer-menu nil) (package-install 'shackle nil) (kill-buffer "*Buffer List*") (buffer-menu nil) (kill-buffer "*Apropos*") (apropos '("variable") nil) (lispyville-delete 142 276 'line nil nil) (lispy-doublequote nil) (evil-delete 21310 21320 'line nil nil) (evil-delete 21310 21313 'line nil nil) (evil-delete 21310 21331 'line nil nil) (evil-delete 21310 21323 'line nil nil) (evil-delete 21310 21311 'line nil nil) (evil-delete 21357 21358 'line nil nil) (evil-change 21357 21358 'line nil nil) (ace-delete-window) (yas-load-directory "/home/kahr/.emacs.d/snippets/" nil t) (yas/load-directory "/home/kahr/.emacs.d/snippets/" nil t) (evil-delete 21311 21314 'line nil nil) (kill-buffer " *NeoTree*") (neotree) (kill-buffer " *NeoTree*") (neotree-enter-ace-window) (evil-change 21180 21191 'inclusive nil nil) (evil-change 21122 21133 'inclusive nil nil) (evil-change 21039 21050 'inclusive nil nil) (kill-buffer " *NeoTree*") (dired "/home/kahr/" nil) (kill-buffer "shut_it_down.jpg") (kill-buffer "TcgiaDW.jpg") (package-install 'neotree nil) (package-refresh-contents) (execute-extended-command nil "package-install" #("package-install
package-install-file
use-package-install-deferred-package
package-install-selected-packages
package-install-from-buffer
package-install" 15 16 (read-only nil) 16 30 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 30 36 (face ((:foreground "black") ivy-current-match) read-only nil) 36 41 (read-only nil) 41 55 (face ivy-minibuffer-match-face-2 read-only nil) 55 74 (read-only nil) 74 88 (face ivy-minibuffer-match-face-2 read-only nil) 88 108 (read-only nil) 108 122 (face ivy-minibuffer-match-face-2 read-only nil) 122 136 (read-only nil) 136 150 (face ivy-minibuffer-match-face-2 read-only nil) 150 151 (read-only nil))) (evil-delete 96483 96515 'line nil nil) (evil-delete 96456 96488 'line nil nil) (evil-delete 40256 40328 'line nil nil) (recover-this-file) (evil-change 5635 5657 'inclusive nil nil) (evil-yank 100449 100459 'inclusive nil nil) (kill-buffer "Vlc") (hexl-find-file "/home/kahr/test/broken.mp4") (evil-delete 39481 39493 'line nil nil) (evil-delete 39463 39490 'line nil nil) (evil-find-char nil 10) (evil-delete 112669 112768 'line nil nil) (evil-delete 112769 112789 'line nil nil) (evil-delete 112641 112710 'line nil nil) (evil-delete 112671 112707 'inclusive nil nil) (kill-buffer "Vlc") (evil-delete 39020 39032 'line nil nil) (evil-delete 40145 40146 'line nil nil) (evil-delete 38566 38621 'line nil nil) (evil-delete 37471 37486 'line nil nil) (evil-replace 348 349 'exclusive 51) (evil-replace 3201 3202 'exclusive 48) (evil-replace 3200 3201 'exclusive 49) (evil-replace 2941 2942 'exclusive 49) (evil-replace 348 349 'exclusive 53) (evil-replace 3201 3202 'exclusive 50) (evil-replace 2942 2943 'exclusive 50) (evil-delete 3531 3541 'inclusive nil nil) (evil-delete 36866 36922 'line nil nil) (evil-replace 3201 3202 'exclusive 49) (evil-replace 2942 2943 'exclusive 49) (evil-delete 36866 36952 'line nil nil) (evil-replace 348 349 'exclusive 49) (evil-replace 3535 3536 'exclusive 101) (evil-change 3518 3522 'inclusive nil nil) (evil-delete 3478 3493 'line nil nil) (evil-change 3518 3532 'inclusive nil nil) (evil-change 3268 3273 'exclusive nil nil) (evil-change 3242 3246 'exclusive nil nil) (evil-delete 3276 3343 'line nil nil) (evil-yank 2920 3015 'inclusive nil nil) (evil-delete 3016 3083 'line nil nil) (evil-replace 2998 2999 'exclusive 95) (evil-replace 2998 2999 'exclusive 45) (evil-replace 2998 2999 'exclusive 41) (evil-delete 2747 2748 'line nil nil) (evil-delete 3312 3358 'line nil nil) (evil-yank 36492 36556 'inclusive nil nil) (evil-delete 3073 3096 'line nil nil) (evil-delete 2858 2881 'line nil nil) (evil-delete 3746 3783 'line nil nil) (evil-delete 2863 2893 'line nil nil) (evil-delete 4059 4060 'line nil nil) (evil-delete 4108 4125 'line nil nil) (evil-delete 4125 4126 'line nil nil) (evil-delete 4012 4029 'line nil nil) (evil-delete 3988 4005 'line nil nil) (evil-delete 4005 4018 'line nil nil) (evil-change 3980 3985 'exclusive nil nil) (evil-change 3954 3958 'exclusive nil nil) (evil-find-char nil 40) (evil-yank 3777 3866 'inclusive nil nil) (evil-replace 2789 2790 'exclusive 50) (evil-replace 2810 2811 'exclusive 50) (evil-replace 2810 2811 'exclusive 52) (evil-yank 3145 3207 'inclusive nil nil) (evil-delete 2863 2864 'line nil nil) (evil-delete 2863 2888 'line nil nil) (evil-delete 2863 2887 'line nil nil) (evil-delete 2863 2934 'line nil nil) (evil-delete 2863 2903 'line nil nil) (evil-delete 2863 2884 'line nil nil) (evil-delete 3075 3076 'line nil nil) (evil-delete 3075 3088 'line nil nil) (evil-delete 3075 3199 'line nil nil) (evil-delete 3075 3133 'line nil nil) (evil-delete 3075 3104 'line nil nil) (evil-delete 3075 3099 'line nil nil) (evil-delete 3075 3115 'line nil nil) (evil-delete 3075 3096 'line nil nil) (evil-delete 3075 3097 'line nil nil) (evil-delete 3075 3093 'line nil nil) (evil-delete 3074 3099 'line nil nil) (evil-delete 2827 2841 'line nil nil) (evil-change 3258 3262 'exclusive nil nil) (evil-delete 3241 3258 'line nil nil) (evil-delete 2893 2910 'line nil nil) (evil-delete 2863 2881 'line nil nil) (evil-delete 3149 3172 'line nil nil) (evil-delete 2934 2957 'line nil nil) (evil-delete 2769 2770 'line nil nil) (evil-delete 2294 2340 'line nil nil) (evil-delete 3056 3114 'line nil nil) (evil-delete 2841 2899 'line nil nil) (kill-buffer "Pavucontrol<2>") (evil-delete 35746 35764 'line nil nil) (evil-delete 2894 2991 'line nil nil) (evil-delete 3206 3303 'line nil nil) (evil-yank 3222 3302 'inclusive nil nil) (evil-yank 2910 2990 'inclusive nil nil) (evil-delete 34546 34580 'line nil nil) (evil-delete 281 309 'line nil nil) (evil-delete 309 340 'line nil nil) (company-mode 'toggle) (evil-yank 33542 33606 'inclusive nil nil) (evil-delete 2604 2643 'line nil nil) (evil-delete 2154 2155 'line nil nil) (evil-delete 2154 2178 'line nil nil) (evil-delete 2670 2742 'line nil nil) (evil-delete 2670 2769 'line nil nil) (evil-delete 2670 2734 'line nil nil) (evil-delete 3255 3270 'inclusive nil nil) (evil-change 3034 3047 'inclusive nil nil) (evil-change 2976 3016 'inclusive nil nil) (evil-change 2977 3014 'inclusive nil nil) (evil-delete 1901 1955 'line nil nil) (evil-delete 1901 1973 'line nil nil) (evil-delete 1542 1596 'line nil nil) (evil-delete 1542 1614 'line nil nil) (evil-yank 32132 32337 'inclusive nil nil) (evil-delete 2881 2935 'line nil nil) (evil-change 382 395 'inclusive nil nil) (evil-change 382 387 'exclusive nil nil) (evil-delete 2881 2882 'line nil nil) (evil-change 1359 1374 'exclusive nil nil) (evil-replace 2846 2847 'exclusive 102) (evil-delete 3423 3461 'line nil nil) (evil-delete 30786 30810 'line nil nil) (evil-delete 30749 30790 'line nil nil) (evil-delete 30726 30738 'line nil nil) (evil-yank 30351 30502 'inclusive nil nil) (evil-delete 29990 30020 'line nil nil) (evil-yank 29464 29503 'exclusive nil nil) (evil-delete 2893 2920 'line nil nil) (evil-delete 3423 3456 'line nil nil) (evil-delete 3431 3458 'line nil nil) (evil-delete 3398 3425 'line nil nil) (rename-buffer "*User page fetch*" nil) (kill-buffer "*User page fetch*") (evil-delete 2868 2895 'line nil nil) (evil-replace 2887 2888 'exclusive 48) (evil-replace 2886 2887 'exclusive 50) (evil-replace 3421 3422 'exclusive 111) (evil-delete 25570 25582 'line nil nil) (evil-yank 24621 24844 'inclusive nil nil) (evil-delete 24518 24529 'line nil nil) (kill-buffer "Stonesense") (ibuffer-list-buffers nil) (ibuffer-list-buffers nil) (exwm-reset) (evil-delete 21890 21926 'line nil nil) (evil-yank 21297 21358 'inclusive nil nil) (evil-delete 19970 19992 'line nil nil) (evil-delete 19924 19940 'line nil nil) (evil-delete 19290 19294 'line nil nil) (evil-delete 19290 19298 'line nil nil) (evil-delete 9692 9787 'line nil nil) (evil-delete 9452 9522 'line nil nil) (evil-delete 9452 9546 'line nil nil) (evil-find-char-to nil 32) (evil-delete 316 360 'line nil nil) (sudo-edit nil) (evil-delete 135 182 'line nil nil) (kill-buffer "*Backtrace*") (evil-delete 1224 1231 'line nil nil) (evil-delete 1203 1232 'line nil nil) (evil-delete 1203 1220 'line nil nil) (evil-delete 1203 1221 'line nil nil) (evil-delete 114894 114895 'line nil nil) (evil-delete 114894 114981 'line nil nil) (evil-delete 114894 114946 'line nil nil) (evil-delete 66463 66464 'line nil nil) (evil-delete 66463 66546 'line nil nil) (evil-delete 66463 66484 'line nil nil) (evil-delete 66463 66488 'line nil nil) (evil-delete 66463 66478 'line nil nil) (evil-delete 66463 66483 'line nil nil) (evil-delete 66463 66482 'line nil nil) (evil-delete 66463 66479 'line nil nil) (evil-delete 66463 66481 'line nil nil) (evil-delete 66463 66491 'line nil nil) (evil-delete 66463 66485 'line nil nil) (evil-delete 66463 66494 'line nil nil) (evil-delete 66463 66486 'line nil nil) (evil-delete 66463 66529 'line nil nil) (evil-delete 65741 65769 'line nil nil) (evil-delete 33004 33005 'line nil nil) (evil-delete 33004 33103 'line nil nil) (evil-delete 33004 33030 'line nil nil) (evil-delete 33004 33026 'line nil nil) (evil-delete 33004 33029 'line nil nil) (evil-delete 33004 33035 'line nil nil) (evil-delete 33004 33027 'line nil nil) (evil-delete 33004 33020 'line nil nil) (evil-delete 33004 33050 'line nil nil) (evil-delete 26806 26810 'exclusive nil nil) (evil-delete 26806 26807 'exclusive nil nil) (evil-delete 26806 26823 'exclusive nil nil) (evil-delete 26806 26809 'exclusive nil nil) (evil-delete 24420 24422 'exclusive nil nil) (evil-delete 10164 10192 'line nil nil) (evil-delete 5063 5093 'line nil nil) (evil-delete 7820 7844 'line nil nil) (evil-delete 2016 2046 'line nil nil) (evil-delete 9720 9721 'line nil nil) (evil-delete 9720 9805 'line nil nil) (evil-yank 17735 17831 'inclusive nil nil) (evil-yank 17221 17455 'inclusive nil nil) (evil-delete 17087 17133 'line nil nil) (evil-yank 16812 16928 'inclusive nil nil) (evil-delete 16777 16826 'inclusive nil nil) (evil-yank 16608 16651 'exclusive nil nil) (evil-delete 16545 16574 'line nil nil) (evil-delete 16448 16486 'line nil nil) (evil-delete 15940 15997 'line nil nil) (evil-delete 15989 16001 'inclusive nil nil) (evil-yank 15852 15889 'inclusive nil nil) (evil-yank 15639 15700 'exclusive nil nil) (evil-yank 15130 15173 'exclusive nil nil) (evil-yank 14594 14810 'inclusive nil nil) (display-time-mode 'toggle) (evil-delete 14515 14535 'line nil nil) (evil-yank 12837 12967 'inclusive nil nil) (evil-yank 12014 12045 'exclusive nil nil) (evil-yank 11269 11328 'exclusive nil nil) (evil-delete 11266 11275 'line nil nil) (evil-delete 9424 9466 'line nil nil) (evil-delete 9424 9455 'line nil nil) (evil-yank 9030 9178 'inclusive nil nil) (evil-delete 8870 8911 'line nil nil) (evil-yank 8507 8546 'exclusive nil nil) (evil-delete 8181 8234 'line nil nil) (evil-yank 6709 6748 'exclusive nil nil) (evil-yank 6579 6618 'exclusive nil nil) (evil-delete 5750 5772 'line nil nil) (evil-yank 4711 4772 'exclusive nil nil) (evil-delete 4483 4494 'line nil nil) (evil-delete 4301 4332 'line nil nil) (evil-yank 3850 3893 'inclusive nil nil) (evil-yank 3623 3841 'inclusive nil nil) (evil-delete 3847 3882 'line nil nil) (evil-delete 3083 3139 'line nil nil) (evil-delete 2778 2797 'line nil nil) (evil-delete 2778 2812 'line nil nil) (evil-yank 2551 2748 'inclusive nil nil) (evil-downcase 1829 1834 'line) (evil-delete 169 190 'inclusive nil nil) (evil-find-char nil 60) (evil-delete 14 73 'inclusive nil nil) (evil-replace 151 151 'exclusive 114) (evil-delete 192 213 'inclusive nil nil) (evil-delete 36 59 'inclusive nil nil) (evil-yank 75 98 'inclusive nil nil) (erc ':server "irc.rizon.net" ':port 6660 ':nick "sumisu_" ':password nil) (kill-buffer "config.json") (rename-buffer "Rtorrent" nil) (rename-buffer "Trackma" nil) (rename-buffer "Terminal" nil) (emms-player-mpd-connect) (emms-player-mpd-seek) (emms-player-mpd-show nil) (eval-expression '(add-to-list 'emms-player-list 'emms-player-mpd) nil) (eval-expression '(setq emms-player-mpd-server-port "6600") nil) (eval-expression '(setq emms-player-mpd-server-name "localhost") nil) (package-install 'emms-player-mpv nil) (eval-expression '(emms-all) nil) (package-install 'emms nil) (kill-buffer "*ansi-term*<7>") (kill-buffer "Tor Browser") (kill-buffer #("feet" 0 4 (face ivy-subdir))) (kill-buffer "53756151_p0.png") (imagex-sticky-mode 'toggle) (package-install 'image+ nil) (image-mode-fit-frame nil t) (eval-expression '(add-to-list 'evil-insert-state-modes 'image-mode) nil) (kill-buffer "rtorrent") (eval-expression 'image-mode-hook nil) (eval-expression '(image-mode-hook) nil) (apropos-documentation '("image-mode-hook") nil) (eval-expression '(add-hook 'image-mode-hook 'evil-insert-state) nil) (eval-expression '(evil-insert-state) nil) (evil-change 1 5 'inclusive nil nil) (evil-set-marker 97) (image-next-file 1) (kill-buffer "*ansi-term*<4>") (evil-delete 3506 3538 'line nil nil) (evil-delete 3340 3372 'line nil nil) (evil-delete 82856 82865 'line nil nil) (evil-delete 82666 82706 'line nil nil) (evil-delete 82666 82686 'line nil nil) (evil-delete 82279 82287 'line nil nil) (evil-delete 82231 82255 'line nil nil) (evil-delete 81138 81171 'line nil nil) (evil-delete 81018 81027 'line nil nil) (evil-delete 80874 80897 'line nil nil) (evil-delete 80844 80863 'line nil nil) (evil-delete 80823 80875 'line nil nil) (evil-delete 80169 80196 'line nil nil) (kill-buffer #("kahr" 0 4 (face ivy-subdir))) (kill-buffer #("Downloads" 0 9 (face ivy-subdir))) (kill-buffer "df_43_05_linux.tar.bz2") (kill-buffer "item_helm.txt (df_43_05_linux.tar.bz2)") (evil-delete 78948 78968 'line nil nil) (evil-delete 78884 78903 'line nil nil) (evil-delete 3625 3650 'line nil nil) (evil-delete 3625 3711 'line nil nil) (evil-delete 3625 3662 'line nil nil) (evil-delete 3261 3305 'line nil nil) (evil-delete 3471 3515 'line nil nil) (evil-change 2809 2824 'exclusive nil nil) (evil-delete 78229 78270 'line nil nil) (evil-delete 78135 78156 'line nil nil) (evil-yank 128819 128842 'inclusive nil nil) (evil-change 1628 1632 'exclusive nil nil) (evil-delete 1670 1671 'line nil nil) (evil-delete 1997 2010 'line nil nil) (evil-yank 70427 70461 'inclusive nil nil) (evil-delete 76838 76900 'line nil nil) (evil-delete 76838 76892 'line nil nil) (evil-delete 76305 76313 'line nil nil) (evil-delete 1760 1791 'line nil nil) (evil-delete 1760 1843 'line nil nil) (evil-delete 1760 1769 'line nil nil) (evil-delete 1760 1761 'line nil nil) (evil-delete 1522 1523 'line nil nil) (evil-delete 1742 1771 'line nil nil) (evil-delete 1626 1647 'inclusive nil nil) (evil-yank 96 112 'exclusive nil nil) (evil-change 1590 1595 'exclusive nil nil) (evil-delete 2458 2485 'line nil nil) (evil-delete 2458 2480 'line nil nil) (evil-delete 2458 2481 'line nil nil) (evil-delete 76010 76071 'line nil nil) (evil-yank 2633 2700 'inclusive nil nil) (evil-yank 2660 2714 'inclusive nil nil) (evil-delete 2394 2414 'line nil nil) (evil-delete 72547 72568 'line nil nil) (evil-change 2612 2617 'exclusive nil nil) (evil-delete 2458 2459 'line nil nil) (evil-delete 72080 72115 'line nil nil) (evil-delete 71878 71891 'line nil nil) (evil-delete 70767 70779 'line nil nil) (evil-delete 70540 70607 'line nil nil) (evil-delete 70040 70061 'line nil nil) (evil-delete 69967 70000 'inclusive nil nil) (evil-delete 69731 69737 'line nil nil) (evil-delete 69731 69783 'line nil nil) (evil-delete 69618 69633 'line nil nil) (evil-delete 68861 68879 'line nil nil) (evil-delete 2135 2158 'line nil nil) (evil-change 2145 2156 'inclusive nil nil) (evil-change 1930 2962 'line nil nil) (evil-delete 2318 2347 'line nil nil) (evil-delete 2318 2358 'line nil nil) (evil-delete 2318 2369 'line nil nil) (evil-delete 2318 2344 'line nil nil) (evil-delete 2318 2370 'line nil nil) (evil-delete 2786 2872 'line nil nil) (evil-delete 2786 2860 'line nil nil) (evil-delete 2786 2800 'line nil nil) (evil-delete 2786 2875 'line nil nil) (evil-delete 2786 2850 'line nil nil) (evil-delete 2786 2843 'line nil nil) (evil-delete 2786 2818 'line nil nil) (evil-delete 2786 2825 'line nil nil) (evil-delete 2786 2837 'line nil nil) (evil-delete 2786 2834 'line nil nil) (evil-delete 2786 2849 'line nil nil) (evil-change 2119 2123 'exclusive nil nil) (evil-delete 67576 67599 'inclusive nil nil) (evil-change 2096 2125 'inclusive nil nil) (evil-delete 2072 2087 'line nil nil) (evil-delete 2087 2141 'line nil nil) (evil-yank 95 113 'inclusive nil nil) (evil-delete 66242 66281 'inclusive nil nil) (erc-get-channel-mode-from-keypress "e") (evil-delete 236 266 'line nil nil) (evil-delete 93 123 'line nil nil) (evil-delete 63199 63219 'line nil nil) (evil-delete 63199 63215 'line nil nil) (evil-delete 63130 63166 'line nil nil) (evil-delete 62270 62282 'line nil nil) (evil-delete 62152 62171 'line nil nil) (evil-change 317 322 'exclusive nil nil) (evil-change 229 234 'exclusive nil nil) (evil-change 207 212 'exclusive nil nil) (evil-delete 182 182 'exclusive nil nil) (evil-delete 181 184 'inclusive nil nil) (evil-delete 184 185 'inclusive nil nil) (evil-change 143 163 'inclusive nil nil) (evil-change 119 139 'inclusive nil nil) (evil-delete 1726 1769 'line nil nil) (evil-delete 1462 1505 'line nil nil) (evil-delete 1439 1471 'line nil nil) (evil-delete 1439 1476 'line nil nil) (evil-delete 1439 1486 'line nil nil) (evil-delete 1439 1519 'line nil nil) (evil-delete 1942 1974 'line nil nil) (evil-delete 1942 1979 'line nil nil) (evil-delete 1942 1989 'line nil nil) (evil-delete 1942 2021 'line nil nil) (evil-delete 58860 58886 'line nil nil) (evil-delete 57934 57945 'line nil nil) (evil-delete 1761 1830 'line nil nil) (evil-delete 2332 2401 'line nil nil) (evil-yank 2271 2331 'inclusive nil nil) (evil-delete 55042 55056 'line nil nil) (evil-delete 54449 54522 'inclusive nil nil) (evil-delete 54246 54296 'line nil nil) (evil-change 2509 2515 'inclusive nil nil) (evil-delete 2464 2470 'inclusive nil nil) (evil-delete 52725 52741 'line nil nil) (evil-delete 52360 52387 'line nil nil) (evil-yank 51462 51523 'inclusive nil nil) (evil-delete 51299 51332 'line nil nil) (evil-delete 50281 50303 'line nil nil) (evil-delete 50254 50287 'line nil nil) (evil-yank 49936 49997 'inclusive nil nil) (evil-delete 48809 48828 'line nil nil) (evil-delete 48638 48648 'line nil nil) (evil-yank 48519 48556 'exclusive nil nil) (evil-delete 48516 48525 'line nil nil) (evil-yank 48286 48326 'inclusive nil nil) (evil-delete 48126 48156 'line nil nil) (evil-delete 47790 47815 'inclusive nil nil) (evil-yank 47276 47316 'inclusive nil nil) (evil-delete 46497 46539 'line nil nil) (evil-delete 46497 46497 'exclusive nil nil) (evil-delete 45887 45906 'line nil nil) (evil-delete 45887 45887 'exclusive nil nil) (evil-delete 45121 45135 'inclusive nil nil) (evil-delete 43219 43232 'inclusive nil nil) (evil-delete 40555 40594 'inclusive nil nil) (evil-delete 37104 37112 'inclusive nil nil) (evil-delete 36985 37033 'inclusive nil nil) (evil-delete 36088 36099 'inclusive nil nil) (evil-delete 35585 35609 'inclusive nil nil) (evil-delete 35220 35282 'inclusive nil nil) (evil-delete 34956 35024 'inclusive nil nil) (evil-delete 34840 34871 'inclusive nil nil) (exwm-floating-toggle-floating) (evil-delete 33499 33512 'inclusive nil nil) (evil-delete 33241 33271 'inclusive nil nil) (evil-delete 32568 32604 'inclusive nil nil) (evil-yank 46111 46202 'inclusive nil nil) (evil-delete 49753 49815 'line nil nil) (evil-delete 31733 31766 'inclusive nil nil) (evil-delete 31250 31328 'inclusive nil nil) (evil-delete 31010 31043 'inclusive nil nil) (evil-delete 30343 30371 'inclusive nil nil) (evil-delete 30240 30288 'inclusive nil nil) (evil-delete 29288 29311 'inclusive nil nil) (evil-delete 3178 3182 'inclusive nil nil) (evil-delete 29288 29313 'inclusive nil nil) (evil-delete 3039 3048 'line nil nil) (evil-delete 3039 3060 'line nil nil) (evil-delete 2868 2869 'line nil nil) (evil-delete 2999 3065 'inclusive nil nil) (evil-replace 2798 2799 'exclusive 43) (evil-replace 2798 2799 'exclusive 95) (evil-change 2630 2644 'inclusive nil nil) (evil-change 2526 2532 'inclusive nil nil) (evil-delete 2535 2552 'line nil nil) (evil-yank 27191 27233 'exclusive nil nil) (evil-delete 27188 27231 'inclusive nil nil) (evil-delete 27113 27143 'inclusive nil nil) (evil-delete 23876 23890 'inclusive nil nil) (evil-delete 23805 23819 'inclusive nil nil) (evil-find-char-to nil 101) (evil-delete 23312 23323 'inclusive nil nil) (evil-delete 23116 23142 'inclusive nil nil) (evil-delete 22815 22842 'inclusive nil nil) (evil-delete 22815 22834 'inclusive nil nil) (evil-delete 22691 22704 'inclusive nil nil) (evil-delete 22691 22709 'inclusive nil nil) (evil-delete 21751 21839 'inclusive nil nil) (evil-delete 21713 21742 'inclusive nil nil) (evil-delete 21503 21525 'inclusive nil nil) (evil-delete 21218 21232 'inclusive nil nil) (evil-delete 20400 20435 'inclusive nil nil) (kill-buffer "fetch_user_pages.py") (evil-delete 2137 2150 'line nil nil) (evil-delete 2137 2138 'line nil nil) (evil-delete 2068 2069 'line nil nil) (evil-delete 20014 20036 'inclusive nil nil) (evil-delete 19971 19980 'inclusive nil nil) (evil-delete 19537 19570 'inclusive nil nil) (evil-delete 19389 19420 'inclusive nil nil) (evil-delete 19328 19384 'line nil nil) (evil-delete 19389 19404 'inclusive nil nil) (evil-delete 2021 2022 'line nil nil) (evil-delete 1971 1984 'line nil nil) (evil-change 1589 1593 'inclusive nil nil) (evil-delete 117 173 'line nil nil) (evil-delete 293 294 'line nil nil) (evil-delete 17362 17433 'inclusive nil nil) (execute-extended-command nil "ansi-term" #("ansi-t
ansi-term
ansi-color-for-comint-mode-filter
ansi-color-for-comint-mode-off
ansi-color-for-comint-mode-on
hydra-launch/ansi-term-and-exit" 6 7 (read-only nil) 7 12 (read-only nil face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2)) 12 16 (read-only nil face ((:foreground "black") ivy-current-match)) 16 17 (read-only nil) 17 22 (read-only nil face ivy-minibuffer-match-face-2) 22 51 (read-only nil) 51 56 (read-only nil face ivy-minibuffer-match-face-2) 56 82 (read-only nil) 82 87 (read-only nil face ivy-minibuffer-match-face-2) 87 125 (read-only nil) 125 130 (read-only nil face ivy-minibuffer-match-face-2) 130 143 (read-only nil))) (evil-delete 16155 16170 'inclusive nil nil) (evil-delete 15806 15814 'inclusive nil nil) (evil-delete 14656 14702 'inclusive nil nil) (evil-delete 14011 14021 'inclusive nil nil) (evil-delete 13913 13928 'inclusive nil nil) (evil-delete 13844 13860 'inclusive nil nil) (evil-delete 13813 13828 'inclusive nil nil) (evil-delete 13802 13812 'inclusive nil nil) (evil-delete 13747 13760 'inclusive nil nil) (evil-delete 13747 13785 'inclusive nil nil) (evil-delete 13747 13772 'inclusive nil nil) (evil-delete 13065 13082 'inclusive nil nil) (evil-delete 11882 11964 'inclusive nil nil) (evil-delete 10181 10234 'inclusive nil nil) (evil-delete 8224 8246 'inclusive nil nil) (evil-delete 7741 7750 'inclusive nil nil) (evil-find-char nil 103) (evil-delete 2549 2572 'inclusive nil nil) (evil-find-char nil 104) (evil-delete 1863 1879 'inclusive nil nil) (evil-delete 1507 1530 'inclusive nil nil) (evil-find-char-to nil 104) (evil-change 26911 26920 'inclusive nil nil) (rename-buffer "trackma" nil) (rename-buffer "rtorrent" nil) (kill-buffer "*ansi-term*") (evil-delete 26612 26613 'line nil nil) (evil-replace 28030 28031 'exclusive 94) (kill-buffer "*ansi-term*") (kill-buffer "*ansi-term*") (lispyville-delete 117 188 'line nil nil) (lispyville-delete 117 144 'line nil nil) (evil-delete 2036 2107 'line nil nil) (kill-buffer "*ansi-term*") (evil-delete 177 204 'inclusive nil nil) (eval-expression '(define-key term-raw-map (kbd "C-c o") (term-send-raw-string "")) nil) (eval-expression '(define-key term-raw-map ("kbd C-c o") (term-send-raw-string "")) nil) (evil-replace 1977 1978 'exclusive 113) (eval-expression '(define-key term-raw-map (kbd "C-p") nil) nil) (eval-expression '(term-set-escape-char 16) nil) (kill-buffer "*ansi-term*") (evil-replace 1977 1978 'exclusive 112) (kill-buffer "*ansi-term*") (evil-replace 1895 1896 'inclusive 45) (erc-scrolltobottom-enable) (counsel-linux-app) (eval-expression '(xcb:connect-to-socket "/tmp/.X11-unix/X5") nil) (eval-expression '(xcb:connect) nil) (eval-expression '(xcb :connect) nil) (package-list-packages nil) (package-autoremove) (package-list-packages nil) (package-reinstall 'xelb) (zap-to-char 1 90) (package-list-packages nil) (execute-extended-command nil "package-list-packages") (execute-extended-command nil "package-install") (execute-extended-command nil "package-refresh-contents") (evil-delete 35454 35486 'inclusive nil nil) (evil-delete 35415 35441 'inclusive nil nil) (ansi-term "/bin/zsh") (evil-delete 2479 2479 'exclusive nil nil) (evil-delete 34392 34414 'inclusive nil nil) (evil-change 1783 1796 'inclusive nil nil) (evil-delete 32580 32605 'inclusive nil nil) (evil-delete 197 198 'line nil nil) (evil-delete 197 208 'line nil nil) (evil-change 2114 2122 'inclusive nil nil) (evil-delete 32387 32432 'inclusive nil nil) (evil-delete 32258 32301 'inclusive nil nil) (evil-delete 32114 32142 'inclusive nil nil) (evil-delete 31695 31731 'inclusive nil nil) (evil-delete 30355 30387 'inclusive nil nil) (evil-delete 22772 22826 'inclusive nil nil) (evil-delete 21611 21664 'inclusive nil nil) (evil-delete 2050 2063 'line nil nil) (evil-delete 2050 2051 'line nil nil) (evil-delete 2050 2050 'exclusive nil nil) (evil-delete 2064 2064 'exclusive nil nil) (evil-change 2088 2099 'inclusive nil nil) (evil-delete 21004 21077 'inclusive nil nil) (evil-change 2055 2057 'exclusive nil nil) (evil-delete 1225 1319 'line nil nil) (evil-change 2233 2235 'exclusive nil nil) (evil-change 1874 1876 'exclusive nil nil) (evil-delete 1803 1823 'line nil nil) (evil-change 2311 2346 'inclusive nil nil) (evil-change 1969 2004 'inclusive nil nil) (kill-buffer "*ansi-term*<7>") (evil-delete 15407 15409 'inclusive nil nil) (evil-delete 2512 2513 'line nil nil) (evil-delete 2512 2524 'line nil nil) (evil-delete 2560 2582 'line nil nil) (evil-change 2235 2240 'exclusive nil nil) (evil-delete 2247 2260 'inclusive nil nil) (evil-change 1862 1867 'exclusive nil nil) (evil-delete 2307 2316 'line nil nil) (evil-delete 1928 1972 'line nil nil) (evil-delete 14858 14944 'inclusive nil nil) (evil-delete 13308 13330 'inclusive nil nil) (evil-delete 13246 13283 'inclusive nil nil) (evil-delete 2128 2133 'line nil nil) (evil-delete 2128 2129 'line nil nil) (evil-change 1834 1838 'inclusive nil nil) (kill-buffer "*Python*") (evil-change 2056 2091 'inclusive nil nil) (kill-buffer "*Python*") (kill-buffer "*Python*") (evil-change 1834 1869 'inclusive nil nil) (kill-buffer "*Python*") (evil-delete 6139 6168 'inclusive nil nil) (evil-delete 1132922 1132949 'inclusive nil nil) (evil-delete 2517 2537 'line nil nil) (evil-delete 2517 2563 'line nil nil) (evil-delete 1132451 1132473 'inclusive nil nil) (evil-delete 5018 5050 'inclusive nil nil) (evil-delete 2583 2587 'inclusive nil nil) (evil-delete 2588 2588 'line nil nil) (evil-delete 2302 2322 'line nil nil) (evil-change 2158 2163 'exclusive nil nil) (evil-change 2016 2021 'exclusive nil nil) (evil-delete 1995 2003 'inclusive nil nil) (evil-delete 1995 1996 'line nil nil) (evil-change 1671 1677 'exclusive nil nil) (kill-buffer "#toshokan") (evil-delete 21325 21344 'inclusive nil nil) (evil-delete 20966 20996 'inclusive nil nil) (evil-find-char-to nil 116) (evil-find-char-to nil 105) (evil-find-char-to nil 127) (evil-delete 1627 1627 'line nil nil) (evil-delete 1627 1647 'line nil nil) (evil-delete 1627 1690 'line nil nil) (evil-delete 1627 1685 'line nil nil) (evil-delete 1627 1657 'line nil nil) (evil-delete 1785 1785 'exclusive nil nil) (evil-delete 15163 15180 'inclusive nil nil) (evil-delete 1641 1647 'inclusive nil nil) (evil-change 513633 513702 'inclusive nil nil) (evil-delete 1616 1677 'line nil nil) (calc nil nil 1) (evil-delete 1479 1487 'inclusive nil nil) (evil-delete 495996 495998 'inclusive nil nil) (evil-delete 495996 495997 'inclusive nil nil) (evil-find-char nil 32) (evil-delete 493030 493030 'inclusive nil nil) (evil-change 649 652 'exclusive nil nil) (evil-delete 1053 1054 'inclusive nil nil) (evil-delete 631 642 'line nil nil) (evil-delete 1032 1033 'inclusive nil nil) (evil-delete 676 691 'line nil nil) (evil-change 964 965 'exclusive nil nil) (evil-delete 780 790 'line nil nil) (evil-delete 431 441 'inclusive nil nil) (evil-change 412 416 'exclusive nil nil) (evil-delete 46 47 'line nil nil) (evil-delete 102 143 'line nil nil) (evil-delete 86 87 'line nil nil) (evil-delete 47 59 'line nil nil) (evil-delete 568 572 'inclusive nil nil) (evil-delete 249 263 'inclusive nil nil) (evil-delete 10526 10537 'inclusive nil nil) (evil-change 146 154 'exclusive nil nil) (evil-change 90 98 'exclusive nil nil) (evil-change 143 148 'exclusive nil nil) (evil-delete 10312 10333 'inclusive nil nil) (evil-delete 9987 10018 'inclusive nil nil) (evil-yank 8100 8100 'inclusive nil nil) (evil-delete 8079 8164 'inclusive nil nil) (describe-key-briefly "?" nil 1) (describe-key-briefly "" nil 1) (evil-delete 5576 5635 'inclusive nil nil) (evil-delete 2673 2707 'inclusive nil nil) (erc ':server "irc.rizon.net" ':port 6660 ':nick "sumisu" ':password "Memes123") (kill-buffer "irc.rizon.net:6660") (erc ':server "irc.rizon.net" ':port 6660 ':nick "sumisu" ':password "Memes1@3RKFhp") (kill-buffer "irc.rizon.net:6660") (kill-buffer "#toshokan") (evil-delete 4895 4951 'inclusive nil nil) (kill-buffer "#toshokan") (evil-delete 91265 91344 'inclusive nil nil) (kill-buffer "*eshell*") (kill-buffer "Pavucontrol") (kill-buffer "Google-chrome<2>") (kill-buffer "Pavucontrol") (kill-buffer "Wine<3>") (profiler-stop) (kill-buffer "*CPU-Profiler-Report 2017-05-05 16:48:02*") (kill-buffer "*Memory-Profiler-Report 2017-05-05 16:48:02*") (evil-delete 2016 2090 'inclusive nil nil) (evil-delete 1988 2090 'inclusive nil nil) (evil-delete 2016 2063 'inclusive nil nil) (evil-delete 1988 2063 'inclusive nil nil) (system-packages-install "audacity") (execute-extended-command nil "system-packages-install" #("system packages inst
system-packages-list-installed-packages
system-packages-uninstall
system-packages-install" 20 21 (read-only nil) 21 27 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 27 28 (face ((:foreground "black") (background-color . "#496885") . ivy-minibuffer-match-face-1) read-only nil) 28 36 (face ((:foreground "black") (background-color . "#6988ff") . ivy-minibuffer-match-face-3) read-only nil) 36 42 (face ((:foreground "black") (background-color . "#496885") . ivy-minibuffer-match-face-1) read-only nil) 42 45 (face ((:foreground "black") (background-color . "#7c5cb0") . ivy-minibuffer-match-face-4) read-only nil) 45 60 (face ((:foreground "black") ivy-current-match) read-only nil) 60 61 (read-only nil) 61 67 (face (ivy-minibuffer-match-face-2 ivy-minibuffer-match-face-1) read-only nil) 67 68 (face ivy-minibuffer-match-face-1 read-only nil) 68 76 (face (ivy-minibuffer-match-face-3 ivy-minibuffer-match-face-1) read-only nil) 76 79 (face ivy-minibuffer-match-face-1 read-only nil) 79 82 (face (ivy-minibuffer-match-face-4 ivy-minibuffer-match-face-1) read-only nil) 82 87 (read-only nil) 87 93 (face (ivy-minibuffer-match-face-2 ivy-minibuffer-match-face-1) read-only nil) 93 94 (face ivy-minibuffer-match-face-1 read-only nil) 94 102 (face (ivy-minibuffer-match-face-3 ivy-minibuffer-match-face-1) read-only nil) 102 103 (face ivy-minibuffer-match-face-1 read-only nil) 103 106 (face (ivy-minibuffer-match-face-4 ivy-minibuffer-match-face-1) read-only nil) 106 110 (read-only nil))) (evil-delete 77640 77753 'inclusive nil nil) (kill-buffer "Pavucontrol") (kill-buffer "Pavucontrol") (kill-buffer "*ansi-term*<4>") (evil-delete 19 33 'line nil nil) (evil-delete 109 119 'line nil nil) (evil-delete 517 521 'inclusive nil nil) (evil-delete 522 522 'line nil nil) (evil-delete 472 472 'exclusive nil nil) (evil-delete 74 90 'line nil nil) (evil-delete 315 353 'line nil nil) (evil-delete 315 368 'line nil nil) (evil-delete 61 72 'line nil nil) (evil-delete 145 176 'line nil nil) (evil-delete 190 192 'inclusive nil nil) (evil-delete 145 161 'line nil nil) (evil-delete 19 46 'line nil nil) (evil-delete 529 529 'line nil nil) (evil-delete 529 529 'exclusive nil nil) (evil-delete 530 538 'line nil nil) (evil-delete 530 531 'line nil nil) (evil-delete 19 20 'line nil nil) (evil-delete 19 77 'line nil nil) (evil-delete 19 90 'line nil nil) (evil-delete 19 86 'line nil nil) (exwm-layout-set-fullscreen) (kill-buffer "*ansi-term*<2>") (kill-buffer "launcher-term") (kill-buffer "Wine") (evil-delete 1 47582 'line nil nil) (rename-buffer "launcher-term" nil) (evil-delete 813 814 'line nil nil) (evil-delete 813 837 'line nil nil) (evil-delete 2095 2117 'line nil nil) (evil-delete 2065 2095 'line nil nil) (evil-delete 2095 2118 'line nil nil) (evil-replace 2108 2109 'exclusive 40) (evil-replace 2108 2109 'exclusive 42) (evil-replace 2108 2109 'exclusive 56) (evil-replace 76687 76688 'exclusive 111) (evil-delete 1342 1366 'line nil nil) (evil-change 1709 1713 'inclusive nil nil) (evil-change 1570 1575 'exclusive nil nil) (evil-delete 1482 1516 'line nil nil) (evil-delete 1577 1596 'line nil nil) (evil-delete 1933 1933 'line nil nil) (evil-delete 1763 1774 'line nil nil) (evil-delete 1772 1772 'line nil nil) (evil-delete 1764 1764 'exclusive nil nil) (evil-delete 1764 1764 'line nil nil) (evil-delete 1764 1765 'line nil nil) (evil-delete 1764 1867 'inclusive nil nil) (evil-delete 1577 1582 'inclusive nil nil) (evil-delete 1468 1583 'line nil nil) (evil-delete 42715 42785 'inclusive nil nil) (evil-delete 1485 1485 'exclusive nil nil) (evil-delete 1485 1534 'line nil nil) (evil-yank 1279 1382 'inclusive nil nil) (evil-yank 1376 1381 'exclusive nil nil) (evil-find-char-backward nil 108) (evil-replace 1279 1280 'exclusive 108) (evil-replace 1369 1370 'exclusive 98) (evil-replace 11125 11126 'exclusive 98) (evil-find-char nil 66) (evil-delete 33312 33738 'line nil nil) (evil-find-char nil 61) (evil-execute-macro 1 [105 101 110 116 114 121 91 39 escape 102 61 104 105 39 93 escape 106 48 108 108 108 108 108 108 108 108]) (evil-execute-macro 5 [105 101 110 116 114 121 91 39 escape 102 61 104 105 39 93 escape 106 48 108 108 108 108 108 108 108 108]) (evil-delete 686 686 'exclusive nil nil) (evil-delete 706 706 'exclusive nil nil) (evil-delete 686 698 'line nil nil) (evil-yank 8369 8402 'inclusive nil nil) (evil-yank 8369 8403 'line nil nil) (evil-delete 8441 8451 'inclusive nil nil) (evil-change 8390 8400 'exclusive nil nil) (evil-change 8369 8403 'line nil nil) (evil-change 395 399 'exclusive nil nil) (evil-change 437 441 'exclusive nil nil) (evil-replace 375 376 'exclusive 41) (evil-replace 375 376 'exclusive 40) (evil-delete 391 392 'line nil nil) (evil-delete 369 461 'inclusive nil nil) (evil-yank 310 390 'inclusive nil nil) (evil-replace 376 377 'exclusive 48) (evil-change 372 374 'exclusive nil nil) (evil-delete 674 674 'exclusive nil nil) (evil-delete 600 684 'inclusive nil nil) (evil-replace 6122 6123 'exclusive 93) (evil-replace 6122 6123 'exclusive 50) (evil-replace 6120 6121 'exclusive 50) (evil-yank 460 560 'line nil nil) (evil-delete 560 560 'exclusive nil nil) (evil-delete 27695 27949 'line nil nil) (evil-delete 27695 27695 'exclusive nil nil) (evil-delete 27695 27784 'inclusive nil nil) (evil-change 2664 2696 'inclusive nil nil) (evil-find-char-backward nil 61) (evil-delete 61 62 'line nil nil) (evil-delete 61 92 'inclusive nil nil) (evil-delete 61 76 'line nil nil) (evil-delete 61 84 'inclusive nil nil) (evil-delete 209 209 'exclusive nil nil) (evil-replace 55 56 'exclusive 83) (evil-delete 19 39 'inclusive nil nil) (kill-buffer "*Python*") (venv-deactivate) (kill-buffer "*ansi-term*<5>") (kill-buffer "*ansi-term*<2>") (execute-extended-command nil "rename-buffer" #("rename-buf
occur-rename-buffer
message-rename-buffer
rename-buffer" 10 11 (read-only nil) 11 17 (face ((:foreground "black") ivy-current-match) read-only nil) 17 26 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 26 30 (face ((:foreground "black") ivy-current-match) read-only nil) 30 39 (read-only nil) 39 48 (face ivy-minibuffer-match-face-2 read-only nil) 48 53 (read-only nil) 53 62 (face ivy-minibuffer-match-face-2 read-only nil) 62 66 (read-only nil))) (kill-buffer "*ansi-term*") (kill-buffer "*Python*") (kill-buffer "*ansi-term*<7>") (kill-buffer "Pavucontrol") (kill-buffer "Pavucontrol") (evil-find-char nil 105) (evil-delete 11931 11968 'inclusive nil nil) (emojify-mode 'toggle) (emojify-insert-emoji) (package-install 'emojify nil) (evil-delete 1747 1753 'inclusive nil nil) (evil-replace 1746 1747 'exclusive 67) (evil-replace 1745 1746 'exclusive 82) (yas-expand-from-trigger-key) (yas-expand) (evil-delete 1754 1757 'line nil nil) (eval-expression '(set (make-local-variable 'scroll-conservatively) 100) nil) (eval-expression '(add-to-list 'erc-mode-hook (lambda nil (set (make-local-variable 'scroll-conservatively) 100))) nil) (eval-expression '(add-hook 'erc-insert-post-hook 'erc-scroll-to-bottom) nil) (eval-expression '(setq browse-url-generic-program "google-chrome-stable") nil) (evil-change 4062 4076 'exclusive nil nil) (kill-buffer "Surf") (erc ':server "irc.rizon.net" ':port 6660 ':nick "smith" ':password "Memes1@3''") (evil-replace 147 148 'exclusive 105) (evil-delete 530 530 'line nil nil) (evil-delete 531 539 'line nil nil) (evil-delete 531 545 'line nil nil) (eval-expression '(setq rainbow-ansi-colors nil) nil) (customize-group "rainbow") (kill-buffer "*ansi-term*<5>") (evil-change 9057 9064 'exclusive nil nil) (transpose-chars nil) (kill-buffer "*Buffer List*") (buffer-menu nil) (execute-extended-command nil "buffer-menu" #("buffer-menu
Buffer-menu-this-window
Buffer-menu-delete-backwards
Buffer-menu-execute
hydra-buffer-menu/nil
buffer-menu-open
Buffer-menu-2-window
Buffer-menu-delete
hydra-buffer-menu/Buffer-menu-mark
hydra-buffer-menu/Buffer-menu-delete" 11 12 (read-only nil) 12 22 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 22 35 (face ((:foreground "black") ivy-current-match) read-only nil) 35 36 (read-only nil) 36 46 (face ivy-minibuffer-match-face-2 read-only nil) 46 65 (read-only nil) 65 75 (face ivy-minibuffer-match-face-2 read-only nil) 75 91 (read-only nil) 91 101 (face ivy-minibuffer-match-face-2 read-only nil) 101 107 (read-only nil) 107 117 (face ivy-minibuffer-match-face-2 read-only nil) 117 124 (read-only nil) 124 134 (face ivy-minibuffer-match-face-2 read-only nil) 134 145 (read-only nil) 145 155 (face ivy-minibuffer-match-face-2 read-only nil) 155 170 (read-only nil) 170 180 (face ivy-minibuffer-match-face-2 read-only nil) 180 182 (read-only nil) 182 192 (face ivy-minibuffer-match-face-2 read-only nil) 192 205 (read-only nil) 205 215 (face ivy-minibuffer-match-face-2 read-only nil) 215 217 (read-only nil) 217 227 (face ivy-minibuffer-match-face-2 read-only nil) 227 235 (read-only nil))) (kill-buffer "python-fetch") (comint-mode) (eval-expression '(eval-after-load "term" '(progn (term-set-escape-char 3) (define-key term-raw-map (kbd "C-c") nil))) nil) (kill-buffer "*ansi-term*<3>") (kill-buffer "Pavucontrol") (eval-expression '(term-set-escape-char 1) nil) (evil-change 2073 2085 'inclusive nil nil) (evil-find-char nil 50) (evil-change 1985 1999 'inclusive nil nil) (evil-replace 1950 1951 'exclusive 50) (evil-change 1945 1957 'inclusive nil nil) (evil-change 1881 1893 'inclusive nil nil) (evil-delete 1991 1992 'line nil nil) (evil-delete 2039 2179 'line nil nil) (evil-replace 212 212 'exclusive 101) (evil-change 78 84 'exclusive nil nil) (dired "/home/kahr/Toshokan/toshokan/tests/" nil) (evil-delete 32 33 'line nil nil) (evil-delete 48 48 'line nil nil) (evil-change 43 65 'inclusive nil nil) (kill-buffer "*Python*") (dired "/home/kahr/Toshokan/toshokan/tests/recengine/util/" nil) (make-directory "/home/kahr/Toshokan/toshokan/tests/recengine/util/" t) (kill-buffer "*SPEEDBAR*") (evil-delete 2180 2180 'line nil nil) (evil-delete 2179 2180 'line nil nil) (evil-replace 1910 1911 'exclusive 40) (evil-replace 1939 1940 'exclusive 41) (evil-replace 1910 1911 'exclusive 57) (evil-change 1855 1859 'inclusive nil nil) (evil-change 718492 718492 'line nil nil) (evil-replace 718470 718471 'exclusive 97) (evil-replace 718454 718455 'exclusive 97) (evil-replace 717986 717987 'exclusive 98) (evil-replace 717941 717942 'exclusive 101) (evil-replace 717891 717892 'exclusive 101) (evil-replace 717839 717840 'exclusive 97) (evil-change 717514 717514 'exclusive nil nil) (evil-replace 717361 717362 'exclusive 93) (evil-change 716875 716875 'exclusive nil nil) (evil-delete 1239 1297 'inclusive nil nil) (evil-delete 160 160 'exclusive nil nil) (evil-replace 615 616 'exclusive 56) (evil-change 1022 1023 'exclusive nil nil) (evil-delete 1046 1068 'line nil nil) (evil-delete 1046 1069 'line nil nil) (evil-replace 615 616 'exclusive 50) (evil-replace 613 614 'exclusive 48) (evil-change 613 614 'exclusive nil nil) (evil-replace 714407 714408 'exclusive 54) (evil-replace 714437 714438 'exclusive 49) (evil-replace 714363 714364 'exclusive 57) (evil-replace 714208 714209 'exclusive 98) (evil-replace 714190 714191 'exclusive 57) (evil-replace 714175 714176 'exclusive 56) (evil-replace 714160 714161 'exclusive 55) (evil-replace 714145 714146 'exclusive 54) (evil-delete 714134 714146 'exclusive nil nil) (evil-delete 1449 1523 'line nil nil) (evil-delete 1449 1528 'line nil nil) (evil-delete 623 672 'line nil nil) (evil-delete 483 528 'line nil nil) (evil-delete 1184 1212 'line nil nil) (evil-delete 1053 1123 'line nil nil) (evil-delete 1427 1458 'line nil nil) (evil-replace 658 659 'exclusive 51) (evil-delete 1390 1455 'line nil nil) (evil-change 1767 1775 'exclusive nil nil) (evil-delete 1827 1828 'line nil nil) (evil-delete 1597 1598 'line nil nil) (evil-delete 1504 1583 'line nil nil) (evil-delete 1583 1657 'line nil nil) (evil-delete 1750 1799 'line nil nil) (evil-delete 1390 1462 'line nil nil) (evil-delete 1284 1356 'line nil nil) (evil-delete 2023 2063 'line nil nil) (evil-delete 1400 1416 'inclusive nil nil) (evil-replace 1477 1478 'exclusive 50) (evil-delete 1438 1439 'line nil nil) (evil-delete 1203 1204 'line nil nil) (evil-replace 1683 1684 'exclusive 43) (evil-delete 1128 1156 'line nil nil) (evil-change 1003 1013 'inclusive nil nil) (evil-delete 1530 1530 'line nil nil) (evil-delete 1530 1861 'line nil nil) (evil-delete 1530 1531 'line nil nil) (evil-delete 1497 1569 'inclusive nil nil) (evil-change 1137 1189 'inclusive nil nil) (evil-change 1026 1032 'exclusive nil nil) (evil-change 637 674 'inclusive nil nil) (evil-delete 1 25 'inclusive nil nil) (magit-checkout "recengine") (magit-branch "recengine" "master" nil) (evil-replace 715 716 'exclusive 49) (evil-replace 753 754 'exclusive 48) (evil-delete 802 855 'inclusive nil nil) (evil-delete 802 831 'inclusive nil nil) (evil-delete 742 763 'line nil nil) (evil-delete 742 761 'line nil nil) (evil-delete 764 764 'exclusive nil nil) (evil-change 734 740 'inclusive nil nil) (evil-delete 551 593 'inclusive nil nil) (evil-delete 551 552 'exclusive nil nil) (evil-replace 392 393 'exclusive 56) (evil-change 496 501 'exclusive nil nil) (evil-change 454 459 'exclusive nil nil) (evil-delete 331 336 'inclusive nil nil) (evil-delete 297 312 'line nil nil) (evil-delete 231 312 'line nil nil) (evil-delete 435 435 'exclusive nil nil) (evil-change 218 230 'inclusive nil nil) (evil-delete 148 148 'exclusive nil nil) (evil-delete 148 149 'line nil nil) (evil-delete 148 217 'line nil nil) (evil-change 433 440 'exclusive nil nil) (evil-delete 282 331 'line nil nil) (evil-delete 282 320 'line nil nil) (evil-delete 282 357 'line nil nil) (evil-delete 340 344 'line nil nil) (evil-delete 317 321 'line nil nil) (evil-delete 1 34 'line nil nil) (evil-change 98 108 'inclusive nil nil) (evil-delete 84 95 'inclusive nil nil) (evil-change 88 98 'inclusive nil nil) (evil-change 65 76 'inclusive nil nil) (evil-replace 22 23 'exclusive 110) (evil-replace 21 22 'exclusive 97) (evil-change 16 20 'exclusive nil nil) (evil-replace 11 12 'exclusive 65) (evil-delete 109 109 'exclusive nil nil) (evil-replace 71 72 'exclusive 95) (make-directory "/home/kahr/Toshokan/toshokan/app/recengine/util/" t) (rename-buffer "python-fetch" nil) (evil-replace 147 148 'exclusive 53) (evil-replace 147 148 'exclusive 52) (evil-change 144 148 'exclusive nil nil) (evil-replace 147 148 'exclusive 57) (evil-replace 147 148 'exclusive 56) (kill-buffer "*ansi-term*<4>") (kill-buffer "*magit-diff: toshokan") (kill-buffer ".gitignore") (dired "/home/kahr/Toshokan/toshokan/app/models/" nil) (lispyville-delete 145 209 'line nil nil) (evil-replace 184 185 'exclusive 49) (kill-buffer "*ansi-term*<3>") (kill-buffer "Pavucontrol") (kill-buffer "mahjong.py") (kill-buffer "flake8") (evil-delete 531 538 'line nil nil) (evil-replace 144 145 'exclusive 53) (kill-buffer "Pavucontrol") (kill-buffer "Pipfile") (evil-delete 215 264 'line nil nil) (evil-delete 202 210 'line nil nil) (evil-delete 172 185 'line nil nil) (kill-buffer "Pipfile") (evil-delete 187 199 'line nil nil) (kill-buffer "*ansi-term*<2>") (evil-change 361 363 'exclusive nil nil) (evil-change 397 402 'exclusive nil nil) (evil-delete 428 435 'line nil nil) (evil-change 17 28 'inclusive nil nil) (evil-delete 167 190 'inclusive nil nil) (evil-replace 529 529 'exclusive 101) (evil-replace 146 147 'exclusive 54) (evil-replace 144 145 'exclusive 52) (evil-replace 144 145 'exclusive 51) (evil-replace 146 147 'exclusive 48) (evil-replace 145 146 'exclusive 53) (evil-delete 530 647 'inclusive nil nil) (evil-replace 147 148 'exclusive 55) (evil-replace 147 148 'exclusive 54) (evil-replace 146 147 'exclusive 57) (evil-replace 145 146 'exclusive 50) (kill-buffer "toshokan-shell") (evil-change 144 145 'exclusive nil nil) (kill-buffer "*ansi-term*<2>") (kill-buffer "Tor Browser") (evil-delete 29059 29081 'line nil nil) (kill-buffer "*ansi-term*<2>") (execute-extended-command nil "ansi-term" #("ansi-
ansi-term
ansi-color-for-comint-mode-filter
speedbar-toggle-line-expansion
transient-mark-mode
ansi-color-for-comint-mode-off
ansi-color-for-comint-mode-on
hydra-launch/ansi-term-and-exit
speedbar-change-initial-expansion-list" 5 6 (read-only nil) 6 10 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 10 15 (face ((:foreground "black") ivy-current-match) read-only nil) 15 16 (read-only nil) 16 20 (face ivy-minibuffer-match-face-2 read-only nil) 20 74 (read-only nil) 74 78 (face ivy-minibuffer-match-face-2 read-only nil) 78 83 (read-only nil) 83 87 (face ivy-minibuffer-match-face-2 read-only nil) 87 101 (read-only nil) 101 105 (face ivy-minibuffer-match-face-2 read-only nil) 105 132 (read-only nil) 132 136 (face ivy-minibuffer-match-face-2 read-only nil) 136 175 (read-only nil) 175 179 (face ivy-minibuffer-match-face-2 read-only nil) 179 221 (read-only nil) 221 225 (face ivy-minibuffer-match-face-2 read-only nil) 225 232 (read-only nil))) (evil-paste-from-register 127) (evil-paste-from-register 102) (evil-paste-from-register 18) (rename-buffer "toshokan-shell" nil) (execute-extended-command nil "rename-buffer" #("rename-buffer
occur-rename-buffer
message-rename-buffer
rename-buffer" 13 14 (read-only nil) 14 20 (face ((:foreground "black") ivy-current-match) read-only nil) 20 32 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 32 33 (face ((:foreground "black") ivy-current-match) read-only nil) 33 42 (read-only nil) 42 54 (face ivy-minibuffer-match-face-2 read-only nil) 54 56 (read-only nil) 56 68 (face ivy-minibuffer-match-face-2 read-only nil) 68 69 (read-only nil))) (execute-extended-command nil "rename-buffer" #("rename-bu
occur-rename-buffer
message-rename-buffer
rename-buffer" 9 10 (read-only nil) 10 16 (face ((:foreground "black") ivy-current-match) read-only nil) 16 24 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 24 29 (face ((:foreground "black") ivy-current-match) read-only nil) 29 38 (read-only nil) 38 46 (face ivy-minibuffer-match-face-2 read-only nil) 46 52 (read-only nil) 52 60 (face ivy-minibuffer-match-face-2 read-only nil) 60 65 (read-only nil))) (venv-workon) (kill-buffer "Google-chrome") (list-buffers nil) (kill-buffer "fetch_mal_pages.py") (kill-buffer "*magit: toshokan") (execute-extended-command nil "counsel-linux-app" #("counsel linu
counsel-outline
counsel-ace-link
counsel-linux-app
counsel-org-agenda-headlines" 12 13 (read-only nil) 13 20 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 20 24 (face ((:foreground "black") (background-color . "#496885") . ivy-minibuffer-match-face-1) read-only nil) 24 27 (face ((:foreground "black") (background-color . "#6988ff") . ivy-minibuffer-match-face-3) read-only nil) 27 28 (face ((:foreground "black") ivy-current-match) read-only nil) 28 29 (read-only nil) 29 36 (face (ivy-minibuffer-match-face-2 ivy-minibuffer-match-face-1) read-only nil) 36 41 (face ivy-minibuffer-match-face-1 read-only nil) 41 44 (face (ivy-minibuffer-match-face-3 ivy-minibuffer-match-face-1) read-only nil) 44 46 (read-only nil) 46 53 (face (ivy-minibuffer-match-face-2 ivy-minibuffer-match-face-1) read-only nil) 53 54 (face ivy-minibuffer-match-face-1 read-only nil) 54 57 (face (ivy-minibuffer-match-face-3 ivy-minibuffer-match-face-1) read-only nil) 57 64 (read-only nil) 64 71 (face (ivy-minibuffer-match-face-2 ivy-minibuffer-match-face-1) read-only nil) 71 87 (face ivy-minibuffer-match-face-1 read-only nil) 87 90 (face (ivy-minibuffer-match-face-3 ivy-minibuffer-match-face-1) read-only nil) 90 92 (read-only nil))) (evil-delete 146 156 'line nil nil) (evil-delete 146 160 'line nil nil) (dired "~/.emacs.d/" nil) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buffer") (execute-extended-command nil "flycheck-mode" "flycheck-mode") (execute-extended-command nil "evil-mode" "evil-mod") (lispyville-delete 5083 5133 'line nil nil) (lispyville-delete 5083 5113 'line nil nil) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buf") (execute-extended-command nil "flycheck-error-list-goto-error" "flycheck-error-list-g") (eval-buffer) (kill-buffer "*Messages*") (kill-buffer "*Messages*") (kill-buffer "Google-chrome<2>") (evil-delete 33 44 'line nil nil) (evil-delete 33 41 'line nil nil) (company-jedi 'interactive) (evil-delete 33 50 'line nil nil) (kill-buffer #("fetch_mal_pages.py" 0 18 (face ivy-virtual))) (kill-buffer "get_anime_data_from_title.py") (kill-buffer "fetch_mal_pages.py") (kill-buffer "get_anime_data_from_title.py") (kill-buffer "get_anime_data_from_title.py") (lispyville-change 137 149 'exclusive nil nil) (evil-delete 10560 10615 'line nil nil) (evil-delete 10513 10558 'line nil nil) (evil-change 10435 10439 'exclusive nil nil) (evil-change 10342 10346 'exclusive nil nil) (evil-delete 206 220 'line nil nil) (evil-delete 220 234 'line nil nil) (kill-buffer "*Packages*") (list-packages nil) (evil-delete 207 221 'line nil nil) (evil-delete 221 233 'line nil nil) (jedi-mode 'toggle) (evil-delete 207 208 'line nil nil) (evil-delete 221 232 'line nil nil) (evil-delete 206 216 'line nil nil) (ac-flyspell-workaround) (evil-delete 206 274 'line nil nil) (evil-delete 206 222 'line nil nil) (evil-delete 206 225 'line nil nil) (evil-delete 10496 10543 'line nil nil) (evil-delete 10496 10559 'line nil nil) (evil-delete 10496 10544 'line nil nil) (evil-delete 207 301 'inclusive nil nil) (evil-delete 221 235 'line nil nil) (evil-change 207 274 'line nil nil) (evil-delete 636 637 'line nil nil) (evil-delete 8284 8362 'inclusive nil nil) (evil-delete 8283 8371 'inclusive nil nil) (auto-complete-mode 'toggle) (evil-change 235 273 'inclusive nil nil) (evil-delete 207 220 'line nil nil) (evil-delete 19 49 'line nil nil) (evil-delete 220 231 'line nil nil) (evil-change 217 229 'inclusive nil nil) (kill-buffer "*Python*") (evil-delete 183 184 'line nil nil) (evil-delete 183 197 'line nil nil) (evil-delete 183 215 'line nil nil) (evil-delete 183 262 'line nil nil) (evil-delete 183 233 'line nil nil) (evil-delete 183 207 'line nil nil) (evil-delete 183 204 'line nil nil) (evil-delete 4591 4679 'inclusive nil nil) (evil-delete 4590 4678 'inclusive nil nil) (evil-delete 4768 4823 'inclusive nil nil) (evil-delete 489 490 'line nil nil) (evil-delete 489 504 'inclusive nil nil) (evil-delete 101703 101772 'inclusive nil nil) (rename-buffer "fetching-python" nil) (evil-change 145 150 'exclusive nil nil) (evil-delete 128 151 'line nil nil) (make-directory "/home/kahr/Toshokan/toshokan/tools/" t) (package-install 'virtualenvwrapper nil) (kill-buffer "util.py") (kill-buffer "main.py") (kill-buffer "classes.py") (kill-buffer "ONTHOUDEN_AYY_KEKESEKSEKKESKJSEKJFKJAEKJF.TXT.CO.UK.EXE.BIGTITS.JPG.EXE") (kill-buffer "ned.doc") (kill-buffer ".lesshst") (kill-buffer ".gitconfig") (kill-buffer "tree.png") (kill-buffer "%backup%~") (kill-buffer "wew.png") (kill-buffer "kahr@Lain.26795:1480110966") (kill-buffer ".dmrc") (kill-buffer ".dircolors") (kill-buffer "sudoku.py") (kill-buffer "RhakUtil.py") (kill-buffer "Rhak.py") (kill-buffer "main.py") (kill-buffer "kernel.c") (kill-buffer "mahjong.lisp") (kill-buffer "libmahjong.py") (kill-buffer "main.py") (kill-buffer "JLBE.py") (kill-buffer "FuwaUtil.py") (kill-buffer "Fuwa.py") (kill-buffer "cook.py") (kill-buffer #("Ayy" 0 3 (face ivy-subdir))) (kill-buffer "kek.tar.gz") (evil-change 27937 27938 'exclusive nil nil) (evil-change 27930 27934 'exclusive nil nil) (evil-change 27465 27466 'exclusive nil nil) (evil-change 27458 27462 'exclusive nil nil) (avy-goto-char 106 nil) (evil-delete 29467 29468 'line nil nil) (lispyville-delete 18 46 'line nil nil) (lispyville-delete 46 82 'line nil nil) (lispyville-delete 2580 2581 'line nil nil) (lispyville-delete 2522 2523 'line nil nil) (lispyville-change 2010 2026 'inclusive nil nil) (switch-to-buffer-other-window #("org-init.org" 0 12 (face org-level-4))) (evil-replace 2147 2148 'exclusive 106) (lispyville-delete 1465 1473 'inclusive nil nil) (lispyville-delete 2042 2053 'line nil nil) (lispyville-change 1968 1972 'exclusive nil nil) (evil-replace 1962 1963 'exclusive 102) (evil-replace 1972 1973 'exclusive 106) (lispyville-change 1830 1835 'exclusive nil nil) (swiper-multi) (swiper-mc) (swiper-all) (swiper-avy) (lispyville-change 1952 1962 'exclusive nil nil) (evil-replace 1948 1949 'exclusive 115) (lispyville-change 1812 1815 'exclusive nil nil) (avy-goto-line-above) (avy-goto-line 1) (lispyville-change 1930 1943 'exclusive nil nil) (evil-replace 1926 1927 'exclusive 108) (lispyville-change 1795 1800 'exclusive nil nil) (kill-buffer "*Warnings*") (evil-replace 1970 1971 'exclusive 102) (evil-replace 1970 1971 'exclusive 32) (lispyville-change 1974 1980 'exclusive nil nil) (lispyville-change 1913 1917 'exclusive nil nil) (lispyville-change 1913 1914 'exclusive nil nil) (lispyville-change 1913 1916 'exclusive nil nil) (lispyville-change 1913 1922 'exclusive nil nil) (evil-replace 1909 1910 'exclusive 99) (lispyville-change 1776 1779 'exclusive nil nil) (lispyville-delete 1609 1624 'line nil nil) (lispyville-delete 1628 1642 'line nil nil) (lispyville-delete 1627 1695 'inclusive nil nil) (lispyville-delete 1612 1674 'inclusive nil nil) (lispyville-delete 1601 1658 'inclusive nil nil) (lispyville-change 1585 1592 'exclusive nil nil) (lispyville-change 1585 1587 'exclusive nil nil) (evil-replace 1581 1582 'exclusive 103) (lispyville-change 1444 1450 'exclusive nil nil) (lispyville-change 1568 1582 'exclusive nil nil) (evil-replace 1564 1565 'exclusive 105) (lispyville-change 1429 1436 'exclusive nil nil) (lispyville-delete 1923 1924 'line nil nil) (lispyville-change 1553 1567 'exclusive nil nil) (evil-replace 1549 1550 'exclusive 100) (lispyville-change 1411 1417 'exclusive nil nil) (lispyville-change 1678 1692 'exclusive nil nil) (lispyville-change 1608 1622 'exclusive nil nil) (lispyville-change 1535 1549 'exclusive nil nil) (evil-replace 1674 1675 'exclusive 115) (evil-replace 1604 1605 'exclusive 101) (evil-replace 1531 1532 'exclusive 116) (lispyville-change 1392 1396 'exclusive nil nil) (lispyville-delete 1847 1848 'line nil nil) (evil-replace 1497 1498 'exclusive 95) (evil-replace 1495 1496 'exclusive 95) (evil-replace 1467 1468 'exclusive 95) (evil-replace 1465 1466 'exclusive 95) (hydra-launch/body) (evil-replace 1382 1383 'exclusive 104) (lispyville-delete 1533 1535 'inclusive nil nil) (lispyville-delete 1510 1513 'inclusive nil nil) (lispyville-delete 1487 1492 'inclusive nil nil) (lispyville-delete 1542 1591 'inclusive nil nil) (lispyville-delete 1517 1561 'inclusive nil nil) (lispyville-delete 1491 1537 'inclusive nil nil) (lispyville-delete 1464 1510 'inclusive nil nil) (lispyville-delete 1436 1446 'inclusive nil nil) (lispyville-delete 1446 1473 'inclusive nil nil) (lispyville-change 1570 1584 'exclusive nil nil) (lispyville-change 1570 1572 'exclusive nil nil) (lispyville-delete 1643 1650 'exclusive nil nil) (lispyville-delete 1643 1645 'exclusive nil nil) (evil-replace 1642 1643 'exclusive 94) (evil-replace 1641 1642 'exclusive 32) (evil-replace 1640 1641 'exclusive 94) (evil-replace 1567 1568 'exclusive 94) (lispyville-delete 1765 1779 'line nil nil) (lispyville-delete 1765 1849 'line nil nil) (lispyville-delete 1920 1921 'line nil nil) (lispyville-change 1697 1710 'exclusive nil nil) (evil-replace 1692 1693 'exclusive 115) (lispyville-change 1626 1640 'exclusive nil nil) (evil-replace 1622 1623 'exclusive 101) (evil-replace 1549 1550 'exclusive 116) (lispyville-change 1410 1414 'exclusive nil nil) (lispyville-delete 1405 1416 'line nil nil) (kill-buffer "*eshell*") (evil-delete 27502 27503 'line nil nil) (lispyville-delete 119 131 'line nil nil) (lispyville-delete 2 3 'line nil nil) (kill-buffer "2C/*Org Src org-init.org[ emacs-lisp ]*") (package-install 'ivy-hydra nil) (evil-delete 16949 16950 'line nil nil) (buffer-menu nil) (Buffer-menu-this-window) (avy-goto-char-timer nil) (dired-do-rename nil) (kill-buffer "abbrev_defs") (kill-buffer "wew.png") (dired "/home/kahr/.emacs.d/" nil) (counsel-find-file) (kill-buffer "Zathura") (rename-buffer "higurashi-term" nil) (rename-buffer "steam-term" nil) (kill-buffer "*ansi-term*<6>") (kill-buffer "*ansi-term*<6>") (kill-buffer "*Colors*") (kill-buffer "*ansi-term*<8>") (kill-buffer "*ansi-term*<7>") (kill-buffer "Pavucontrol") (evil-yank 1 1 'inclusive nil nil) (system-packages-update) (kill-buffer "conf.py") (evil-replace 159744 159745 'exclusive 49) (evil-delete 19 59 'line nil nil) (evil-yank 171154 171193 'line nil nil) (kill-buffer #("org-init.org" 0 12 (face ivy-remote))) (kill-buffer "cross-i686-elf") (kill-buffer #("iputils" 0 7 (face ivy-remote))) (sudo-edit nil) (sudo-edit nil) (eval-expression '(defun sudo-edit (&optional arg) "Edit currently visited file as root.

With a prefix ARG prompt for a file to visit.
Will also prompt for a file to visit if current
buffer is not visiting a file." (interactive "P") (if (or arg (not buffer-file-name)) (find-file (concat "/sudo:root@localhost:" (ido-read-file-name "Find file(as root): "))) (find-alternate-file (concat "/sudo:root@localhost:" buffer-file-name)))) nil) (kill-buffer "fish_prompt.fish") (evil-delete 498 572 'line nil nil) (evil-find-char nil 115) (evil-record-macro 10) (kill-buffer "fish") (evil-delete 588 589 'line nil nil) (package-install 'no-littering nil) (kill-buffer "*Help*") (system-packages-list-installed-packages nil) (eval-expression '(setq system-packages-packagemanager 'emerge) nil) (describe-variable 'system-packages-packagemanager) (system-packages-list-installed-packages nil) (package-install 'system-packages nil) (kill-buffer "mahjong.py") (evil-delete 5065 5088 'line nil nil) (evil-delete 5065 5075 'line nil nil) (evil-delete 5065 5083 'line nil nil) (evil-delete 5065 5077 'line nil nil) (evil-delete 5128 5133 'line nil nil) (indent-guide-mode 'toggle) (kill-buffer "*Help*") (kill-buffer "*Customize Face: Fic Face*") (describe-face '(fic-face)) (kill-buffer "*Help*") (kill-buffer "*Customize Face: Fic Face*") (package-install 'indent-guide nil) (multi-term) (multi-term-next nil) (multi-term-next nil) (multi-term-next nil) (execute-extended-command nil "multi-term" #("multi-term
multi-term-next
multi-term
multi-term-dedicated-open
multi-term-dedicated-toggle
multi-term-prev
multi-term-dedicated-select" 10 11 (read-only nil) 11 20 (read-only nil face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2)) 20 26 (read-only nil face ((:foreground "black") ivy-current-match)) 26 27 (read-only nil) 27 36 (read-only nil face ivy-minibuffer-match-face-2) 36 38 (read-only nil) 38 47 (read-only nil face ivy-minibuffer-match-face-2) 47 64 (read-only nil) 64 73 (read-only nil face ivy-minibuffer-match-face-2) 73 92 (read-only nil) 92 101 (read-only nil face ivy-minibuffer-match-face-2) 101 108 (read-only nil) 108 117 (read-only nil face ivy-minibuffer-match-face-2) 117 135 (read-only nil))) (package-install 'multi-term nil) (execute-extended-command nil "package-install" #("package-in
package-install-file
package-install-selected-packages
package-install-from-buffer
package-import-keyring
package-initialize
package-install" 10 11 (read-only nil) 11 20 (read-only nil face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2)) 20 31 (read-only nil face ((:foreground "black") ivy-current-match)) 31 32 (read-only nil) 32 41 (read-only nil face ivy-minibuffer-match-face-2) 41 66 (read-only nil) 66 75 (read-only nil face ivy-minibuffer-match-face-2) 75 94 (read-only nil) 94 103 (read-only nil face ivy-minibuffer-match-face-2) 103 117 (read-only nil) 117 126 (read-only nil face ivy-minibuffer-match-face-2) 126 136 (read-only nil) 136 145 (read-only nil face ivy-minibuffer-match-face-2) 145 151 (read-only nil))) (kill-buffer "*Packages*") (kill-buffer "*simple-mpc-main*") (kill-buffer "*simple-mpc-current-playlist*") (evil-change 309 323 'line nil nil) (simple-mpc) (list-packages nil) (kill-buffer "*MPC Album|Playlists*") (kill-buffer "*MPC Artist|Composer|Performers*") (kill-buffer "*MPC-Status*") (kill-buffer "*MPC Genres*") (kill-buffer "*MPC-Songs*") (mpc) (package-install 'counsel-projectile nil) (package-install 'projectile nil) (kill-buffer "*Backtrace*") (evil-delete 13103 13137 'line nil nil) (evil-replace 13089 13090 'exclusive 51) (evil-set-marker 32) (avy-goto-char-timer nil) (avy-goto-char-timer nil) (avy-goto-char-timer nil) (rename-buffer "fish" nil) (execute-extended-command nil "ansi-term" #("ansi
image-transform-fit-to-width
image-transform-reset
transpose-chars
web-mode-element-transpose
ansi-term
ansi-color-for-comint-mode-filter
image-transform-set-scale
transpose-lines
transpose-words" 4 5 (read-only nil) 5 13 (read-only nil face ((:foreground "black") ivy-current-match)) 13 16 (read-only nil face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2)) 16 33 (read-only nil face ((:foreground "black") ivy-current-match)) 33 42 (read-only nil) 42 45 (read-only nil face ivy-minibuffer-match-face-2) 45 58 (read-only nil) 58 61 (read-only nil face ivy-minibuffer-match-face-2) 61 91 (read-only nil) 91 94 (read-only nil face ivy-minibuffer-match-face-2) 94 99 (read-only nil) 99 102 (read-only nil face ivy-minibuffer-match-face-2) 102 109 (read-only nil) 109 112 (read-only nil face ivy-minibuffer-match-face-2) 112 151 (read-only nil) 151 154 (read-only nil face ivy-minibuffer-match-face-2) 154 171 (read-only nil) 171 174 (read-only nil face ivy-minibuffer-match-face-2) 174 187 (read-only nil) 187 190 (read-only nil face ivy-minibuffer-match-face-2) 190 200 (read-only nil))) (evil-delete 1 2 'line nil nil) (evil-delete 1 11 'line nil nil) (evil-delete 1 27 'line nil nil) (evil-delete 1 36 'line nil nil) (evil-delete 1 16 'line nil nil) (evil-change 13821 13825 'exclusive nil nil) (evil-change 13838 13842 'exclusive nil nil) (evil-change 13790 13794 'exclusive nil nil) (evil-change 13773 13777 'exclusive nil nil) (evil-change 13741 13745 'exclusive nil nil) (evil-change 13723 13727 'exclusive nil nil) (evil-yank 13650 13697 'inclusive nil nil) (evil-delete 13648 13708 'line nil nil) (eval-expression '(kbd "s-<left>") nil) (eval-expression '(kbd "s-left") nil) (windmove-right nil) (eval-expression '(windmove-default-keybindings 'meta) nil) (windmove-left nil) (evil-delete 13695 13696 'line nil nil) (windmove-right nil) (avy-goto-char 105 nil) (eval-expression 'aw-keys nil) (eval-expression '(aw--make-backgrounds (aw-window-list)) nil) (eval-expression 'test-var nil) (eval-expression '(setq test-var (mapcar (lambda (wnd) (cons (aw-offset wnd) wnd)) (aw-window-list))) nil) (eval-expression '(aw-offset (caddr (aw-window-list))) nil) (eval-expression '(aw-offset (car (aw-window-list))) nil) (eval-expression '(aw-window-list) nil) (eval-expression '(ace-window-list) nil) (package-reinstall 'avy) (eval-expression '(aw-select "test") nil) (ace-select-window) (eval-expression '(aw-select) nil) (eval-expression '(avy-read) nil) (copy-region-as-kill 808 1 1) (yank nil) (eval-expression '(exwm-input--init) nil) (eval-expression '(cdr '(1 . 2)) nil) (eval-expression '(cadr '(1 . 2)) nil) (lispyville-change 23126 23128 'exclusive nil nil) (lispyville-delete 23039 23041 'exclusive nil nil) (eval-expression '(list '(1 2 3)) nil) (eval-expression '(car 1) nil) (eval-expression '(cadr '(1 2 3 4)) nil) (eval-expression '(cadr '(1 . 64)) nil) (eval-expression '(cadr (1 64)) nil) (eval-expression '(exwm-init) nil) (list-packages nil) (list-packages nil) (avy-goto-char 101 nil) (package-reinstall 'ace-window) (ace-window 1) (ace-window-display-mode 'toggle) (execute-extended-command nil "package-install" #("package-install
package-install-file
package-install-selected-packages
package-install-from-buffer
package-install" 15 16 (read-only nil) 16 30 (read-only nil face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2)) 30 36 (read-only nil face ((:foreground "black") ivy-current-match)) 36 37 (read-only nil) 37 51 (read-only nil face ivy-minibuffer-match-face-2) 51 71 (read-only nil) 71 85 (read-only nil face ivy-minibuffer-match-face-2) 85 99 (read-only nil) 99 113 (read-only nil face ivy-minibuffer-match-face-2) 113 114 (read-only nil))) (package-install 'ace-window nil) (exwm-workspace-switch 1) (exwm-workspace-switch 0) (exwm-workspace-switch 9) (evil-delete 12613 12614 'line nil nil) (evil-delete 22372 23342 'line nil nil) (package-install 'rainbow-mode nil) (evil-delete 23540 23557 'line nil nil) (evil-delete 19884 19885 'line nil nil) (lispyville-change 60 64 'exclusive nil nil) (lispyville-delete 1 30 'line nil nil) (lispyville-delete 1 24 'line nil nil) (lispyville-delete 1 18 'line nil nil) (lispyville-delete 1 21 'line nil nil) (sr-speedbar-toggle) (eval-expression '(not (sr-speedbar-open)) nil) (eval-expression '(when (sr-speedbar-open)) nil) (eval-expression '(when sr-speedbar-open) nil) (kill-buffer "*SPEEDBAR*") (eval-expression '(bool (sr-speedbar-open)) nil) (speedbar nil) (sr-speedbar-open) (package-install 'sr-speedbar nil) (evil-delete 19649 19661 'line nil nil) (evil-delete 1631 1632 'line nil nil) (evil-delete 1857 1858 'line nil nil) (evil-delete 1666 1669 'line nil nil) (evil-delete 1669 1670 'line nil nil) (evil-delete 19438 19439 'line nil nil) (evil-delete 19391 19437 'inclusive nil nil) (evil-delete 19291 19292 'line nil nil) (kill-buffer "*magit: .emacs.d") (evil-delete 2852 2853 'line nil nil) (execute-extended-command nil "nlinum-mode" #("nlinum-mo
global-nlinum-mode
nlinum-mode" 9 10 (read-only nil) 10 17 (face ((:foreground "black") ivy-current-match) read-only nil) 17 25 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 25 28 (face ((:foreground "black") ivy-current-match) read-only nil) 28 29 (read-only nil) 29 37 (face ivy-minibuffer-match-face-2 read-only nil) 37 40 (read-only nil))) (eval-expression '(add-hook 'term-mode-hook 'toggle-truncate-lines) nil) (term "/bin/fish") (execute-extended-command nil "term" #("term
save-buffers-kill-terminal
term-send-up
center-region
term-dynamic-list-filename-completions
set-terminal-coding-system
term-pager-menu
term-previous-matching-input
term-send-raw-meta
insert-file-literally" 4 5 (read-only nil) 5 23 (face ((:foreground "black") ivy-current-match) read-only nil) 23 26 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 26 31 (face ((:foreground "black") ivy-current-match) read-only nil) 31 32 (read-only nil) 32 35 (face ivy-minibuffer-match-face-2 read-only nil) 35 48 (read-only nil) 48 51 (face ivy-minibuffer-match-face-2 read-only nil) 51 59 (read-only nil) 59 62 (face ivy-minibuffer-match-face-2 read-only nil) 62 102 (read-only nil) 102 105 (face ivy-minibuffer-match-face-2 read-only nil) 105 125 (read-only nil) 125 128 (face ivy-minibuffer-match-face-2 read-only nil) 128 141 (read-only nil) 141 144 (face ivy-minibuffer-match-face-2 read-only nil) 144 170 (read-only nil) 170 173 (face ivy-minibuffer-match-face-2 read-only nil) 173 203 (read-only nil) 203 206 (face ivy-minibuffer-match-face-2 read-only nil) 206 210 (read-only nil))) (execute-extended-command nil "visual-line-mode" #("visual-line-mo
visual-line-mode
global-visual-line-mode" 14 15 (read-only nil) 15 28 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 28 31 (face ((:foreground "black") ivy-current-match) read-only nil) 31 39 (read-only nil) 39 52 (face ivy-minibuffer-match-face-2 read-only nil) 52 55 (read-only nil))) (execute-extended-command nil "nlinum-mode" #("nlinum
global-nlinum-mode
nlinum-mode" 6 7 (read-only nil) 7 14 (face ((:foreground "black") ivy-current-match) read-only nil) 14 19 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 19 25 (face ((:foreground "black") ivy-current-match) read-only nil) 25 26 (read-only nil) 26 31 (face ivy-minibuffer-match-face-2 read-only nil) 31 37 (read-only nil))) (execute-extended-command nil "nlinum-mode" #("nlinum-
global-nlinum-mode
nlinum-mode" 7 8 (read-only nil) 8 15 (face ((:foreground "black") ivy-current-match) read-only nil) 15 21 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 21 26 (face ((:foreground "black") ivy-current-match) read-only nil) 26 27 (read-only nil) 27 33 (face ivy-minibuffer-match-face-2 read-only nil) 33 38 (read-only nil))) (avy-goto-char 32 nil) (kill-buffer "*magit: .emacs.d") (evil-delete 21531 22656 'line nil nil) (kill-buffer "*magit: .emacs.d") (evil-delete 22656 22657 'line nil nil) (evil-delete 21531 21532 'line nil nil) (evil-delete 21117 21118 'line nil nil) (evil-delete 5556 5562 'line nil nil) (evil-delete 18854 19059 'line nil nil) (evil-delete 5087 5088 'line nil nil) (evil-delete 5556 5558 'line nil nil) (evil-delete 5158 5159 'line nil nil) (evil-delete 5088 5692 'line nil nil) (evil-delete 5088 5294 'line nil nil) (evil-delete 19059 19060 'line nil nil) (evil-delete 16264 16265 'line nil nil) (evil-delete 14957 14958 'line nil nil) (evil-delete 13673 13674 'line nil nil) (evil-delete 12519 12520 'line nil nil) (evil-delete 11721 11813 'line nil nil) (evil-delete 5476 5477 'line nil nil) (evil-delete 11758 11802 'line nil nil) (evil-delete 10628 10629 'line nil nil) (evil-delete 9804 9805 'line nil nil) (evil-delete 8332 8333 'line nil nil) (evil-delete 7818 7819 'line nil nil) (evil-delete 6742 6744 'line nil nil) (evil-delete 6507 6508 'line nil nil) (evil-delete 5069 5093 'line nil nil) (evil-delete 5069 5116 'line nil nil) (evil-delete 1561 1562 'line nil nil) (evil-delete 346 347 'line nil nil) (eval-expression '(exwm-cm-enable) nil) (exwm-workspace-switch 8) (exwm-workspace-switch 4) (kill-buffer "*ansi-term*") (kill-buffer "Firefox") (linum-mode 'toggle) (eval-expression '(global-linum-mode 0) nil) (lispyville-delete 1 23 'inclusive nil nil) (rename-buffer "Fish" nil) (rename-buffer "Fish<2>" nil) (rename-buffer "fish<2>" nil) (execute-extended-command nil "linum-mode" #("linum-mo
global-nlinum-mode
global-linum-mode
nlinum-mode
linum-mode
avy-linum-mode" 8 9 (read-only nil) 9 17 (face ((:foreground "black") ivy-current-match) read-only nil) 17 24 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 24 27 (face ((:foreground "black") ivy-current-match) read-only nil) 27 35 (read-only nil) 35 42 (face ivy-minibuffer-match-face-2 read-only nil) 42 47 (read-only nil) 47 54 (face ivy-minibuffer-match-face-2 read-only nil) 54 58 (read-only nil) 58 65 (face ivy-minibuffer-match-face-2 read-only nil) 65 73 (read-only nil) 73 80 (face ivy-minibuffer-match-face-2 read-only nil) 80 83 (read-only nil))) (occur-rename-buffer nil 1) (execute-extended-command nil "occur-rename-buffer" #("rename-bu
occur-rename-buffer
message-rename-buffer
rename-buffer" 9 10 (read-only nil) 10 16 (face ((:foreground "black") ivy-current-match) read-only nil) 16 24 (face ((:foreground "black") (background-color . "#6988a1") . ivy-minibuffer-match-face-2) read-only nil) 24 29 (face ((:foreground "black") ivy-current-match) read-only nil) 29 38 (read-only nil) 38 46 (face ivy-minibuffer-match-face-2 read-only nil) 46 52 (read-only nil) 52 60 (face ivy-minibuffer-match-face-2 read-only nil) 60 65 (read-only nil))) (kill-buffer "*ansi-term*")))
(setq exwm-workspace--switch-history '(#("[0] 1  2  3  4  5  6  7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0 [1] 2  3  4  5  6  7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1 [2] 3  4  5  6  7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2 [3] 4  5  6  7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2  3 [4] 5  6  7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2  3  4 [5] 6  7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2  3  4  5 [6] 7  8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2  3  4  5  6 [7] 8  9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2  3  4  5  6  7 [8] 9 " 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green"))) #(" 0  1  2  3  4  5  6  7  8 [9]" 1 2 (face nil) 4 5 (face nil) 7 8 (face nil) 10 11 (face nil) 13 14 (face nil) 16 17 (face nil) 19 20 (face nil) 22 23 (face nil) 25 26 (face nil) 28 29 (face (:foreground "green")))))
(setq shell-command-history '("urxvt" "google-chrome-stable"))
(setq query-replace-history '("anime"))
(setq magit-revision-history '("recengine" "master"))
(setq counsel-git-grep-history '(#("echo" 0 4 (ivy-index 1)) #("faggot" 0 6 (ivy-index 1))))
(setq swiper-history '(#("treemac" 0 7 (ivy-index 0)) #("pcomplete" 0 9 (ivy-index 0)) #("eval-and" 0 8 (ivy-index 0)) #("prompt-read-only" 0 16 (ivy-index 3)) #("dired" 0 5 (ivy-index 0)) #("emacs" 0 5 (ivy-index 0)) #("(use-package ivy" 0 16 (ivy-index 0)) #("ivy" 0 3 (ivy-index 2)) #("eshell" 0 6 (ivy-index 8)) #("shackle" 0 7 (ivy-index 7)) #("define-key" 0 10 (ivy-index 2)) #("lispy" 0 5 (ivy-index 4)) #("sour" 0 4 (ivy-index 0)) #("org org" 0 7 (ivy-index 2)) #("avcodec_allo" 0 12 (ivy-index 0)) #("0.05" 0 4 (ivy-index 0)) #("http_client = " 0 14 (ivy-index 0)) #("handle_response_lists" 0 21 (ivy-index 1)) #("*m_engine" 0 9 (ivy-index 0)) #("QScrip" 0 6 (ivy-index 0)) #("dfinstancewindows" 0 17 (ivy-index 0)) #("windows" 0 7 (ivy-index 1)) #("static_assert" 0 13 (ivy-index 0)) #("tar" 0 3 (ivy-index 0)) #("Down" 0 4 (ivy-index 0)) #("saved names" 0 11 (ivy-index 0)) #("http_client" 0 11 (ivy-index 0)) #("browser" 0 7 (ivy-index 1)) #("delete" 0 6 (ivy-index 5)) #("company" 0 7 (ivy-index 5)) #("company-mode" 0 12 (ivy-index 0)) #("backup" 0 6 (ivy-index 0)) #("jedi" 0 4 (ivy-index 4)) #("autocomplet" 0 11 (ivy-index 1)) #("C-c l" 0 5 (ivy-index 0)) #("dev-lang/python" 0 15 (ivy-index 0)) #("simple-mpc" 0 10 (ivy-index 0)) #("avy" 0 3 (ivy-index 0)) #("avy-goto-ch" 0 11 (ivy-index 0)) #("aw-keys" 0 7 (ivy-index 0)) #("aw-select" 0 9 (ivy-index 1)) #("aw-offset" 0 9 (ivy-index 1)) #("ace-windo" 0 9 (ivy-index 0)) #("nlinum" 0 6 (ivy-index 0)) #("linum" 0 5 (ivy-index 1)) #("yas" 0 3 (ivy-index 4)) #("elpy" 0 4 (ivy-index 1)) #("org" 0 3 (ivy-index 5)) #("05" 0 2 (ivy-index 1))))
(setq ivy-history '(#(".org" 0 4 (ivy-index 0)) #("treemacs" 0 8 (ivy-index 15)) #("scra" 0 4 (ivy-index 0)) #("org" 0 3 (ivy-index 0)) #("scrat" 0 5 (ivy-index 0)) #("ggtags" 0 6 (ivy-index 0)) #("chrome" 0 6 (ivy-index 0)) "process_lists.py" "tools/" #("ansi" 0 4 (ivy-index 0)) #("e" 0 1 (ivy-index 0)) #("term" 0 4 (ivy-index 0)) "Google-chrome<2>" "Google-chrome" #("eshell" 0 6 (ivy-index 0)) #("_Carnival_Phantasm_-_03_\\[BD\\]\\[h264-1080p_FLAC\\]\\[5B861A35\\].mkv" 0 65 (ivy-index 0)) #("TW\\]_Carnival_Phantasm_-_03" 0 27 (ivy-index 0)) "\\[UTW\\]_Carnival_Phantasm_-_07_\\[BD\\]\\[h264-1080p_FLAC\\]\\[D4853209\\].mkv" #("ace-jump" 0 8 (ivy-index 0)) #("art.org" 0 7 (ivy-index 1)) #("audaci" 0 6 (ivy-index 0)) #("ming" 0 4 (ivy-index 0)) "minibuffer.el" #("mingus" 0 6 (ivy-index 1)) #("mingu" 0 5 (ivy-index 0)) #("art" 0 3 (ivy-index 1)) #("art.o" 0 5 (ivy-index 0)) #("Mahjong/" 0 8 (ivy-index 0)) #("spank" 0 5 (ivy-index 1)) "61180026_p0_master1200.jpg" "48177506_p0.png" "55900920_p0.png" #("6116" 0 4 (ivy-index 0)) "50947513_p0.png" "51221305_p0.png" "35391554_p0.jpg" #("yy/" 0 3 (ivy-index 0)) "completion--do-completion" "completion--in-region-1" "completion--in-region" "completion-in-region-function" "funcall" "completion-in-region" #("pcomplete-std-" 0 14 (ivy-index 0)) #("org org" 0 7 (ivy-index 0)) #("-fil" 0 4 (ivy-index 0)) #("esh" 0 3 (ivy-index 0)) #("pcomplete cd" 0 12 (ivy-index 0)) #("smex" 0 4 (ivy-index 1)) #("es" 0 2 (ivy-index 0)) #("+" 0 1 (ivy-index 0)) #("writegoo" 0 8 (ivy-index 0)) #("art." 0 4 (ivy-index 0)) #("org or" 0 6 (ivy-index 0)) #("comint-prompt-read-" 0 19 (ivy-index 0)) #("shell" 0 5 (ivy-index 64)) #("goo" 0 3 (ivy-index 0)) #("mi" 0 2 (ivy-index 0)) "*Org Src org-init.org[ emacs-lisp ]*" #("9 wine" 0 6 (ivy-index 0)) #("playonlinux" 0 11 (ivy-index 1)) #("pyt" 0 3 (ivy-index 0)) #("wine" 0 4 (ivy-index 0)) "Wine<2>" #("playo" 0 5 (ivy-index 0)) "ssh:smith@biribiri.moe:" "ssh:kahr@biribiri.moe:" "ssh:biribiri.moe:" "sudo:localhost:" #("eshe" 0 4 (ivy-index 0)) #("helm-esh-source" 0 15 (ivy-index 1)) #("helm-esh-sou" 0 12 (ivy-index 1)) #("helm-eshell-fu" 0 14 (ivy-index 0)) #("e arguments" 0 11 (ivy-index 0)) #("pcomplete-complet" 0 17 (ivy-index 0)) #("completion functions" 0 20 (ivy-index 0)) #("tags-completion-at-" 0 19 (ivy-index 0)) #("completion-at-point-" 0 20 (ivy-index 0)) #("completion-at-point" 0 19 (ivy-index 5)) #("ion-at-" 0 7 (ivy-index 0)) #("counsel-find-file" 0 17 (ivy-index 5)) "image-dired-cmd-create-thumbnail-program" "image-dired-cmd-create-standard-thumbnail-command" "image-dired-create-thumb" #("image-dired thumbs display" 0 26 (ivy-index 2)) "53162615_p0.png" "wRNwGDo.jpg" "tumblr_oetifwZXgG1u72749o1_1280.jpg" "hentai-foot-fetish-30.jpg" #("51" 0 2 (ivy-index 0)) #("foot" 0 4 (ivy-index 32)) "pZihpwl.jpg" "52221285_p0.png" "55591550_p0.png" "58716908_p0.jpg" "61263195_p0.png" #("ans" 0 3 (ivy-index 0)) "PiX8dS0.jpg" "hentai-foot-fetish-1796.jpg" "ttf/" "fonts/" "accounts.dict" ".trackma/" "adm" "biribiri.moe" #("a" 0 1 (ivy-index 0)) "xonsh/" #("ter" 0 3 (ivy-index 0)) #("ivy-use" 0 7 (ivy-index 0)) #("jpg" 0 3 (ivy-index 3)) "placebo-NEW.mp4" "48311485_p0.png" #("mess" 0 4 (ivy-index 0)) "feet/" "Touhou/" "1493791654056.jpg" "*Backtrace*" #("sc" 0 2 (ivy-index 0)) #("evil-snip" 0 9 (ivy-index 0)) #("shackle" 0 7 (ivy-index 0)) #("neotree" 0 7 (ivy-index 0)) #("steam" 0 5 (ivy-index 0)) "libreoffice-impress" #("chromiu" 0 7 (ivy-index 0)) #("*us" 0 3 (ivy-index 0)) #("python" 0 6 (ivy-index 0)) #("user page" 0 9 (ivy-index 0)) #("fetc" 0 4 (ivy-index 0)) #("*use" 0 4 (ivy-index 0)) #("trackm" 0 6 (ivy-index 0)) #("fetch" 0 5 (ivy-index 0)) "URxvt" #("tosho" 0 5 (ivy-index 0)) #("goog" 0 4 (ivy-index 0)) #("*u" 0 2 (ivy-index 0)) #("chrom" 0 5 (ivy-index 0)) #("ch" 0 2 (ivy-index 0)) #("gn" 0 2 (ivy-index 0)) #("g" 0 1 (ivy-index 1)) #("go" 0 2 (ivy-index 0)) #("pavuco" 0 6 (ivy-index 0)) #("googl" 0 5 (ivy-index 0)) #("dfinstancewindows" 0 17 (ivy-index 1)) "*ansi-term*" #("*" 0 1 (ivy-index 1)) #("trac" 0 4 (ivy-index 0)) #("mpv" 0 3 (ivy-index 1)) #("termin" 0 6 (ivy-index 0)) #("tra" 0 3 (ivy-index 0)) #("rtorrent" 0 8 (ivy-index 0)) #("emms-player-mp" 0 14 (ivy-index 0)) #("emms" 0 4 (ivy-index 0)) #("fet" 0 3 (ivy-index 1)) #("track" 0 5 (ivy-index 0)) #("image+" 0 6 (ivy-index 0)) #("ert-sta" 0 7 (ivy-index 0)) #("rto" 0 3 (ivy-index 0)) "Dwarf_Fortress" "irc.rizon.net:6660" #("f" 0 1 (ivy-index 2)) #("fe" 0 2 (ivy-index 1)) #("user" 0 4 (ivy-index 0)) #("use" 0 3 (ivy-index 0)) #("xelb" 0 4 (ivy-index 0)) #("pytho" 0 5 (ivy-index 0)) #("calc" 0 4 (ivy-index 1)) #("cal" 0 3 (ivy-index 0)) #("py" 0 2 (ivy-index 2)) #("rizon" 0 5 (ivy-index 0)) #("to" 0 2 (ivy-index 0)) #("ri" 0 2 (ivy-index 0)) "fetch_mal_pages.py" #("laun" 0 4 (ivy-index 0)) "10016" #("ansi-" 0 5 (ivy-index 3)) #(":" 0 1 (ivy-index 0)) #("fish" 0 4 (ivy-index 11)) #("emojify" 0 7 (ivy-index 0)) #("ve-hook" 0 7 (ivy-index 0)) #("rizo" 0 4 (ivy-index 0)) #("org-" 0 4 (ivy-index 0)) #("reas" 0 4 (ivy-index 0)) "rainbow-ansi-colors" #("rainbow" 0 7 (ivy-index 1)) #("org o" 0 5 (ivy-index 0)) "util.py" #("test" 0 4 (ivy-index 0)) #("util" 0 4 (ivy-index 0)) "models" "ideas.org" #("magi" 0 4 (ivy-index 0)) "Pipfile" "*epc con 3*" #("magit" 0 5 (ivy-index 0)) #(".py" 0 3 (ivy-index 3)) "fetching-python" #("filezill" 0 8 (ivy-index 0)) #("virtualenv" 0 10 (ivy-index 3)) "kahr" #("buff" 0 4 (ivy-index 0)) #("hydra" 0 5 (ivy-index 1)) #("zathura" 0 7 (ivy-index 0)) #("st" 0 2 (ivy-index 0)) "fish_prompt.fish" "iputils" #("no-li" 0 5 (ivy-index 0)) #("system-packages-pack" 0 20 (ivy-index 0)) #("system-" 0 7 (ivy-index 0)) #("indent-gui" 0 10 (ivy-index 1)) #("multi-ter" 0 9 (ivy-index 1)) "*simple-mpc-main*" #("counsel-p" 0 9 (ivy-index 0)) #("projectile" 0 10 (ivy-index 10)) #("-def" 0 4 (ivy-index 0)) #("win" 0 3 (ivy-index 1)) #("avy" 0 3 (ivy-index 0)) "exwm-input.el" #("ace-" 0 4 (ivy-index 0)) #("ace-w" 0 5 (ivy-index 0)) #("ace" 0 3 (ivy-index 0)) #("ace-win" 0 7 (ivy-index 0)) #("sr-sp" 0 5 (ivy-index 1)) #("bal-lin" 0 7 (ivy-index 1)) #("elscre" 0 6 (ivy-index 0)) "config.fish" #("powerline" 0 9 (ivy-index 0)) #("smart-mo" 0 8 (ivy-index 0)) "global-nlinum-mode" #("nlinum" 0 6 (ivy-index 1)) #("ansi-term" 0 9 (ivy-index 4)) #("an" 0 2 (ivy-index 1)) "60255764_p0.png" "feet" #("dired+" 0 6 (ivy-index 1)) "urxvt" #("linum" 0 5 (ivy-index 0)) "parse_topanime.py" "103" #("ample-th" 0 8 (ivy-index 0)) #("moe" 0 3 (ivy-index 0)) #("j2" 0 2 (ivy-index 1)) #("html" 0 4 (ivy-index 2)) "helloworld.html" #("we" 0 2 (ivy-index 0)) #("or" 0 2 (ivy-index 1)) #("ma" 0 2 (ivy-index 0)) "8888" #("ein" 0 3 (ivy-index 0)) #("jed" 0 3 (ivy-index 0)) #("jedi" 0 4 (ivy-index 1)) #("elpy-modules" 0 12 (ivy-index 1)) "*Org Agenda*" #("elpy" 0 4 (ivy-index 0)) #("agend" 0 5 (ivy-index 1)) "agenda.org" "scheik.org" #("orgtbl-to-tsv" 0 13 (ivy-index 0)) #("agenda*" 0 7 (ivy-index 1)) #("agen" 0 4 (ivy-index 0)) #("ivy-hy" 0 6 (ivy-index 0)) #("ivy" 0 3 (ivy-index 0)) #("ivy-display" 0 11 (ivy-index 0)) #("swiper" 0 6 (ivy-index 0)) #("counsel" 0 7 (ivy-index 0)) #("ivy-us" 0 6 (ivy-index 2)) #("couns" 0 5 (ivy-index 0))))
(setq org-read-date-history '("   " "    "))
(setq file-name-history '(#("/home/kahr/.emacs.d/org-init.org" 0 32 (ivy-index 1)) "/etc/default/grub" "~/.emacs.d/org-init.org" "~/.emacs.d/org-init.el" #("/scp:smith@biribiri.moe:/var/www/toshokan/old/flask.py" 0 54 (ivy-index 6)) #("/scp:smith@biribiri.moe:/var/www/toshokan/old/test.py" 0 53 (ivy-index 13)) #("/scp:smith@biribiri.moe:/home/smith/" 0 1 (ivy-index 0) 1 4 (tramp-default t ivy-index 0) 4 36 (ivy-index 0)) #("/scp:ssh:/biribiri.moe:" 0 1 (ivy-index 0) 1 4 (tramp-default t ivy-index 0) 4 23 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/app/pages/anime_page.py" 0 52 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tools/fix_pages.py" 0 47 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tools/fetch_user_pages.py" 0 54 (ivy-index 2)) #("/home/kahr/Toshokan/toshokan/tools/process_lists.py" 0 51 (ivy-index 0)) #("/home/kahr/anime.org" 0 20 (ivy-index 0)) #("/home/kahr/.emacs.d/org-init.el" 0 31 (ivy-index 1)) #("/home/kahr/art.org" 0 18 (ivy-index 1)) #("/home/kahr/Music/" 0 17 (ivy-index 0)) #("/ssh:smith@biribiri.moe:/home/smith/" 0 36 (ivy-index 0)) #("/home/kahr/Pictures/ayy/feet/" 0 29 (ivy-index 0)) #("/etc/portage/package.use/iputils" 0 32 (ivy-index 2)) #("/home/kahr/.emacs.d/snippets/" 0 29 (ivy-index 0)) #("/home/kahr/.emacs.d/snippets/org-mode/" 0 38 (ivy-index 0)) #("/home/kahr/.emacs.d/" 0 20 (ivy-index 0)) #("/home/kahr/" 0 11 (ivy-index 0)) #("/home/kahr/builds/untrunc/track.cpp" 0 35 (ivy-index 0)) #("/home/kahr/test/broken.mp4" 0 26 (ivy-index 0)) #("/home/kahr/test/c068960_ISO_IEC_14496-12_2015.pdf" 0 49 (ivy-index 0)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/mainwindow.h" 0 62 (ivy-index 0)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/dwarfmodelproxy.cpp" 0 69 (ivy-index 0)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/dwarfmodelproxy.h" 0 67 (ivy-index 0)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/Makefile" 0 54 (ivy-index 1)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/dwarf.cpp" 0 59 (ivy-index 0)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/dfinstancewindows.h" 0 69 (ivy-index 1)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/dfinstancewindows.cpp" 0 71 (ivy-index 0)) #("/home/kahr/Games/DF/therapist/Dwarf-Therapist/src/dfinstancelinux.cpp" 0 69 (ivy-index 0)) #("/home/kahr/.config/mpv/mpv.conf" 0 31 (ivy-index 0)) #("/home/kahr/.trackma/config.json" 0 31 (ivy-index 0)) #("/home/kahr/.xinitrc" 0 19 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tools/fetch_mal_pages.py" 0 53 (ivy-index 1)) #("/home/kahr/Toshokan/toshokan/tools/anime_pages/10016" 0 52 (ivy-index 5)) #("/home/kahr/Toshokan/toshokan/tools/process_mal_pages.py" 0 55 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tests/" 0 35 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tests/__init__.py" 0 46 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tests/recengine/__init__.py" 0 56 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tests/recengine/util/__init__.py" 0 61 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tests/recengine/util/" 0 50 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tests/recengine/util/test_scale_anime_list.py" 0 74 (ivy-index 0)) "/home/kahr/Toshokan/toshokan/.git/COMMIT_EDITMSG" #("/home/kahr/Toshokan/toshokan/app/recengine/__init__.py" 0 54 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/app/recengine/util/__init__.py" 0 59 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/app/recengine/util/" 0 48 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/app/recengine/util/util.py" 0 55 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/app/models/" 0 40 (ivy-index 0)) #("/home/kahr/Code/mahjong.lisp" 0 28 (ivy-index 2)) #("/home/kahr/Code/Mahjong/mahjong.py" 0 34 (ivy-index 2)) "/home/kahr/.config/flake8" "/home/kahr/Toshokan/toshokan/Pipfile" #("/home/kahr/Toshokan/toshokan/ideas.org" 0 38 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/.gitignore" 0 39 (ivy-index 1)) "~/.emacs.d/" #("/home/kahr/Toshokan/toshokan/tools/get_anime_data_from_title.py" 0 63 (ivy-index 0)) #("/home/kahr/Toshokan/" 0 20 (ivy-index 0)) #("/home/kahr/Toshokan/toshokan/tools/" 0 35 (ivy-index 0)) "/home/kahr/Toshokan/toshokan/app/conf/conf.py" "/tmp/fish.Cw6ABj/prompt_pwd.fish" "/tmp/fish.5TidA9/fish_prompt.fish" #("/etc/portage/package.use/cross-i686-elf" 0 39 (ivy-index 4)) "/tmp/fish.Fo4COQ/fish_prompt.fish" #("/home/kahr/.config/fish/config.fish" 0 35 (ivy-index 1)) #("/home/kahr/.Xdefaults" 0 21 (ivy-index 0)) #("/home/kahr/.config/fish/.config.fish.swp" 0 40 (ivy-index 0)) #("/home/kahr/FictionBase/tools/mal_db/final_dump" 0 46 (ivy-index 0)) #("/home/kahr/FictionBase/tools/mal_db/" 0 36 (ivy-index 0)) #("/smith@biribiri.moe" 0 19 (ivy-index 0)) #("/home/kahr/FictionBase/tools/mal_db/pages/103" 0 45 (ivy-index 0)) #("/home/kahr/FictionBase/tools/mal_db/parse_topanime.py" 0 53 (ivy-index 2)) #("/tmp/test.py" 0 12 (ivy-index 0)) #("/tmp/test.html" 0 14 (ivy-index 0)) #("/tmp/kek.tmpl" 0 13 (ivy-index 0)) #("/home/kahr/FictionBase/main.py" 0 30 (ivy-index 0)) #("/home/kahr/FictionBase/tools/mal_db/dl_topanime.py" 0 50 (ivy-index 0)) #("/home/kahr/FictionBase/tools/" 0 29 (ivy-index 0)) #("/home/kahr/FictionBase/tools/malscrap.py" 0 40 (ivy-index 0)) "/home/kahr/FictionBase/.git/COMMIT_EDITMSG" #("/home/kahr/FictionBase/" 0 23 (ivy-index 0)) #("/home/kahr/FictionBase/static/style.css" 0 39 (ivy-index 0)) #("/home/kahr/FictionBase/templates/layout.j2" 0 42 (ivy-index 1)) #("/home/kahr/Website/templates/layout.html" 0 40 (ivy-index 0)) #("/home/kahr/Website/templates/index.html" 0 39 (ivy-index 0)) #("/home/kahr/FictionBase/templates/layout.html" 0 44 (ivy-index 0)) #("/home/kahr/Website/templates/blog/helloworld.html" 0 49 (ivy-index 0)) #("/home/kahr/FictionBase/templates/items/0.j2" 0 43 (ivy-index 0)) #("/home/kahr/FictionBase/templates/items/" 0 39 (ivy-index 0)) #("/home/kahr/Website/website.py" 0 29 (ivy-index 0)) #("/home/kahr/FictionBase/templates/index.j2" 0 41 (ivy-index 0)) #("/home/kahr/Code/test.py" 0 23 (ivy-index 1)) #("/home/kahr/.emacs.d/init.el" 0 27 (ivy-index 1)) #("/home/kahr/Code/Gamedev/game.py" 0 31 (ivy-index 0)) #("/home/kahr/Code/Mahjong/" 0 24 (ivy-index 0)) #("/home/kahr/main/" 0 16 (ivy-index 0)) #("/home/kahr/main/bin/activate" 0 28 (ivy-index 0)) #("/home/kahr/.emacs.d/elpa/monokai-theme-20160419.1444/org" 0 56 (ivy-index 0)) #("/home/kahr/.emacs.d/elpa/monokai-theme-20160419.1444/monokai-theme.el" 0 69 (ivy-index 4)) #("/home/kahr/schuim.txt" 0 21 (ivy-index 0)) #("/home/kahr/scheik.org" 0 21 (ivy-index 1)) #("/home/kahr/lispytutor.el" 0 24 (ivy-index 1)) #("/home/kahr/bronspanning.txt" 0 27 (ivy-index 0)) #("/home/kahr/spanning.txt" 0 23 (ivy-index 0)) #("/home/kahr/Life/agenda.org" 0 26 (ivy-index 3)) "~/Life/agenda.org" "~/gitgud.org" "~/.emacs.d/init.el" "~/scheik.org" "~/art.org" "~/pws.tex" "~/boeken.txt" "~/lispytutor.el" "~/.xinitrc" "~/Code/Lisp/kek.lisp" "~/art.or" "~/.emacs.d/#!home!kahr!art.org#" "~/anime.org"))
(setq calc-alg-entry-history '("arcsinh(sqrt(1000))" "arcsinh(sqrt(55))"))
(setq face-name-history '("treemacs-root-face" "evil-snipe-matches-face" "fic-face" "org-level-1" "default"))
(setq extended-command-history '("lispy-mode" "evil-mode" "flycheck-error-list-goto-error" "flycheck-mode" #("proced" 0 6 (ivy-index 0)) #("count" 0 5 (ivy-index 0)) #("ace-jump-bu" 0 11 (ivy-index 0)) #("package-ins" 0 11 (ivy-index 0)) #("clone buffer" 0 12 (ivy-index 2)) #("count-" 0 6 (ivy-index 0)) #("visual-line-mo" 0 14 (ivy-index 0)) #("profiler-sta" 0 12 (ivy-index 0)) #("m" 0 1 (ivy-index 0)) #("mingu" 0 5 (ivy-index 0)) #("count-wo" 0 8 (ivy-index 0)) #("count-w" 0 7 (ivy-index 0)) #("clone-indirec" 0 13 (ivy-index 0)) #("find-v" 0 6 (ivy-index 0)) #("find-vari" 0 9 (ivy-index 0)) #("pcomplete" 0 9 (ivy-index 0)) #("smex" 0 4 (ivy-index 0)) #("emms stop" 0 9 (ivy-index 1)) #("emms" 0 4 (ivy-index 143)) #("mingus browse" 0 13 (ivy-index 3)) #("mingus add" 0 10 (ivy-index 10)) #("powerline-d" 0 11 (ivy-index 0)) #("mingus cle" 0 10 (ivy-index 1)) #("powerline-revert" 0 16 (ivy-index 0)) #("powerline-reset" 0 15 (ivy-index 0)) #("mingus mod" 0 10 (ivy-index 0)) #("next-line" 0 9 (ivy-index 5)) #("profiler-report" 0 15 (ivy-index 8)) #("writegood" 0 9 (ivy-index 0)) #("visual-line-mod" 0 15 (ivy-index 0)) #("buffer-menu" 0 11 (ivy-index 20)) #("eval-re" 0 7 (ivy-index 0)) #("hydra-eshell/body" 0 17 (ivy-index 0)) #("eshell isearch forward" 0 22 (ivy-index 1)) #("eshell" 0 6 (ivy-index 23)) #("eshell insert buf" 0 17 (ivy-index 0)) #("undo wi" 0 7 (ivy-index 0)) #("shell" 0 5 (ivy-index 16)) #("evil-change-whol" 0 16 (ivy-index 0)) #("emms add directory" 0 18 (ivy-index 2)) #("dired" 0 5 (ivy-index 147)) #("emms browse by" 0 14 (ivy-index 9)) #("emms browse" 0 11 (ivy-index 5)) #("emms browse dire" 0 16 (ivy-index 0)) #("emms browse smar" 0 16 (ivy-index 0)) #("emms-smart-" 0 11 (ivy-index 0)) #("emms-add-direct" 0 15 (ivy-index 1)) #("emms-player-mpd-" 0 16 (ivy-index 11)) #("playlist emms new" 0 17 (ivy-index 1)) #("emms-playlist-mode" 0 18 (ivy-index 14)) #("emms show" 0 9 (ivy-index 1)) #("dired-async" 0 11 (ivy-index 2)) #("dired-async-mo" 0 14 (ivy-index 0)) #("dired-asyn" 0 10 (ivy-index 0)) #("hackl" 0 5 (ivy-index 0)) #("shackle-mo" 0 10 (ivy-index 0)) #("eshell history" 0 14 (ivy-index 2)) #("helm-esh-p" 0 10 (ivy-index 0)) #("helm-esh-pc" 0 11 (ivy-index 0)) #("helm-lisp-compl" 0 15 (ivy-index 1)) #("helm-lisp-completion" 0 20 (ivy-index 1)) #("helm-esh-pcom" 0 13 (ivy-index 0)) #("helm-esh-pcomp" 0 14 (ivy-index 0)) #("describe-variable" 0 17 (ivy-index 0)) #("completion-at-" 0 14 (ivy-index 0)) #("describe-var" 0 12 (ivy-index 1)) #("find-func" 0 9 (ivy-index 0)) #("image-dired" 0 11 (ivy-index 52)) #("dired thumbnail" 0 15 (ivy-index 1)) #("erase-bu" 0 8 (ivy-index 0)) #("eshell clear" 0 12 (ivy-index 0)) #("sudo-" 0 5 (ivy-index 0)) #("counsel " 0 8 (ivy-index 27)) #("complete file" 0 13 (ivy-index 2)) #("helm-complete" 0 13 (ivy-index 0)) #("^counsel-M-x" 0 12 (ivy-index 0)) #("^counsel-describe" 0 17 (ivy-index 0)) #("^counsel-describe-fun" 0 21 (ivy-index 0)) #("apropos" 0 7 (ivy-index 0)) #("apropos " 0 8 (ivy-index 0)) #("^nli" 0 4 (ivy-index 0)) #("^nlinu" 0 6 (ivy-index 0)) #("^describe-variable" 0 18 (ivy-index 0)) #("^ivy-mo" 0 7 (ivy-index 0)) #("^describe-key" 0 13 (ivy-index 1)) #("^completion-at-" 0 15 (ivy-index 0)) #("^ivy-next-line" 0 14 (ivy-index 1)) #("ivy line" 0 8 (ivy-index 0)) #("^ivy-for" 0 8 (ivy-index 0)) #("^package-list-packages" 0 22 (ivy-index 1)) #("^pcomplete" 0 10 (ivy-index 3)) #("^shackl" 0 7 (ivy-index 0)) #("^shack" 0 6 (ivy-index 0)) #("^read on" 0 8 (ivy-index 0)) #("^read onl" 0 9 (ivy-index 0)) #("^undo" 0 5 (ivy-index 30)) #("^apropos" 0 8 (ivy-index 5)) #("calc" 0 4 (ivy-index 0)) #("^evil-snipe-mo" 0 14 (ivy-index 0)) #("describe fa" 0 11 (ivy-index 1)) #("^rainbow" 0 8 (ivy-index 0)) #("^evil-mc-m" 0 10 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 3)) #("^evil-snipe-s" 0 13 (ivy-index 1)) #("^apropos-follow" 0 15 (ivy-index 0)) #("^buffer-menu" 0 12 (ivy-index 19)) #("^shackle-" 0 9 (ivy-index 0)) #("^lispy-double" 0 13 (ivy-index 0)) #("ace window " 0 11 (ivy-index 4)) #("^yas-load-di" 0 12 (ivy-index 0)) #("^yas/lo" 0 7 (ivy-index 0)) #("^neotree" 0 8 (ivy-index 28)) #("^neotree-enter-a" 0 16 (ivy-index 0)) #("^package-re" 0 11 (ivy-index 0)) #("^recover-thi" 0 12 (ivy-index 0)) #("^hexl-find-" 0 11 (ivy-index 0)) #("^company-mo" 0 11 (ivy-index 0)) #("exwm workspace switch" 0 21 (ivy-index 2)) #("buffer list" 0 11 (ivy-index 0)) #("^exwm " 0 6 (ivy-index 6)) #("^exwm buff" 0 10 (ivy-index 0)) #("^ansi-" 0 6 (ivy-index 0)) #("^exwm workspace " 0 16 (ivy-index 10)) #("^sudo-e" 0 7 (ivy-index 0)) #("^display-time-mo" 0 16 (ivy-index 0)) #("^display-time-mode" 0 18 (ivy-index 0)) #("^exwm workspace move " 0 21 (ivy-index 1)) #("^exwm-workspace-mo" 0 18 (ivy-index 0)) #("^exwm workspace mo" 0 18 (ivy-index 0)) #("^erc" 0 4 (ivy-index 16)) #("^emms-player-mpd-sta" 0 20 (ivy-index 0)) #("^emms-player-mpd-conn" 0 21 (ivy-index 0)) #("^emms mpd sta" 0 13 (ivy-index 0)) #("^emms mpd " 0 10 (ivy-index 8)) #("emms mpd" 0 8 (ivy-index 0)) #("^emms" 0 5 (ivy-index 143)) #("^imagex" 0 7 (ivy-index 2)) #("^image-mode-fit-" 0 16 (ivy-index 0)) #("^image-mode-fi" 0 14 (ivy-index 0)) #("^image-ne" 0 9 (ivy-index 1)) #("^exwm-flo" 0 9 (ivy-index 0)) #("ansi-t" 0 6 (ivy-index 0)) #("^exwm move" 0 10 (ivy-index 1)) #("exwm move" 0 9 (ivy-index 1)) #("^erc-sc" 0 7 (ivy-index 1)) #("linux" 0 5 (ivy-index 0)) #("^package-insta" 0 14 (ivy-index 3)) #("^package-li" 0 11 (ivy-index 1)) #("^package-auto" 0 13 (ivy-index 0)) #("^package-l" 0 10 (ivy-index 1)) #("^package-rein" 0 13 (ivy-index 0)) #("^calc" 0 5 (ivy-index 0)) #("^profiler-stop" 0 14 (ivy-index 0)) #("^profiler-report" 0 16 (ivy-index 8)) #("^profiler-star" 0 14 (ivy-index 0)) #("^profiler" 0 9 (ivy-index 10)) #("^profile" 0 8 (ivy-index 2)) #("system packages inst" 0 20 (ivy-index 2)) #("fullscre" 0 8 (ivy-index 1)) #("fullscreen" 0 10 (ivy-index 1)) #("^exwm full" 0 10 (ivy-index 1)) #("exwm full" 0 9 (ivy-index 1)) #("^venv-deactivate" 0 16 (ivy-index 0)) #("rename-buf" 0 10 (ivy-index 2)) #("^emojify-mo" 0 11 (ivy-index 0)) #("^emojify-inser" 0 14 (ivy-index 0)) #("^emojify" 0 8 (ivy-index 2)) #("^package-in" 0 11 (ivy-index 4)) #("^yas-expan" 0 10 (ivy-index 0)) #("^erc-scroll" 0 11 (ivy-index 1)) #("^package-instal" 0 15 (ivy-index 3)) #("^customize-group" 0 16 (ivy-index 0)) #("^shell" 0 6 (ivy-index 2)) #("^transpose" 0 10 (ivy-index 0)) #("^comint-mo" 0 10 (ivy-index 0)) #("^ansi" 0 5 (ivy-index 0)) #("^make-di" 0 8 (ivy-index 0)) #("^ans" 0 4 (ivy-index 0)) #("^ansi-term" 0 10 (ivy-index 0)) #("ansi-" 0 5 (ivy-index 0)) #("rename-bu" 0 9 (ivy-index 2)) #("^venv-work" 0 10 (ivy-index 0)) #("^list-bu" 0 8 (ivy-index 0)) #("counsel linu" 0 12 (ivy-index 0)) "eval-buffer" #("^company-je" 0 11 (ivy-index 0)) #("^list-pa" 0 8 (ivy-index 0)) #("^jedi-" 0 6 (ivy-index 0)) #("^flycheck-mo" 0 12 (ivy-index 0)) #("ac-fl" 0 5 (ivy-index 0)) #("^company-jedi" 0 13 (ivy-index 0)) #("^auto-compl" 0 11 (ivy-index 0)) #("^rename-bu" 0 10 (ivy-index 0)) #("counsel" 0 7 (ivy-index 52)) #("^venv-wo" 0 8 (ivy-index 0)) #("^nlin" 0 5 (ivy-index 0)) #("^switch-to-bu" 0 13 (ivy-index 2)) #("^swiper" 0 7 (ivy-index 0)) #("^swiper-av" 0 10 (ivy-index 0)) #("^avy-goto-line-abo" 0 18 (ivy-index 0)) #("^avy-goto-line" 0 14 (ivy-index 2)) #("^hydra-launch/body" 0 18 (ivy-index 0)) #("^buffer-menu-thi" 0 16 (ivy-index 0)) #("^avy-goto-char-t" 0 16 (ivy-index 0)) #("^dired renam" 0 12 (ivy-index 2)) #("^dired" 0 6 (ivy-index 106)) #("^counsel-find-fil" 0 17 (ivy-index 1)) #("^counsel-li" 0 11 (ivy-index 1)) #("^rename" 0 7 (ivy-index 2)) #("^system-packages-up" 0 19 (ivy-index 0)) #("^sudo" 0 5 (ivy-index 0)) #("^sudo-" 0 6 (ivy-index 0)) #("^system-packages-list" 0 21 (ivy-index 1)) #("^describe-var" 0 13 (ivy-index 0)) #("^system-packages" 0 16 (ivy-index 3)) #("^package-ins" 0 12 (ivy-index 3)) #("^indent-guid" 0 12 (ivy-index 0)) #("^describe-fa" 0 12 (ivy-index 0)) #("^multi-term" 0 11 (ivy-index 1)) #("^multi" 0 6 (ivy-index 1)) #("^multi-ter" 0 10 (ivy-index 0)) #("package-in" 0 10 (ivy-index 4)) #("^simple-mpc" 0 11 (ivy-index 6)) #("^list-pack" 0 10 (ivy-index 0)) #("^package-refres" 0 15 (ivy-index 0)) #("^mpc" 0 4 (ivy-index 0)) #("^swiper-all" 0 11 (ivy-index 1)) #("^avy-goto-char-timer" 0 20 (ivy-index 0)) #("^avy-goto-char-tim" 0 18 (ivy-index 0)) #("ansi" 0 4 (ivy-index 0)) #("^windmove" 0 9 (ivy-index 2)) #("^ace-sele" 0 9 (ivy-index 0)) #("^copy-re" 0 8 (ivy-index 1)) #("^yank" 0 5 (ivy-index 1)) #("^package-ref" 0 12 (ivy-index 0)) #("^ace-wind" 0 9 (ivy-index 0)) #("^ace-win" 0 8 (ivy-index 1)) #("^sr-speedbar-toggle" 0 19 (ivy-index 0)) #("^speedbar" 0 9 (ivy-index 36)) #("^sr-s" 0 5 (ivy-index 0)) #("^exwm re" 0 8 (ivy-index 1)) #("nlinum-mo" 0 9 (ivy-index 1)) #("term" 0 4 (ivy-index 60)) #("nlinum" 0 6 (ivy-index 1)) #("nlinum-" 0 7 (ivy-index 1)) #("^linum" 0 6 (ivy-index 0)) #("linum-mo" 0 8 (ivy-index 3)) #("^ansi-t" 0 7 (ivy-index 0)) #("^powerline" 0 10 (ivy-index 0)) #("^powerline-defau" 0 16 (ivy-index 0)) #("^powerline-cen" 0 14 (ivy-index 1)) #("^powerline-vim" 0 14 (ivy-index 0)) #("^powerline-reset" 0 16 (ivy-index 0)) #("^powerline-vim-" 0 15 (ivy-index 0)) #("^powerline-de" 0 13 (ivy-index 0)) #("^sml/" 0 5 (ivy-index 0)) #("linum" 0 5 (ivy-index 3)) #("mento" 0 5 (ivy-index 0)) #("package-inst" 0 12 (ivy-index 3)) #("^diredp-do-disp" 0 15 (ivy-index 0)) #("^yas-glo" 0 8 (ivy-index 0)) #("^yas-g" 0 6 (ivy-index 0)) #("^yas-gl" 0 7 (ivy-index 0)) #("^ya" 0 3 (ivy-index 2)) #("^ac-linum" 0 9 (ivy-index 0)) #("^copy-fil" 0 9 (ivy-index 1)) #("^dired mark" 0 11 (ivy-index 0)) #("^org-mo" 0 7 (ivy-index 4)) #("^web-mod" 0 8 (ivy-index 1)) #("^ac-lin" 0 7 (ivy-index 0)) #("^ample" 0 6 (ivy-index 2)) #("^moe" 0 4 (ivy-index 1)) #("^jedi:ac" 0 8 (ivy-index 0)) #("^jedi:setup" 0 11 (ivy-index 0)) #("^web-mo" 0 7 (ivy-index 1)) #("^customize" 0 10 (ivy-index 21)) #("^web-mode" 0 9 (ivy-index 1)) #("^yas" 0 4 (ivy-index 1)) #("^jedi:" 0 6 (ivy-index 0)) #("^jedi:setu" 0 10 (ivy-index 0)) #("^jedi" 0 5 (ivy-index 0)) #("^pack insta" 0 11 (ivy-index 5)) #("^ein: notebook" 0 14 (ivy-index 5)) #("^ein:notebooklist-open" 0 22 (ivy-index 2)) #("^company-mod" 0 12 (ivy-index 0)) #("^jedi:install-ser" 0 17 (ivy-index 0)) #("jedi" 0 4 (ivy-index 0)) #("^company-complete" 0 17 (ivy-index 4)) #("^company-compl" 0 14 (ivy-index 4)) #("company-comp" 0 12 (ivy-index 4)) #("^describe-vari" 0 14 (ivy-index 0)) #("variable" 0 8 (ivy-index 4)) #("^flymake-mo" 0 11 (ivy-index 0)) #("^count-wor" 0 10 (ivy-index 1)) #("^visua" 0 6 (ivy-index 0)) #("^visual" 0 7 (ivy-index 0)) #("^elpy-confi" 0 11 (ivy-index 0)) #("^flycheck-mode" 0 14 (ivy-index 0)) #("^flycheck-mod" 0 13 (ivy-index 0)) #("^elpy-con" 0 9 (ivy-index 0)) #("^pyvenv-ac" 0 10 (ivy-index 0)) #("^package-inst" 0 13 (ivy-index 3)) #("^pyvenv-acti" 0 12 (ivy-index 0)) #("^pyvenv-workon" 0 14 (ivy-index 0)) #("^elpy-co" 0 8 (ivy-index 0)) #("^pyvenv-activate" 0 16 (ivy-index 0)) #("^ivy-av" 0 7 (ivy-index 0)) #("^count ds" 0 9 (ivy-index 1)) #("^org table expo" 0 15 (ivy-index 0)) #("^lispyville->" 0 13 (ivy-index 0)) #("^lispyville-yank" 0 16 (ivy-index 0)) #("^recover" 0 8 (ivy-index 0)) #("^count-wo" 0 9 (ivy-index 1)) #("^count" 0 6 (ivy-index 4)) #("^org tab expo" 0 13 (ivy-index 0)) #("^org-agenda-rese" 0 16 (ivy-index 0)) #("^packg-install" 0 14 (ivy-index 0)) #("^packag" 0 7 (ivy-index 0)) #("^counsel-m" 0 10 (ivy-index 2)) #("find-library" 0 12 (ivy-index 1)) #("swiper" 0 6 (ivy-index 1)) #("counsel-m" 0 9 (ivy-index 0)) #("package-reinsta" 0 15 (ivy-index 0)) #("package-reinst" 0 14 (ivy-index 0)) #("describe-va" 0 11 (ivy-index 1)) #("find" 0 4 (ivy-index 8)) "org-toggle-inline-images" "org-reload" "org-agenda" "switch-window" "report-emacs-bug" "lisp-mode" "write-file" "comment-region" "load-theme" "markdown-mode" "org-publish-project" "recover-session" "kill-buffer" "count-matches" "count-words-region" "xwidget-webkit-browse-url" "slime" "downcase-region" "ace-jump-mode" "avy-goto-char-in-line" "avy-goto-char" "evil-avy-goto-char" "avy-goto-char-2" "eww" "describe-font" "dired-details-toggle"))
(setq buffer-name-history '("mpv-shot0001.jpg" "htop" "rtorren" "*ansi-term*<9>" "Bless" "*top*" "Python2.7" "t" "art.org<2>" "URxvt" "*ansi-term*<4>" " *EMMS Playlist*" #("min" 0 3 (ivy-index 0)) "*Help*" "*Memory-Profiler-Report 2017-05-19 22:57:01*" "*CPU-Profiler-Report 2017-05-19 22:57:01*" #("goo" 0 3 (ivy-index 0)) #("scra" 0 4 (ivy-index 0)) "*eshell*" "Browsing by: album" "Music" "DaniA_l_Lohues" "04_Achter_t_Huus.mp3" "Browsing by: artist" "org-init.org" "minibuffer.el" "Wine" "smith" "home" "test.js" "helm-eshell.el" "feet" "*Completions*" "*Packages*" "1493791654056.jpg" #("help" 0 4 (ivy-index 0)) #("apro" 0 4 (ivy-index 0)) "*Buffer List*" " *NeoTree*" "shut_it_down.jpg" "TcgiaDW.jpg" "Vlc" "Pavucontrol<2>" "*User page fetch*" "Stonesense" "*Backtrace*" "config.json" "Rtorrent" "Trackma" "Terminal" "*ansi-term*<7>" "Tor Browser" "53756151_p0.png" "rtorrent" "kahr" "Downloads" "df_43_05_linux.tar.bz2" "item_helm.txt (df_43_05_linux.tar.bz2)" "fetch_user_pages.py" "trackma" "*ansi-term*" "*Python*" "#toshokan" "irc.rizon.net:6660" "Pavucontrol" "Google-chrome<2>" "Wine<3>" "*CPU-Profiler-Report 2017-05-05 16:48:02*" "*Memory-Profiler-Report 2017-05-05 16:48:02*" "*ansi-term*<2>" "launcher-term" "*ansi-term*<5>" "Surf" "python-fetch" "*ansi-term*<3>" "*SPEEDBAR*" "*magit-diff: toshokan" ".gitignore" "mahjong.py" "flake8" "Pipfile" "toshokan-shell" "fetch_mal_pages.py" "*magit: toshokan" "*Messages*" #(".py" 0 3 (ivy-index 4)) "get_anime_data_from_title.py" "fetching-python" "util.py" "main.py" "classes.py" "ONTHOUDEN_AYY_KEKESEKSEKKESKJSEKJFKJAEKJF.TXT.CO.UK.EXE.BIGTITS.JPG.EXE" "ned.doc" ".lesshst" ".gitconfig" "tree.png" "%backup%~" "wew.png" "kahr@Lain.26795:1480110966" ".dmrc" ".dircolors" "sudoku.py" "RhakUtil.py" "Rhak.py" "kernel.c" "mahjong.lisp" "libmahjong.py" "JLBE.py" "FuwaUtil.py" "Fuwa.py" "cook.py" "Ayy" "kek.tar.gz" "*Warnings*" "2C/*Org Src org-init.org[ emacs-lisp ]*" "abbrev_defs" "Zathura" "higurashi-term" "steam-term" "*ansi-term*<6>" "*Colors*" "*ansi-term*<8>" "conf.py" "cross-i686-elf" "iputils" "fish_prompt.fish" "fish" "*Customize Face: Fic Face*" "*simple-mpc-main*" "*simple-mpc-current-playlist*" #("mpc" 0 3 (ivy-index 0)) #("mpc*" 0 4 (ivy-index 0)) "*MPC Genres*" "*MPC-Songs*" "*magit: .emacs.d" "Firefox" "Fish" "Fish<2>" "fish<2>" "test.html" "malscrap.py" "*unsent mail*" "*magit: FictionBase" "*Customize Option: Pyvenv Activate*" "*Elpy Config*" "*Async Shell Command*" "*Org Agenda*" "*Org-Babel Error Output*" "1.png" "geleidbaarheid.png" "scheik.org" "monokai-theme.el" "*Org Agenda(a:2017-04-11)" "*Org Agenda(a:2017-04-12)" "agenda.org" "*unsent mail to bug-gnu-emacs@gnu.org*" "config" "*less*" "*xwidget webkit: Google *" "*slime-compilation*" "*terminal*"))
(setq regexp-history '("besturings" "besturingssys" "unix" "Unix" "^$"))
(setq minibuffer-history '("/usr/bin/fish" "/bin/fish" "kahrkunne" "indent-for-tab-command" "value" "fagg" "mime type" "1" "2" "4" "3" "12" "5" "6" "0" "eshell" "shell" "var" "variable" "6660" "image-mode-hook" "/bin/zsh" "24" "3600" "520000" "15" "134.65" "515" "510" "audacity" "recengine" "/home/kahr/.emacs.d/org-init.or" "/home/kahr/org-init.org" "/home/kahr/Life/agenda.org" "/home/kahr/Life/agenda" "/home/kahr/gitgud.org" "/home/kahr/.emacs.d/init.el" "/home/kahr/schei.org" "orgtbl-to-tsv" "/home/kahr/geleidbaarheid.txt" "gnuplo" "gnuplot-" "ess" "/home/kahr/scheik" "monokai-use" "/home/kahr/.emacs.d/pa" "/home/kahr/scheik.org" "art" "agen" "/home/kahr/art.org" "/home/kahr/Life/" "/home/kahr/.emacs.d" "/home/kahr/Life/agen" #("***" 0 2 (face org-level-3 org-category "agenda" fontified t) 2 3 (face org-level-3 org-category "agenda" fontified t)) "/home/kahr/.emacs.d/init" "/home/kahr/.emacs.d/org-init.org" "/home/kahr/Life/calendar.org" "/home/kahr/agenda.org" "/home/kahr/pws.tex" "/home/kahr/.emacs.d/org-or" "/home/kahr/boeke" "/home/kahr/lispytu" "ace-win" "exwm-x" "exwm-workspace-switch" "/home/kahr/.xinitr" "start-process-shell" "start-process-sh" "exwm" "\"xelb\" package broken" "xelb" "exw" "/home/kahr/boeken.txt" "scrat" "/home/kahr/Code/cl-" "lispyvil" "lispy" "/home/kahr/Code/noi" "/home/kahr/Code/Lisp/kek.li" "/home/kahr/.emacs.d/org-.o" "/home/kahr/art.or" "/home/kahr/.emacs.d/art.org" "/home/kahr/.org" "/home/kahr/.emacs.d/org-o" "fancy-spl" "random-spl" "/home/kahr/.emacs.d/org-" "/home/kahr/.emacs.d/org-i" "/home/kahr/Code/mah" "pyt" "/home/kahr/Code/Mahjong/mahjo" "mono" "/home/kahr/Code/JekyllBlog/blog/_posts/skill-of-taste-fol" "/home/kahr/Code/JekyllBlog/blog/_posts/20" "/home/kahr/poetry.org" "/home/kahr/Code/JekyllBlog/blog/_posts/th" "/home/kahr/Youtube/Scripts/On_the_skill_of_taste.org" "writegoo" "/home/kahr/Code/JekyllBlog/blog/_posts/" "/home/kahr/Code/JekyllBlog/blog/_posts/2017-02-01-skill-of-taste-follow-up.md" "/home/kahr/Code/JekyllBlog/blog/index.md" "markdown-mode" "/home/kahr/Code/JekyllBlog/blog/_posts/2017-01-30-get-into-action.markdown" "blog" "" "blo" #("style" 0 5 (font-lock-face web-mode-html-tag-face tag-type end tag-name "style")) "/home/kahr/Website/templates/header.html" "/home/kahr/Website/templates/blog/skill" "base." "/home/kahr/Website/org/skilltaste.org" "/home/kahr/Website/" "/home/kahr/.emacs.d/org" #("lel" 0 3 (fontified t)) "/home/kahr/Website/templates/base.html" "/home/kahr/Website/org/higurashithemes.org" "/home/kahr/Website/org/tasteanecdotes.org" #("blog-static" 0 11 (fontified t font-lock-fontified t font-lock-multiline t face org-block)) "/home/kahr/Website/org/helloworld.org" "/home/kahr/Website/templates/kek.html" "/home/kahr/Website/templates/login.html" "web" "setq" "/home/kahr/Website/web" "/home/kahr/megumin_game.org" "erc im" "/home/kahr/Code/Website/website.lisp" "/home/kahr/.emacs.d/init.or" "load-th" "/home/kahr/.emacs.d/org-init.o" "tao" "ta" "/home/kahr/.config/polybar/hlwm.sh" "/home/kahr/.config/polybar/config" "pw" "/home/kahr/pws.te" "http://google.com/" "/home/kahr/pws.org" "/home/kahr/pws.t" "evileol" "/home/kahr/.syncplay" "evil-move" "evil-moveba" "/home/kahr/" "evilmove" "stum" "slime$" "org" "/home/kahr/.stumpwmrc" "/home/kahr/.emacs.d/orgorg" "/home/kahr/.xini" "/home/kahr/.Xdefaults" "/home/kahr/.emacs.d/smith-theme.el" "/home/kahr/.emacs.d/meme-theme.el" #("+BEGIN_SRC" 0 10 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t)) "/home/kahr/.emacs.d/elpa/theme" "lisp" "format" #("failed" 0 6 (fontified t)) "bar" "settin" "/home/kahr/Code/cl-notifyd/" "/home/kahr/Code/cl-notifyd/notif.li" "/home/kahr/Code/cl-notifyd/settings.lisp" #("defun" 0 5 (face font-lock-keyword-face fontified t)) "/home/kahr/olzraiti_dotfiles/dotfiles/bin/bar_notifyd" "/home/kahr/.emacs.d/orgor" "/home/kahr/Code/cl-notifyd/noili" "/home/kahr/.emacs.d/org.o" "/home/kahr/pws.or" "when" "switch-wi" "avy" "/home/kahr/.emacs.d/org.or" #("done" 0 4 (face font-lock-keyword-face fontified t)) #("cd" 0 2 (fontified t)) "slim" "/home/kahr/Code/cl-notifyd/cl-notifyd.lisp" "/home/kahr/olzraiti_dotfiles/dotfiles/bin/noti" "/home/kahr/Code/cl-notifyd/cl-notifyd.fasl" "/home/kahr/Code/Bullet_Hell/init.lisp" "/home/kahr/Code/VN_Engine/Engine.lisp" "discordapp.com" "reddit.com/r/emacs" "/home/kahr/Website/templates/layo" "/home/kahr/Website/templates/index.html" "/home/kahr/Website/templates/layout.html" #("*" 0 1 (mouse-face highlight follow-link t shr-url "http://www.fullstackpython.com/flask.html" face shr-link help-echo "http://www.fullstackpython.com/flask.html" image-displayer (lambda (url start end) (when url (if (string-match "\\`cid:" url) nil (url-retrieve url 'shr-image-fetched (list (current-buffer) start end) t t)))) image-url "https://icons.duckduckgo.com/ip2/www.fullstackpython.com.ico" shr-alt "*" keymap (keymap (13 . eww-follow-link) (111 . shr-save-contents) (118 . shr-browse-url) (117 . shr-copy-url) (119 . shr-copy-url) (73 . shr-insert-image) (mouse-2 . shr-browse-url) (follow-link . mouse-face) (27 keymap (9 . shr-previous-link)) (9 . shr-next-link) (122 . shr-zoom-image) (105 . shr-browse-image) (97 . shr-show-alt-text)) image-size nil rear-nonsticky (display) display (image :type png :data "\211PNG

   IHDR   \303   \252   \204\3738  	IDATx\332\355\235\321\215\333H\206\267\200 \247t\317\367\242\324\300)A%\270\225\340T\202\201k@%\250\225\240|\336\200N\234E\274\246d\255\305\237\372\340C\200 \231_\344g\215fH\316\333\333\315\370\366\327\337\345\305\216\353/v\336\310\233C\371\366\304\370\347\277\313\213/\326_\354\274\221\3656\207\265\264\312Z\202\370dx\250\343|\315\206 \334\263\303\302\207~\330\360a\337\263f\241\2266\230\216i\211\226\240>9\250\200p\265\243x\360|\376\360?\327r\254\245I\342\223\366\204*0W\253\235\275\374\320\257V%\322R:tT:\352+\235 'g \235|\347\324\322g\320\"\342\223\323\206I \206\2633\200\3166\355I\213\210\216\363\206\263\210U	^\307\277\274\376\351\241\333=:\213X\251C\275\207 R\323b\307\367\254\322Q0`\300 0 \300\2000`\300 \354&\345\204\241\312\262\247\355\314\356\314p\316P\250\2353p\315	4'\320\344&\205\315\347QY^d\321\322\335\364d\311Z\255$^\3079@\310\224\265Z\251\3243\264	\212H\\5 b \314\251gh\244tS\222J\267\306*\262d\252\303\204@XZ\351\246\345[2\265V\275\223\375\337k\327@O=\354\336\266\237]M\366\357\274\215hM\313\373[\267x\322'\255\202O\236\317\354\355y8A\250xRB \201\200\300 @`  0\200\300 ` \273x\317\232iw\363\212fZ\261r V\360j\253\326a\241_\326\262b\343\370z\255K\311\244a\214\357sy\202f\343\256\325\336\321\312\351\2271\200_\206g\374(\276\356\3530RO\223\364\372\271\277H\366&\350Er|*\307/h\320/\335\2027A/_AA\3709\341\2310\244 \301\374\322\366K7\215\370\272\374\341\273@=C3citN\2644\222\2573\321\321(P\373s\215\347\204a\200\341\344\37453T \371F\360\305\227JC '
\365 \243s\215\235\302/R:h\257;\306\203\255jD.\302\371\325}\200a\205\231{6H\3050 \300\2000`\300 0 \300\360\277|b`\370+	zY`\220\331\237\317r\350\366#aO\344\330\337\333\271z\312pmA\244\320}L\222V2]'\333
L\266s\302\240\320\242\261u\302\240\320\275u\350P\210\257\343mL\344_\241\311[\323`K\245)x\306j\341\204\241\356\227\321\343\271\370\2625\352t\242\263j\203\255\372\244\232\272\375!\220\276\240j\206\255\370\262	G*&\346\202\360\210HE>\375\322\202\363K\244\237~\211_\306\327c6\351v\201\335]W.\260U:E\355[r\231\337=[E\213mU\312\373%S|\355\242U\314\322-QZ\370\240\"t A\204` \210\320:\200\320\300\200` \206\275\353\260\234\230f\303C\221\346\331koo\202\272\264.{[\2725k]\261\304/\305.\342\313\252\"eJvK\276%\354E\312`\355\226\336\237l\301\323\253\373E&\276H\324\233\250\325/\343\234\267\267L|\261\203z\252\360\315a\214\\\3303#\205;z\352\3630C\307(_\"\305\255\2066Qq\217\202_\232$:\332\353d\312\362F'#e\237\261\336R\361%U\260\375x\211\224\245!@IC \272p\323*\346-Un\251\2267\300 0 \300\2000`\300 0 \300\300\207\251a('\320
0L\272\305=tS\270\2211S:F\357L\307PHc\350:\244.Eo&{p\302py;4;J\324k\244t\247\327\225*|\304\220\201\324\372\336\353\251\370
\374\340\207\271UU\226\260\227\2102\203_\344\342\313&\334I\236l.\317\224}\266\"7\371x\336\241\374\262\260|U3\276\\Zw\317\226\\\200\367G[\271\323E\275\241\225\3162\324\306P\365\226\266b\323\2114\361\225\276U\314\264\236Y\210\275\372& \202 \300   \300\300 `` \204N|e:Q8\250\362a\207x\233\"\356&\2762\245c(j	\3340\371c\363\3446\265O2%\352)k\342l\211\2209\3652\245p\253k\242O\347\223L\305=\357/CA\214\215\303':\305=\231\312>EJ%\347Gu\237\341\355\240V\366\231\242!\200\255KS\321Y:}\320\205\373\325\255b\262\264W\271Y&\311\303 \326\377\251R\202!\2159`\250\201\201\276I\300 \300 \300 \300 \300 \300 \300 \300\300\326*0 \207nsa(u\327\211/\3221\302v\237\222\244cH]\212\256\320\355\271u\302\220F\213\265\307\314\320/V\307'\335\236GoM\203i\211\374K\344\256\317\260~\261\223:>\371=\276\354\272\241)\340D\2479#\363\352\322hJ\345~\204\226O\214\340.\320D\273'\313>Sh\261\217\351S\2227\204\226O\354N\200\306\326zs\354\356zl\246\275\377\337\345J\205\347K\265\254e\253i1(\373\226x\265l\273\367\351N\231|B\253Z\333\320\332 \200 @  \200\201\300\300 `` \304gA]-<\314X\353\320\255\235\233\266\360Z\326\264]iqq\334\350\360\360j\225\347a\367\301\222\332\252''R\362a\277'-\"9U\375\241 Q/\254\226\357A3=\247$@L\277a	TS\340\333if
w-ep-S\353\205\200(\256]\241\370\242sP\367-O\241R
-\366}=\333\366x}\350
ey\2233\200&-\343\236\264\\m\200a\374tK4\240\225\216eE\212\206 \366\335\223\245\271\201N\227!.\256;i\251\263hy \202L\313\2338\322\324`\300\2000` \200\206\\0\226s\317!-}-\300@\356\257>g\250\223\300P
\301P\275e	 \2453g\216\207n\272\235\226HN\206DZ\322dN\206\350i\302\267\3268\250AK\234\245\253\301\320H\265\305\376v\350g\326 \364\312\277\244Bo\272\316\253#x\257\330\323\237\326\250\247\240\273.\305\314 *\202qJ\244\245\233\243\303\332\353\367A\253\335\212\317^\315C\220m\324\247
\307j\325\265\330\222)\3027\304\340nL`\277H\365FV\274\2558\320O\213\275)\352\231v\367|`\246\255\352c\21364\263oe0\200\201\301 `\340\3110\200\300 `x-\226~\260c\352i\243V\275ua+W\320r\240\245M\244\345\360\314\241\225\351h\303\373\304\216\312\247`=0\233\205=\223\226C\300\336\244MZ\237O\263m\305\203g\361E\301\373\22463A\210\257C\2444\257v>\364J@K\351\324Rg\320\"\342\223\352:\331N`\262'g \235\264t{\322\"_\335u\262\323?*5\252w\242\255\271\367\244E\252Z\252{\201\376\353\330\266R\213\307\356\221J|\225J0\324Y\310q_\227DK'_\300\200a\300\200a\300\200a\300\200a\300\200a\300\300n\273I)a\340\234A\357\234\241P;g\340-\234@\223\233Dn\322r\223N2\361%\262\274\250ezV;\313Z\255\245\342+Y=CX\313a\247\365\255T|\254D\232B\360\237\303B-\321ii\245\233\226O>\324\332n\331&|\315\350-1\264D\327\361?^\372\202\265\310\364\254    IEND\256B`\202" :ascent 100))) "pythonf lask" "*eww*" "http://localhost:5000/" "web-mo" "/home/kahr/.emacs.d/snippets/web" "/home/kahr/.emacs.d/snippets/html" "localhost:5000" "*s" "/home/kahr/Website/website.py" "python flask" "pws." "100" "36.78" "/home/kahr/Code/cl-notifyd" "/home/kahr/.emacs.d/elpa/moe" "/home/kahr/.emacs.d/elpa/moe-theme-20161129.115/moe-t" "/home/kahr/.emacs.d/elpa/moe-theme-20161129.115/" "/home/kahr/.emacs.d/" "set-back" "zen" "monoc" "set-background-color" "moe-th" "<remap>" "what is a mainframe" "http://google.com" "/home/kahr/.emacs.d/org-ini.o" "/home/kahr/.emacs.d/org-init" "/home/kahr/.emacs.d/org-ini" "/home/kahr/.Xd" "/home/kahr/.emacs.d/.mc-lists.el" "/home/kahr/.emacs.d/.mc"))
(setq helm-M-x-input-history '("ivy" "ivy-av" "packag" "visu" "org-table-expo" "org-plo" "org-plot" "org-plot/gnupl" "org-plot/gn" "packa" "package-" "package-insta" "package-refres" "package-install" "org-toggle-inlin" "reload" "agenda" "vis" "coun" "window" "package-rein" "pack" "package" "package-in" "report" "package-list-p" "Emacs" "package-re" "lisp" #("Smith" 0 5 (fontified t)) "cou" "count" "writegoo" "write-fil" "describe-variable" "eval-bu" "comment-reg" "load" "evil-mo" "write" "visua" "vi" "lo" "linum" "lin" "c" "markdo" "load-" "org" "org-" "or" #("somehow" 0 7 (fontified t)) #("</div>" 0 6 (face org-block org-no-flyspell t font-lock-fontified t fontified t)) #("this" 0 4 (fontified t)) "o" "ansi" "web" "org-init" "recover-s" #("Kahr" 0 4 (fontified t)) #("skill" 0 5 (fontified t)) "org-publi" "web-mo" "term" "descr" "pa" "theme" "kill-bu" #("vormt" 0 5 (fontified t)) #("verbinden" 0 9 (fontified t)) "co" #("ontwikkelaars" 0 13 (fontified t)) #("Unix" 0 4 (face (font-latex-sectioning-1-face) fontified t)) "c ou" "eshe" "count-words" "count-ma" "count-" "count-wor" "count-words-reg" "word" "webki" "slim" "esh" "downcase" "split-sexp" "es" "sl" "ace-win" "switch-" "avy-goto-lin" "ac" "avy char in " "avy" "ace-j" "avy-goto-char" "evil-avy-goto-char" #("cur-fifo" 0 8 (fontified t)) "avy-goto-char-2" "avy-goto-" "slime" #("Like" 0 4 (image-size nil rear-nonsticky (display) display (image :type gif :data "GIF89a 
 \304  \346\360\3666\202\271/~\2677\203\272\352\362\370\313\336\355\316\341\356N\221\302\360\365\372\255\314\342\320\342\357\353\363\370o\245\315\315\340\356)z\2655\202\271B\212\275\251\312\341-}\266@\211\275\327\346\361\325\345\360t\251\317\305\333\353K\217\300'y\264$w\263\377\377\377            !\371   ,     
  5\340&\216di\236c$@M1I	d\2326uF\220W\355\373\322\202\366\3238%FQc1\277\301\316T\220\324
\324\246\2029PJ! ;" :ascent 100) help-echo #("Like" 0 1 (face variable-pitch shr-indentation 0) 1 4 (face variable-pitch)) image-displayer (lambda (url start end) (when url (if (string-match "\\`cid:" url) nil (url-retrieve url 'shr-image-fetched (list (current-buffer) start end) t t)))) image-url "https://ma.twimg.com/twitter-mobile/81201efba703672b064fb0266aa00d5a7f021a95/images/sprites/tweet_heart.gif" shr-alt "Like" keymap (keymap (13 . shr-browse-url) (111 . shr-save-contents) (118 . shr-browse-url) (117 . shr-copy-url) (119 . shr-copy-url) (73 . shr-insert-image) (mouse-2 . shr-browse-url) (follow-link . mouse-face) (27 keymap (9 . shr-previous-link)) (9 . shr-next-link) (122 . shr-zoom-image) (105 . shr-browse-image) (97 . shr-show-alt-text)))) #("forms" 0 5 (face variable-pitch)) "ew" #("Kekekekekekeke" 0 1 (face variable-pitch shr-indentation nil) 1 14 (face variable-pitch)) "an" #("Internal" 0 1 (face (variable-pitch (variable-pitch (:height 1.3 :weight bold))) shr-indentation nil) 1 8 (face (variable-pitch (variable-pitch (:height 1.3 :weight bold))))) "eww" #("xah-rename-eww-hook" 0 19 (fontified t)) #("support" 0 7 (keymap (keymap (13 . eww-follow-link) (111 . shr-save-contents) (118 . shr-browse-url) (117 . shr-copy-url) (119 . shr-copy-url) (73 . shr-insert-image) (mouse-2 . shr-browse-url) (follow-link . mouse-face) (27 keymap (9 . shr-previous-link)) (9 . shr-next-link) (122 . shr-zoom-image) (105 . shr-browse-image) (97 . shr-show-alt-text)) mouse-face highlight follow-link t help-echo "http://flask.pocoo.org/docs/testing/" shr-url "http://flask.pocoo.org/docs/testing/" face (variable-pitch shr-link))) "calc" "tex-vi" "visual-lin" "l" "load-th" "describe-fon" "describe-fa" "ansi-" "webkit" "visual" "dire" "dired-detail" "dired" "flush-lines"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("%s/list_total/last_fetched_list" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31)) #(";w" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("%s/pages_count/pages" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20)) #("%s/serach/search" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16)) #("%s/rightbox/leftbox" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19)) #("%s/anime.id/anime.uid" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("quit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("%s/concious/conscious/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23)) #("%s/times/cdot/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15)) #("'<,'>%s/,/./g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("%s/wordt ik/word ik" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19)) #("%s/vindt ik/vind ik" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19)) #("e" 0 1 (ex-index 1)) #("%s/reviewer/critic" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("%s/Lisp machine/Lisp Machine" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("%s/monokai/smith" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16)) #("%s/align-text/center-text" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25)) #("%s/fix-body/align-text/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24)) #("%s/pad-in/in-pad/g" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18))))
(setq read-expression-history '("(global-unset-key (kbd \"C-c t\"))" "(length '(1 2 3 4))" "(nth 5 '(1 2 3 4 5 6 7))" "(random 100)" "(random 5)" "(pcomplete/rm)" "(while (pcomplete-here (pcomplete-all-entires) nil 'expand-file-name))" "(pcomplete (pcomplete-all-entries) nil 'expand-file-name)" "(emms-standard)" "(emms-default-players)" "(emms-playlist-mode-go)" "(emms)" "(eshell-parse-arguments (point-marker) (save-excursion (eshell-bol) (point)))" "(completion-at-point :matcher #'counsel--find-file-matcher)" "image-dired-cmd-create-thumbnail-program" "(remove)" "ayy" "(shell-command \"touch /home/kahr/abcdefg.txt\")" "(counsel-M-x \"\")" "(define-key eshell-mode-map (kbd \"<tab>\") nil)" "(define-key ivy-mode-map (kbd \"<tab>\") nil)" "(keymap-symbol (current-local-map))" "(current-active-maps)" " " "(equal \"image\" \"image\")" "(eq \"image\" \"image\")" "(mailcap-mime-types)" "(mailcap-extension-to-mime \"/home/kahr/wew.png\")" "(kbd \"\\\"\")" "(add-to-list 'emms-player-list 'emms-player-mpd)" "(setq emms-player-mpd-server-port \"6600\")" "(setq emms-player-mpd-server-name \"localhost\")" "(emms-all)" "(add-to-list 'evil-insert-state-modes 'image-mode)" "image-mode-hook" "(image-mode-hook)" "(add-hook 'image-mode-hook 'evil-insert-state)" "(evil-insert-state)" "(define-key term-raw-map (kbd \"C-c o\") (term-send-raw-string \"\\C-c\"))" "(define-key term-raw-map (\"kbd C-c o\") (term-send-raw-string \"\\C-c\"))" "(define-key term-raw-map (kbd \"C-p\") nil)" "(term-set-escape-char ?\\C-p)" "(xcb:connect-to-socket \"/tmp/.X11-unix/X5\")" "(xcb:connect)" "(xcb :connect)" "(set (make-local-variable 'scroll-conservatively) 100)" "(add-to-list 'erc-mode-hook (lambda ()
                              (set (make-local-variable 'scroll-conservatively) 100)))" "(add-hook 'erc-insert-post-hook 'erc-scroll-to-bottom)" "(setq browse-url-generic-program \"google-chrome-stable\")" "(setq rainbow-ansi-colors nil)" "(eval-after-load \"term\"
  '(progn (term-set-escape-char ?\\C-c)
          (define-key term-raw-map (kbd \"C-c\") nil)))" "(term-set-escape-char ?\\C-a)" "(defun sudo-edit (&optional arg)
  \"Edit currently visited file as root.

With a prefix ARG prompt for a file to visit.
Will also prompt for a file to visit if current
buffer is not visiting a file.\"
  (interactive \"P\")
  (if (or arg (not buffer-file-name))
      (find-file (concat \"/sudo:root@localhost:\"
                         (ido-read-file-name \"Find file(as root): \")))
    (find-alternate-file (concat \"/sudo:root@localhost:\" buffer-file-name))))" "(setq system-packages-packagemanager 'emerge)" "(kbd \"s-<left>\")" "(kbd \"s-left\")" "(windmove-default-keybindings 'meta)" "aw-keys" "(aw--make-backgrounds (aw-window-list))" "test-var" "(setq test-var (mapcar (lambda (wnd) (cons (aw-offset wnd) wnd)) (aw-window-list)))" "(aw-offset (caddr (aw-window-list)))" "(aw-offset (car (aw-window-list)))" "(aw-window-list)" "(ace-window-list)" "(aw-select \"test\")" "(aw-select)" "(avy-read)" "(exwm-input--init)" "(cdr '(1 . 2))" "(cadr '(1 . 2))" "(list '(1 2 3))" "(car 1)" "(cadr '(1 2 3 4))" "(cadr '(1 . 64))" "(cadr (1. 64))" "(exwm-init)" "(not (sr-speedbar-open))" "(when (sr-speedbar-open))" "(when sr-speedbar-open)" "(bool (sr-speedbar-open))" "(add-hook 'term-mode-hook 'toggle-truncate-lines)" "(exwm-cm-enable)" "(global-linum-mode 0)" "(global-nlinum-mode 1)" "(exwm-randr-workspace-output-plist)" "(ac-linum-workaround)" "(setq jedi:complete-on-dot t)" "(setq jedi :complete-on-dot t)" "(setq monokai-use-variable-pitch nil)" "(setq monokai-use-variable-pitch f)" "(setq monokai-use-variable-pitch 0)" "(exwm-workspace-switch 2)" "(sh-cmd \"xterm\")" "(start-process-shell-command \"xterm\" nil \"xterm\")" "(start-process-shell-command \"xterm\")" "(start-process-shell-command \"rofi -show run\")" "(use-fancy-splash-screens-p)" "t" "(find-file fancy-splash-image)" "'fancy-splash-image" "(fancy-splash-image)" "(concatenate 'string \"kek\" \"ayy\")" "(append \"kek\" \"ayy\")" "(nth (random (length '(1 2 3))) '(1 2 3))" "(length '(1 2 3))" "(directory-files (expand-file-name \"~/Pictures/ayy/feet\"))" "(directory-files \"~/Pictures/ayy/feet\" &optional FULL MATCH NOSORT)" "(org-publish \"blog\" t)" "(website-html-preamble)" "(blog-header)" "(blog-header \"kek\")" "(with-temp-buffer (insert-file-contents \"~/Website/templates/header.html\" (buffer-string)))" "(setq web-mode-engine \"jinja2\")" "(load-theme 'tao-yin)" "(load-theme tao-yin)" "(load-theme tao-ying)" "(setq evil-move-beyond-eol t)" "(setq evil-move-beyond-eol nil)" "(setq evil-move-cursor-back nil)" "(setq avy-keys (number-sequence ?a ?z))" "(setq avy-all-windows nil)" "(moe-dark)" "(load-theme)" "(set-background-color \"#101010\")" "(set-background-color \"#000000\")" "(set-background-color \"#ffffff\")" "(set-background-color #ffffff)" "(setq moe-light-pure-white-background-in-terminal t)" "(moe-light)" "with-editor-emacsclient-executable" "savehist-additional-variables" "version-control" "delete-old-versions" "backup-directory-alist" "(backup-directory-alist)"))
(setq evil-jumps-history '((485 "/home/kahr/Toshokan/toshokan/app/pages/manga_page.py") (1 "/home/kahr/Toshokan/toshokan/app/pages/manga_page.py") (197 "/home/kahr/Toshokan/toshokan/app/pages/search.py") (25895 "/home/kahr/.emacs.d/org-init.org") (25521 "/home/kahr/.emacs.d/org-init.org") (25575 "/home/kahr/.emacs.d/org-init.org") (1 "/home/kahr/.emacs.d/org-init.org") (665 "/home/kahr/Toshokan/toshokan/app/pages/anime_page.py") (65 "/home/kahr/Toshokan/toshokan/app/pages/animelist_import.py") (1 "/home/kahr/Toshokan/toshokan/res/css/style.less") (8387 "/home/kahr/.emacs.d/org-init.el") (8274 "/home/kahr/.emacs.d/org-init.el") (8270 "/home/kahr/.emacs.d/org-init.el") (8234 "/home/kahr/.emacs.d/org-init.el") (8200 "/home/kahr/.emacs.d/org-init.el") (1 "/home/kahr/.xinitrc")))
(setq kill-ring '("(defun what-face (pos)
  (interactive \"d\")
  (let ((face (or (get-char-property (pos) 'read-face-name)
                  (get-char-property (pos) 'face))))
    (if face (message \"Face: %s\" face) (message \"No face at %d\" pos))))" #("dark" 0 4 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) #("dark gray\")" 0 9 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 9 10 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 10 11 (rear-nonsticky t fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block))) #(")

    :bind
      (:map global-map
	  (" 0 1 (rear-nonsticky t fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 1 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 12 19 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 19 20 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 20 24 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24 39 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 40 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block))) #("magenta" 0 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) #("blue16" 0 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) #(")

    :bind
      (:map global-map
	  (" 0 1 (rear-nonsticky t fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 1 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 12 19 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 19 20 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 20 24 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24 39 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 40 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block))) #(")

    :bind
      (:map global-map
	  (" 0 1 (rear-nonsticky t fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 1 7 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 7 12 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 12 19 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 19 20 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-2-face org-block)) 20 24 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-builtin-face org-block)) 24 39 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block)) 39 40 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (rainbow-delimiters-depth-3-face org-block))) #("gray16" 0 5 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block)) 5 6 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) #("
" 0 1 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t rear-nonsticky t fontified t yank-handler (evil-yank-line-handler nil t))) #("(set-face-background 'hl-line \"gray16\")
" 0 36 (fontified t yank-handler (evil-yank-line-handler nil t)) 36 37 (fontified t yank-handler (evil-yank-line-handler nil t)) 37 38 (fontified t yank-handler (evil-yank-line-handler nil t)) 38 39 (fontified t rear-nonsticky t yank-handler (evil-yank-line-handler nil t)) 39 40 (yank-handler (evil-yank-line-handler nil t))) #(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #("0" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) #("-" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) #("M" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-string-face org-block))) "(set-face-background 'hl-line \"gray15\")" #("	treemacs-width             25
" 0 30 (fontified nil yank-handler (evil-yank-line-handler nil t)) 30 31 (fontified t yank-handler (evil-yank-line-handler nil t))) #("  (global-set-key (kbd \"C-c t\") #'treemacs)
" 0 2 (fontified t yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t face (rainbow-delimiters-depth-2-face) yank-handler (evil-yank-line-handler nil t)) 3 18 (fontified t yank-handler (evil-yank-line-handler nil t)) 18 19 (fontified t face (rainbow-delimiters-depth-3-face) yank-handler (evil-yank-line-handler nil t)) 19 23 (fontified t yank-handler (evil-yank-line-handler nil t)) 23 30 (fontified t face font-lock-string-face yank-handler (evil-yank-line-handler nil t)) 30 31 (fontified t face (rainbow-delimiters-depth-3-face) yank-handler (evil-yank-line-handler nil t)) 31 42 (fontified t yank-handler (evil-yank-line-handler nil t)) 42 43 (fontified t face (rainbow-delimiters-depth-2-face) yank-handler (evil-yank-line-handler nil t)) 43 44 (fontified t yank-handler (evil-yank-line-handler nil t))) "  (:map global-map
        (\"M-0\"       . treemacs-select-window)
        (\"C-x t 1\"   . treemacs-delete-other-windows)
        (\"C-x t t\"   . treemacs)
        (\"C-x t B\"   . treemacs-bookmark)
        (\"C-x t C-t\" . treemacs-find-file)
        (\"C-x t M-t\" . treemacs-find-tag))" #("  
" 0 2 (fontified nil yank-handler (evil-yank-line-handler nil t)) 2 3 (fontified t yank-handler (evil-yank-line-handler nil t))) "" "" "" "" "" "  (:map global-map
        (\"M-0\"       . treemacs-select-window)
        (\"C-x t 1\"   . treemacs-delete-other-windows)
        (\"C-x t t\"   . treemacs)
        (\"C-x t B\"   . treemacs-bookmark)
        (\"C-x t C-t\" . treemacs-find-file)
        (\"C-x t M-t\" . treemacs-find-tag)))" "(setq-local imenu-create-index-function #'ggtags-build-imenu-index)" #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("    " 0 3 (fontified t) 3 4 (fontified t)) #("s" 0 1 (fontified t face font-lock-function-name-face)) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("    " 0 4 (fontified t)) #("    Base = declarative_base()
" 0 4 (fontified t yank-handler (evil-yank-line-handler)) 4 8 (face font-lock-variable-name-face fontified t yank-handler (evil-yank-line-handler)) 8 27 (fontified t yank-handler (evil-yank-line-handler)) 27 28 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler)) 28 29 (face (rainbow-delimiters-depth-1-face) fontified t yank-handler (evil-yank-line-handler)) 29 30 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) "class User(Base):
        __tablename__ = 'users'

        name = Column(String, unique=True, primary_key=True)
        last_online = Column(Date)
        gender = Column(Integer) # 0, 1, 2 for male/female/autism
        birthday = Column(Date)
        location = Column(String)
        joined = Column(Date)
        nposts = Column(Integer)
        nreviews = Column(Integer)
        nrecs = Column(Integer)
        nbposts = Column(Integer)
        nclubs = Column(Integer)

" #("    " 0 4 (fontified t)) #("    " 0 4 (fontified t)) #("    " 0 4 (fontified t)) #("    " 0 4 (fontified t)) #("j" 0 1 (fontified t face font-lock-string-face)) #("list" 0 4 (fontified t face font-lock-string-face)) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #(", metadata" 0 10 (fontified t)) #(" " 0 1 (fontified t)) #("    " 0 4 (fontified t)) #("postgresql" 0 10 (fontified t face font-lock-string-face)) #("Float" 0 5 (fontified t)) "if not database_exists(engine.url):
    create_database(engine.url)" #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #(" " 0 1 (fontified t)) #(" " 0 1 (fontified t)) #(" " 0 1 (fontified t)) #(" " 0 1 (fontified t)) #(" " 0 1 (fontified t))))
(setq search-ring '("fic-mode" "org-init.el" "jedi" "littering" "elpy" "helm" "monokai-height" "org-" "org-headline" "font" "org" "tangle no" "hiervoor" "ook sp" "spraak" "bepaalde b"))
(setq regexp-search-ring '("treemac" "\\<nrecs\\>" "pcomplete" "eval-and" "prompt-read-only" "dired" "\\.\\(GIF\\|JP\\(?:E?G\\)\\|P\\(?:BM\\|GM\\|N[GM]\\|PM\\)\\|SVG\\|TIFF?\\|X\\(?:[BP]M\\)\\|gif\\|jp\\(?:e?g\\)\\|p\\(?:bm\\|gm\\|n[gm]\\|pm\\)\\|svg\\|tiff?\\|x\\(?:[bp]m\\)\\)\\'" "emacs" "\\((use-package\\).*?\\(ivy\\)" "ivy" "eshell" "shackle" "\\<))\\>" "define-key" "lispy" "sour"))
